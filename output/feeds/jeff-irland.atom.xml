<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jeff's Skinner Box</title><link href="/" rel="alternate"></link><link href="None/feeds/jeff-irland.atom.xml" rel="self"></link><id>/</id><updated>2016-07-17T18:46:00-04:00</updated><entry><title>UPS Controlled Shutdown During Power Failure</title><link href="/posts/2016/Jul/17/ups-controlled-shutdown-during-power-failure/" rel="alternate"></link><published>2016-07-17T18:46:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-07-17:posts/2016/Jul/17/ups-controlled-shutdown-during-power-failure/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.apcmedia.com/salestools/JGNY-8XT6LC/JGNY-8XT6LC_R1_EN.pdf?sdirect=true"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="APC Back-UPS 1080 Provides Battery Backup &amp; Surge Protector for Electronics and Computers (Front Image)" alt="WABAC Pic" src="/images/APC_Back-UPS_NS_1080_front.jpg" width="156" height="250" /&gt;
&lt;/a&gt;
&lt;a href="http://www.apcmedia.com/salestools/JGNY-8XT6LC/JGNY-8XT6LC_R1_EN.pdf?sdirect=true"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="APC Back-UPS 1080 Provides Battery Backup &amp; Surge Protector for Electronics and Computers (Back Image)" alt="WABAC Pic" src="/images/APC_Back-UPS_NS_1080_back.jpg" width="119" height="250" /&gt;
&lt;/a&gt;
I purchased a &lt;a href="http://en.wikipedia.org/wiki/Uninterruptible_power_supply"&gt;uninterruptible power supply&lt;/a&gt;,
specifically the &lt;a href="https://www.apc.com/products/resource/include/techspec_index.cfm?base_sku=BN1080G&amp;amp;tab=documentation"&gt;APC Back-UPS NS 1080&lt;/a&gt;,
to smooth out the power dips that are far too frequent in my home.
This product comes with the &lt;a href="http://www.apc.com/products/family/?id=129"&gt;PowerChute&lt;/a&gt; software to provide safe system shutdown
in the event of an extended power outage.
Unfortunately, this software isn't supported on Linux,
but there is an alternative to PowerChute.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Apcupsd"&gt;&lt;code&gt;apcupsd&lt;/code&gt;&lt;/a&gt; (the name stands for APC UPS Daemon) is a &lt;a href="http://en.wikipedia.org/wiki/Daemon_(computing)"&gt;daemon&lt;/a&gt; that runs on Linux
that allows the computer to interact with (almost all recent)
&lt;a href="http://www.apc.com/"&gt;American Power Conversion Corp (APC)&lt;/a&gt;
&lt;a href="http://en.wikipedia.org/wiki/Uninterruptible_power_supply"&gt;uninterruptible power supplies (UPS)&lt;/a&gt;.
During a power failure, &lt;code&gt;apcupsd&lt;/code&gt; informs users about the loss of utility power
and that a shutdown may occur.
If utility power is not restored,
a system shutdown will follow when the battery is exhausted, a specified timeout expires,
a specified battery charge percentage is reached,
or a specified battery runtime
(based on internal UPS calculations and determined by power consumption rates) expires.
If the utility power is restored before one of the these shutdown conditions is met,
&lt;code&gt;apcupsd&lt;/code&gt; will inform users of this and the shutdown will generally be cancelled.&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;For my UPS,
the  &lt;code&gt;apcupsd&lt;/code&gt; daemon will be communicating with the UPS via a USB connection.
To make sure that your USB subsystem can see the UPS,
plug in the UPS and connect the USB cable to your computer.
Then just run &lt;code&gt;lsusb&lt;/code&gt; from a shell prompt (see below, output included):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# the lsusb command can show you the hubs connected to your system&lt;/span&gt;
$ lsusb | grep American

Bus &lt;span style="color: #FF6600"&gt;003&lt;/span&gt; Device 005: ID 051d:0002 American Power Conversion Uninterruptible Power Supply
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Device File Name for the UPS&lt;/h2&gt;
&lt;p&gt;Under Linux, each and every hardware device, including USB ports,
are treated as a file and call a &lt;a href="http://en.wikipedia.org/wiki/Device_file"&gt;device file&lt;/a&gt;.
A device file allows a user to access hardware devices,
but shields the users from the technical details about the hardware.
A conventional serial port will typically have a device file such as
&lt;code&gt;/dev/ttyS0&lt;/code&gt;, &lt;code&gt;/dev/ttyS1&lt;/code&gt;, etc. but a USB serial ports can appear as
&lt;code&gt;/dev/ttyUSB0&lt;/code&gt;, &lt;code&gt;/dev/ttyUSB1&lt;/code&gt;, etc. or even appear in &lt;code&gt;/dev/usb&lt;/code&gt; as in my Ubuntu Linux system.&lt;/p&gt;
&lt;p&gt;When your device is plugged in, Linux assigns the device file name
as it sees fit and isn’t always predicable (&lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;it doesn’t have to be this way&lt;/a&gt;).
From the output of &lt;code&gt;lsusb&lt;/code&gt;, you can deduce what device file your serial device is connected too.
The string &lt;code&gt;Bus 003 Device 005&lt;/code&gt; and a search of the directory &lt;code&gt;/dev/bus&lt;/code&gt;
tells you that the device file is &lt;code&gt;/dev/bus/usb/003/005&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Linux creates device nodes dynamically on the fly as they are needed.
It is basically a hotplug system, freeing the user from  making node assignments,
but also means you have to search around to find where Linux put your device file.
The &lt;code&gt;apcupsd&lt;/code&gt; takes care of all this, so you don't need to create a
&lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;persistent device name&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Never the less, if your curious about where things are located,
running of the &lt;code&gt;lsusb&lt;/code&gt; command above tells us
UPS's VendorID:ProductID pair is &lt;code&gt;051d:0002&lt;/code&gt;.
Using the &lt;code&gt;udevadm info -a -n /dev/bus/usb/003/005&lt;/code&gt; command,
you conclude that the serial number of the device is &lt;code&gt;0000:00:14.0&lt;/code&gt;.
See below: (command and output)&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# get the serial number of the UPS device&lt;/span&gt;
udevadm info -a -n /dev/bus/usb/003/005 | grep ATTRS&lt;span style="color: #555555"&gt;{&lt;/span&gt;serial&lt;span style="color: #555555"&gt;}&lt;/span&gt;

    ATTRS&lt;span style="color: #555555"&gt;{&lt;/span&gt;serial&lt;span style="color: #555555"&gt;}==&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;0000:00:14.0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Armed with this information and following guidance from &lt;a href="http://hackaday.com/2009/09/18/how-to-write-udev-rules/"&gt;this post&lt;/a&gt;,
I could have update the &lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;UDEV rules&lt;/a&gt;.
But &lt;strong&gt;Don't Do This&lt;/strong&gt;, since from my experimenting,
I believe it will cause problems with &lt;code&gt;apcupsd&lt;/code&gt;.
It appears that the daemon is designed to deal with all this.&lt;/p&gt;
&lt;h2&gt;Installing and Configuring the UPS Daemon&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;apcupsd&lt;/code&gt; daemon is easy to install
and is well documented at "&lt;a href="https://help.ubuntu.com/community/apcupsd"&gt;apcupsd - Official Ubuntu Documentation&lt;/a&gt;".
If you want to see the stat of the UPS through the browser,
you can also install &lt;code&gt;apcupsd-cgi&lt;/code&gt; package.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install the apcupsd daemon and browser package&lt;/span&gt;
sudo apt-get install apcupsd apcupsd-cgi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next you edit the &lt;code&gt;apcupsd&lt;/code&gt; configuration file &lt;code&gt;/etc/apcupsd/apcupsd.conf&lt;/code&gt;.
Here are the modifications I made to this file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# UPS name, max 8 characters&lt;/span&gt;
UPSNAME HOME_UPS

&lt;span style="color: #0099FF; font-style: italic"&gt;# Defines the type of cable connecting the UPS to your computer.&lt;/span&gt;
UPSCABLE usb

&lt;span style="color: #0099FF; font-style: italic"&gt;# the type of UPS you have&lt;/span&gt;
UPSTYPE usb

&lt;span style="color: #0099FF; font-style: italic"&gt;# with a usb type UPS apcupsd can autodetect the device,&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# so you should comment out the DEVICE setting&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#DEVICE /dev/ttyS0&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# UPS should do a self test every two weeks&lt;/span&gt;
SELFTEST 336
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you must edit the file &lt;code&gt;/etc/default/apcupsd&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Defaults for apcupsd initscript&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Apcupsd-devel internal configuration&lt;/span&gt;
&lt;span style="color: #003333"&gt;APCACCESS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/sbin/apcaccess
&lt;span style="color: #003333"&gt;ISCONFIGURED&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;yes
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Starting Things Up&lt;/h1&gt;
&lt;p&gt;To start/stop the &lt;code&gt;apcupsd&lt;/code&gt; daemon manually, just execute this command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# start the apcupsd daemon&lt;/span&gt;
sudo /etc/init.d/apcupsd start

&lt;span style="color: #0099FF; font-style: italic"&gt;# to check if the demon is in fact running&lt;/span&gt;
ps aux | grep --invert-match grep | grep apcupsd

&lt;span style="color: #0099FF; font-style: italic"&gt;# stop the apcupsd daemon&lt;/span&gt;
sudo /etc/init.d/apcupsd stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The UPS daemon can be manual started/stopped, but also,
the command &lt;code&gt;/etc/init.d/apcupsd&lt;/code&gt; is automatically invoked at system startup and shutdown
and is governed by the &lt;a href="http://linux.die.net/man/8/chkconfig"&gt;&lt;code&gt;chkconfig&lt;/code&gt;&lt;/a&gt; procedures.&lt;/p&gt;
&lt;p&gt;To get a snapshot of the UPS's status, run the command &lt;code&gt;apcaccess status&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the output below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# UPS status check&lt;/span&gt;
$ apcaccess status

APC      : 001,036,0901
DATE     : 2015-02-07 10:59:40 -0500
HOSTNAME : desktop
VERSION  : 3.14.10 &lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #FF6600"&gt;13&lt;/span&gt; September 2011&lt;span style="color: #555555"&gt;)&lt;/span&gt; debian
UPSNAME  : desktop
CABLE    : USB Cable
DRIVER   : USB UPS Driver
UPSMODE  : Stand Alone
STARTTIME: 2015-02-07 10:59:39 -0500
MODEL    : Back-UPS NS1080G
STATUS   : ONLINE
LINEV    : 121.0 Volts
LOADPCT  :  20.0 Percent Load Capacity
BCHARGE  : 100.0 Percent
TIMELEFT :  36.1 Minutes
MBATTCHG : &lt;span style="color: #FF6600"&gt;5&lt;/span&gt; Percent
MINTIMEL : &lt;span style="color: #FF6600"&gt;3&lt;/span&gt; Minutes
MAXTIME  : &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; Seconds
SENSE    : Medium
LOTRANS  : 088.0 Volts
HITRANS  : 142.0 Volts
ALARMDEL : &lt;span style="color: #FF6600"&gt;30&lt;/span&gt; seconds
BATTV    : 27.0 Volts
LASTXFER : No transfers since turnon
NUMXFERS : 0
TONBATT  : &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; seconds
CUMONBATT: &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; seconds
XOFFBATT : N/A
SELFTEST : NO
STATFLAG : 0x07000008 Status Flag
SERIALNO : 3B1405X05714
BATTDATE : 2014-01-28
NOMINV   : &lt;span style="color: #FF6600"&gt;120&lt;/span&gt; Volts
NOMBATTV :  24.0 Volts
NOMPOWER : &lt;span style="color: #FF6600"&gt;650&lt;/span&gt; Watts
FIRMWARE : 914.L2   .D USB FW:
END APC  : 2015-02-07 10:59:43 -0500
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This shows that the UPS daemon is configured to do the following thing:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Parameter&lt;/th&gt;
&lt;th align="center"&gt;Value&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MBATTCHG&lt;/td&gt;
&lt;td align="center"&gt;5%&lt;/td&gt;
&lt;td align="left"&gt;If the battery charge percentage (BCHARGE) drops below this value, apcupsd will shutdown your system. Value is set in the configuration file (BATTERYLEVEL).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MINTIMEL&lt;/td&gt;
&lt;td align="center"&gt;3 Min&lt;/td&gt;
&lt;td align="left"&gt;apcupsd will shutdown your system if the remaining runtime equals or is below this point.  Value is set in the configuration file (MINUTES).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MAXTIME&lt;/td&gt;
&lt;td align="center"&gt;0 Sec&lt;/td&gt;
&lt;td align="left"&gt;apcupsd will shutdown your system if the time on batteries exceeds this value.  A value of zero disables the feature. Value is set in the configuration file (TIMEOUT).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These parameters say something about how the UPS is perfroming
(see &lt;a href="http://www.apcupsd.com/manual/manual.html#apcupsd-status-logging"&gt;apcupsd Status Logging&lt;/a&gt; section in the apcupsd User Manual):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Parameter&lt;/th&gt;
&lt;th align="center"&gt;Value&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;STARTTIME&lt;/td&gt;
&lt;td align="center"&gt;time stamp&lt;/td&gt;
&lt;td align="left"&gt;The time/date that &lt;code&gt;apcupsd&lt;/code&gt; was started (ex. 2015-02-07 10:59:39 -0500).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;STATUS&lt;/td&gt;
&lt;td align="center"&gt;ONLINE&lt;/td&gt;
&lt;td align="left"&gt;The current status of the UPS (ONLINE, ONBATT, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;LINEV&lt;/td&gt;
&lt;td align="center"&gt;121.0 V&lt;/td&gt;
&lt;td align="left"&gt;The current line voltage as returned by the UPS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;LOADPCT&lt;/td&gt;
&lt;td align="center"&gt;20.0%&lt;/td&gt;
&lt;td align="left"&gt;The percentage of load capacity as estimated by the UPS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;BCHARGE&lt;/td&gt;
&lt;td align="center"&gt;100.0%&lt;/td&gt;
&lt;td align="left"&gt;The percentage charge on the batteries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;TIMELEFT&lt;/td&gt;
&lt;td align="center"&gt;36.1&lt;/td&gt;
&lt;td align="left"&gt;The remaining runtime left, in minutes on batteries as estimated by the UPS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;LOTRANS&lt;/td&gt;
&lt;td align="center"&gt;088.0 V&lt;/td&gt;
&lt;td align="left"&gt;The line voltage below which the UPS will switch to batteries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HITRANS&lt;/td&gt;
&lt;td align="center"&gt;142.0 V&lt;/td&gt;
&lt;td align="left"&gt;The line voltage above which the UPS will switch to batteries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;SELFTEST&lt;/td&gt;
&lt;td align="center"&gt;NO&lt;/td&gt;
&lt;td align="left"&gt;The results of the last self test, and may have the following values: OK - self test indicates good battery, BT - self test failed due to insufficient battery capacity, NG - self test failed due to overload, NO - No results (i.e. no self test performed in the last 5 minutes)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Notification and Events&lt;/h1&gt;
&lt;p&gt;When a major event is generated within &lt;code&gt;apcupsd&lt;/code&gt;,
control is passed to the script &lt;code&gt;/etc/apcupsd/apccontrol&lt;/code&gt;.
The event name, and a number of other important parameters are passed to the script.
The major function of the &lt;code&gt;apccontrol&lt;/code&gt; script is to perform a shutdown of the system
(as well as the killpower operation).
Another major task for this script is to notify you (via &lt;a href="http://linux.die.net/man/1/wall"&gt;&lt;code&gt;wall&lt;/code&gt;&lt;/a&gt; by default)
when certain events such as powerfail occur.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;/etc/apcupsd/apccontrol&lt;/code&gt; is a script,
you can customize it to your own needs using any text editor.
In addition, another feature is that you can write your own scripts
that will be automatically called by &lt;code&gt;apccontrol&lt;/code&gt; before any of its own code is executed.
For more details, see the &lt;a href="http://www.apcupsd.com/manual/manual.html#apcupsd-notification-and-events"&gt;apcupsd User Manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By default, the &lt;code&gt;/etc/apcupsd/apccontrol&lt;/code&gt; script uses &lt;a href="http://linux.die.net/man/1/wall"&gt;&lt;code&gt;wall&lt;/code&gt;&lt;/a&gt;
to notify online uses of UPS related events.
I wanted modify the script to use &lt;a href="http://www.computerhope.com/unix/usendmai.htm"&gt;&lt;code&gt;sendmail&lt;/code&gt;&lt;/a&gt;
but many public mail servers appear to block the
Simple Mail Transfer Protocol (SMTP) coming from unknow sources.
See below for my systems mail log, &lt;code&gt;/var/log/mail.log&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# test message for send mail&lt;/span&gt;
$ &lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;Subject: sendmail test&amp;quot;&lt;/span&gt; | /usr/sbin/sendmail jeff.irland@verizon.net

&lt;span style="color: #0099FF; font-style: italic"&gt;# now check the log to see what happend to this message&lt;/span&gt;
$ tail /var/log/mail.log
.
.
.
Jul &lt;span style="color: #FF6600"&gt;16&lt;/span&gt; 14:21:05 desktop postfix/pickup&lt;span style="color: #555555"&gt;[&lt;/span&gt;6588&lt;span style="color: #555555"&gt;]&lt;/span&gt;: 723364012A: &lt;span style="color: #003333"&gt;uid&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt; &lt;span style="color: #003333"&gt;from&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&amp;lt;jeff&amp;gt;
Jul &lt;span style="color: #FF6600"&gt;16&lt;/span&gt; 14:21:05 desktop postfix/cleanup&lt;span style="color: #555555"&gt;[&lt;/span&gt;8835&lt;span style="color: #555555"&gt;]&lt;/span&gt;: 723364012A: message-id&lt;span style="color: #555555"&gt;=&lt;/span&gt;&amp;lt;20160716182105.723364012A@desktop.fios-router.home&amp;gt;
Jul &lt;span style="color: #FF6600"&gt;16&lt;/span&gt; 14:21:05 desktop postfix/qmgr&lt;span style="color: #555555"&gt;[&lt;/span&gt;2208&lt;span style="color: #555555"&gt;]&lt;/span&gt;: 723364012A: &lt;span style="color: #003333"&gt;from&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&amp;lt;jeff@jeff.irland@gmail.com&amp;gt;, &lt;span style="color: #003333"&gt;size&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;307, &lt;span style="color: #003333"&gt;nrcpt&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &lt;span style="color: #555555"&gt;(&lt;/span&gt;queue active&lt;span style="color: #555555"&gt;)&lt;/span&gt;
Jul &lt;span style="color: #FF6600"&gt;16&lt;/span&gt; 14:21:05 desktop postfix/smtp&lt;span style="color: #555555"&gt;[&lt;/span&gt;8810&lt;span style="color: #555555"&gt;]&lt;/span&gt;: 723364012A: &lt;span style="color: #003333"&gt;to&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&amp;lt;jeff.irland@verizon.net&amp;gt;, &lt;span style="color: #003333"&gt;relay&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;relay.verizon.net&lt;span style="color: #555555"&gt;[&lt;/span&gt;206.46.232.11&lt;span style="color: #555555"&gt;]&lt;/span&gt;:25, &lt;span style="color: #003333"&gt;delay&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;0.1, &lt;span style="color: #003333"&gt;delays&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;0.01/0/0.09/0, &lt;span style="color: #003333"&gt;dsn&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;4.0.0, &lt;span style="color: #003333"&gt;status&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;deferred &lt;span style="color: #555555"&gt;(&lt;/span&gt;host relay.verizon.net&lt;span style="color: #555555"&gt;[&lt;/span&gt;206.46.232.11&lt;span style="color: #555555"&gt;]&lt;/span&gt; refused to talk to me: &lt;span style="color: #FF6600"&gt;571&lt;/span&gt; Email from 71.171.94.138 is currently blocked by Verizon Online&lt;span style="color: #AA0000; background-color: #FFAAAA"&gt;&amp;#39;&lt;/span&gt;s anti-spam system. The email sender or Email Service Provider may visit http://www.verizon.net/whitelist and request removal of the block. 160716&lt;span style="color: #555555"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As the last line says,
the Verizon mail service is blocking my &lt;code&gt;sendmail&lt;/code&gt; message via its anti-spam system.&lt;/p&gt;
&lt;p&gt;Instead, I choose to take another approach.
I have modified the &lt;code&gt;apccontrol&lt;/code&gt; script to not only use &lt;code&gt;wall&lt;/code&gt; but also
&lt;a href="https://gist.github.com/jeffskinnerbox/13cd61e4d99feb0dcbca"&gt;my personal push notification utility &lt;code&gt;apprise&lt;/code&gt;&lt;/a&gt;,
which leverages the &lt;a href="https://pushover.net/"&gt;Pushover&lt;/a&gt; service.
(&lt;strong&gt;WARNING -&lt;/strong&gt; The &lt;code&gt;/etc/apcupsd/apccontrol&lt;/code&gt; script will be overwritten every time you update
your &lt;code&gt;apcupsd&lt;/code&gt;, when doing &lt;code&gt;make install&lt;/code&gt;):&lt;/p&gt;
&lt;p&gt;The modifications to the &lt;code&gt;/etc/apcupsd/apccontrol&lt;/code&gt; script
required me to replace the scripts &lt;code&gt;WALL&lt;/code&gt; environment variable as shown below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# repleae this line&lt;/span&gt;
&lt;span style="color: #003333"&gt;WALL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;wall

&lt;span style="color: #0099FF; font-style: italic"&gt;# with this&lt;/span&gt;
&lt;span style="color: #003333"&gt;WALL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;eval tee /tmp/apccontrol.file | wall ; /home/jeff/bin/apprise -t \&amp;quot;UPS Event Notification\&amp;quot; -m \&amp;quot;\$(cat /tmp/apccontrol.file)\&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;UPS Test Program&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://linux.die.net/man/8/apctest"&gt;&lt;code&gt;apctest&lt;/code&gt;&lt;/a&gt; is a program that runs low-level tests to check the operation of the UPS,
checks that your &lt;code&gt;apcupsd&lt;/code&gt; configuration is correctly setup,
and assures you can establish communication with the UPS.&lt;/p&gt;
&lt;p&gt;When run, &lt;code&gt;apctest&lt;/code&gt; displays a menu of options.
Also, &lt;code&gt;apctest&lt;/code&gt; saves a transcript of the session to the file &lt;code&gt;apctest.out&lt;/code&gt;
in the directory from which the program was called.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Before running &lt;code&gt;apctest&lt;/code&gt;
 Check that the UPSCABLE, UPSTYPE and DEVICE configuration directives in the
&lt;code&gt;/etc/apcupsd/apcupsd.conf&lt;/code&gt;
configuration file have been set appropriately;
and &lt;strong&gt;shutdown &lt;code&gt;apcupsd&lt;/code&gt;&lt;/strong&gt; via &lt;code&gt;sudo /etc/init.d/apcupsd stop&lt;/code&gt; if it is running.
You cannot run both &lt;code&gt;apcupsd&lt;/code&gt; and &lt;code&gt;apctest&lt;/code&gt; at the same time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You must run &lt;code&gt;apctest&lt;/code&gt; as root:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# stop the apcupsd daemon&lt;/span&gt;
sudo /etc/init.d/apcupsd stop

&lt;span style="color: #0099FF; font-style: italic"&gt;# start the test&lt;/span&gt;
$ sudo apctest


2016-07-16 16:34:56 apctest 3.14.12 &lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #FF6600"&gt;29&lt;/span&gt; March 2014&lt;span style="color: #555555"&gt;)&lt;/span&gt; debian
Checking configuration ...
sharenet.type &lt;span style="color: #555555"&gt;=&lt;/span&gt; Network &amp;amp; ShareUPS Disabled
cable.type &lt;span style="color: #555555"&gt;=&lt;/span&gt; USB Cable
mode.type &lt;span style="color: #555555"&gt;=&lt;/span&gt; USB UPS Driver
Setting up the port ...
Doing prep_device&lt;span style="color: #555555"&gt;()&lt;/span&gt; ...

You are using a USB cable type, so I&lt;span style="color: #AA0000; background-color: #FFAAAA"&gt;&amp;#39;&lt;/span&gt;m entering USB &lt;span style="color: #336666"&gt;test&lt;/span&gt; mode
Hello, this is the apcupsd Cable Test program.
This part of apctest is &lt;span style="color: #006699; font-weight: bold"&gt;for&lt;/span&gt; testing USB UPSes.

Getting UPS capabilities...SUCCESS

Please &lt;span style="color: #006699; font-weight: bold"&gt;select&lt;/span&gt; the &lt;span style="color: #006699; font-weight: bold"&gt;function&lt;/span&gt; you want to perform.

1&lt;span style="color: #555555"&gt;)&lt;/span&gt;  Test &lt;span style="color: #336666"&gt;kill&lt;/span&gt; UPS power
2&lt;span style="color: #555555"&gt;)&lt;/span&gt;  Perform self-test
3&lt;span style="color: #555555"&gt;)&lt;/span&gt;  Read last self-test result
4&lt;span style="color: #555555"&gt;)&lt;/span&gt;  View/Change battery date
5&lt;span style="color: #555555"&gt;)&lt;/span&gt;  View manufacturing date
6&lt;span style="color: #555555"&gt;)&lt;/span&gt;  View/Change alarm behavior
7&lt;span style="color: #555555"&gt;)&lt;/span&gt;  View/Change sensitivity
8&lt;span style="color: #555555"&gt;)&lt;/span&gt;  View/Change low transfer voltage
9&lt;span style="color: #555555"&gt;)&lt;/span&gt;  View/Change high transfer voltage
10&lt;span style="color: #555555"&gt;)&lt;/span&gt; Perform battery calibration
11&lt;span style="color: #555555"&gt;)&lt;/span&gt; Test alarm
12&lt;span style="color: #555555"&gt;)&lt;/span&gt; View/Change self-test interval
 Q&lt;span style="color: #555555"&gt;)&lt;/span&gt; Quit

Select &lt;span style="color: #006699; font-weight: bold"&gt;function&lt;/span&gt; number:
.
.
.

&lt;span style="color: #0099FF; font-style: italic"&gt;# start the apcupsd daemon&lt;/span&gt;
sudo /etc/init.d/apcupsd start
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Sources&lt;/h1&gt;
&lt;p&gt;For more information and details, check out the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.apcupsd.org/"&gt;APC UPS Daemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.apcupsd.com/manual/manual.html"&gt;apcupsd User Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/debian-ubuntu-centos-rhel-install-apcups/"&gt;Linux: Configure and Control APC SmartUPS During a Power Failure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cloudportal.org/2012/03/07/installing-apc-ups-powerchute-network-shutdown-3-0-0-on-ubuntu-10-04-lts/"&gt;Configuring Linux Ubuntu 10.04 LTS for APC UPS Network Shutdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linux.die.net/man/8/apcupsd"&gt;apcupsd - a daemon for controlling most APC UPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linux.die.net/man/5/apcupsd.conf"&gt;apcupsd.conf - the configuration file for the apcupsd program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="UPS"></category></entry><entry><title>HowTo: Install and Configure Fail2Ban</title><link href="/posts/2016/Apr/27/howto-install-and-configure-fail2ban/" rel="alternate"></link><published>2016-04-27T21:27:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-04-27:posts/2016/Apr/27/howto-install-and-configure-fail2ban/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.fail2ban.org/wiki/index.php/Main_Page"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Fail2ban scans log files (e.g. /var/log/apache/error_log) and bans IPs that show the malicious signs -- too many password failures, seeking for exploits, etc. Generally Fail2Ban is then used to update firewall rules to reject the IP addresses for a specified amount of time." alt="fail2ban logo" src="/images/fail2ban-logo.png" width="100" height="100" /&gt;&lt;/a&gt;
Recently I examined my desktop computer's &lt;code&gt;sshd&lt;/code&gt; log file &lt;code&gt;/var/log/auth.log&lt;/code&gt;
(&lt;a href="http://ossec-docs.readthedocs.org/en/latest/log_samples/auth/sshd.html"&gt;log samples from sshd&lt;/a&gt;) looking for failed login attempts.
(You could also use &lt;a href="http://www.computerhope.com/unix/last.htm"&gt;&lt;code&gt;lastb&lt;/code&gt;&lt;/a&gt; which shows you the log file &lt;code&gt;/var/log/btmp&lt;/code&gt;,
containing all the bad login attempts)
What I saw was a list of well over 100 attempts from a few IP addresses
(125.88.177.90 - Guangdong, China,
58.218.205.97 - Jiangsu region of China,
58.218.204.248 - Jiangsu region of China,
185.110.132.54 - Moscow, Russia),
trying to login via SSH as root or admin user.
In other works, attempting a &lt;a href="https://en.wikipedia.org/wiki/Brute-force_attack"&gt;brute-force attacks&lt;/a&gt;.
To see these login attempts, I did the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# attacks on just port 22&lt;/span&gt;
$ cat /var/log/auth.log | grep &lt;span style="color: #CC3300"&gt;&amp;#39;sshd.*Failed&amp;#39;&lt;/span&gt; | grep &lt;span style="color: #CC3300"&gt;&amp;#39;port 22&amp;#39;&lt;/span&gt; | wc
    &lt;span style="color: #FF6600"&gt;171&lt;/span&gt;    &lt;span style="color: #FF6600"&gt;2814&lt;/span&gt;   18950

&lt;span style="color: #0099FF; font-style: italic"&gt;# attacks on any port&lt;/span&gt;
$ cat /var/log/auth.log | grep &lt;span style="color: #CC3300"&gt;&amp;#39;sshd.*Failed&amp;#39;&lt;/span&gt; | wc
  &lt;span style="color: #FF6600"&gt;11066&lt;/span&gt;  &lt;span style="color: #FF6600"&gt;182457&lt;/span&gt; 1229596
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also noticed that the attacher is attempting to use multiple originating ports in an effort
to subvert delays required between multiple logins
(see this &lt;a href="http://security.stackexchange.com/questions/67602/closely-spaced-failed-logins-in-auth-log"&gt;article&lt;/a&gt; and &lt;a href="https://hackaday.com/2018/11/14/hack-my-house-opening-raspberry-pi-to-the-internet-but-not-the-whole-world/"&gt;this&lt;/a&gt; if you need more).
I decided it was time to pay a little bit more attention to security!&lt;/p&gt;
&lt;p&gt;The article &lt;a href="https://www.debian-administration.org/article/87/Keeping_SSH_access_secure"&gt;"Keeping SSH Access Secure"&lt;/a&gt; provides some good suggestions.
One method, not referenced in this article, is how you could
rate-limit &lt;code&gt;iptables&lt;/code&gt; rules to address this issue (from this &lt;a href="https://www.debian-administration.org/article/187/Using_iptables_to_rate-limit_incoming_connections"&gt;source&lt;/a&gt;):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# block connections if the login fails 10 times in 1 hour on port 22&lt;/span&gt;
iptables -I INPUT -p tcp --dport &lt;span style="color: #FF6600"&gt;22&lt;/span&gt; -m state --state NEW -m recent --set
iptables -I INPUT -p tcp --dport &lt;span style="color: #FF6600"&gt;22&lt;/span&gt; -m state --state NEW -m recent --update --seconds &lt;span style="color: #FF6600"&gt;3600&lt;/span&gt; --hitcount &lt;span style="color: #FF6600"&gt;10&lt;/span&gt; -j DROP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This blocks connections if the login fails ten times in one hour on port 22.&lt;/p&gt;
&lt;p&gt;Another easy answer would be to limit &lt;code&gt;ssh&lt;/code&gt; access from the &lt;code&gt;wlan&lt;/code&gt; network interface only.
This works if you have no plans to &lt;code&gt;ssh&lt;/code&gt; into your device from the Internet,
effectively cuts out the attacks from the Internet.
But of course, if your neighbors nerdy 13 year old wants to mess with your WiFi,
you still could have some attacks.&lt;/p&gt;
&lt;p&gt;So its just a matter of time before the attack is on another port, or user account, or network interface,
therefore using &lt;a href="http://iot-projects.com/index.php?id=make-your-raspberry-pi-more-secure"&gt;Fail2Ban&lt;/a&gt; or something similar
(an alternative is &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-automatically-firewall-digitalocean-private-network-interfaces-with-droplan"&gt;Droplan&lt;/a&gt;)
may be in order.
&lt;code&gt;fail2ban&lt;/code&gt; reads the &lt;code&gt;sshd&lt;/code&gt; log entries (and other log files)
and bans the originating address when there are too many failures.
Generally Fail2Ban is then used to update firewall rules to reject
the IP addresses for a specified amount of time, although any arbitrary other action
(e.g. sending an email) could also be configured.
Out of the box Fail2Ban comes with filters for various services (apache, courier, ssh, etc.).&lt;/p&gt;
&lt;p&gt;While Fail2Ban does provide additional protection, the use of two factor authentication
(see &lt;a href="http://jeffskinnerbox.me/posts/2015/Nov/28/two-factor-authentication-via-google-authenticator/"&gt;"Two-Factor Authentication via Google Authenticator"&lt;/a&gt;)
or public/private key authentication mechanisms
(see &lt;a href="http://jeffskinnerbox.me/posts/2016/Apr/27/howto-configure-ssh-public-key-authentication/"&gt;"HowTo: Configure SSH Public Key Authentication"&lt;/a&gt;)
as your primary defense provide the best protection overall.&lt;/p&gt;
&lt;h3&gt;Step 0: Getting to Know iptables&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.netfilter.org/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="netfilter is a set of hooks inside the Linux kernel that allows kernel modules to register callback functions with the network stack. A registered callback function is then called back for every packet that traverses the respective hook within the network stack.
iptables is a generic table structure for the definition of rulesets. Each rule within an IP table consists of a number of classifiers (iptables matches) and one connected action (iptables target)." alt="netfilter logo" src="/images/netfilter-logo.png" width="265" height="72" /&gt;&lt;/a&gt;
Linux comes with a host based &lt;a href="https://en.wikipedia.org/wiki/Firewall_(computing)"&gt;firewall&lt;/a&gt; called &lt;a href="http://www.netfilter.org/"&gt;&lt;code&gt;netfilter&lt;/code&gt;&lt;/a&gt;
(or sometimes called "iptables" after the tool used to manage netfilter).
&lt;code&gt;netfilter&lt;/code&gt; is a set of hooks inside the Linux kernel that allows
kernel modules to register callback functions with the network stack.
A registered callback function is then called back for every packet
that traverses the respective hook within the network stack.&lt;/p&gt;
&lt;p&gt;The Linux based firewall &lt;code&gt;netfilter&lt;/code&gt; is controlled by the program called &lt;a href="http://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/"&gt;&lt;code&gt;iptables&lt;/code&gt;&lt;/a&gt;.
&lt;code&gt;iptables&lt;/code&gt; handles filtering for IPv4, and &lt;a href="http://www.admin-magazine.com/Archive/2014/20/IPv6-Tables"&gt;&lt;code&gt;ip6tables&lt;/code&gt;&lt;/a&gt; handles filtering for IPv6.
When you install Ubuntu, &lt;code&gt;iptables&lt;/code&gt; is there,
but it allows all traffic to flow through by default.
The websites &lt;a href="https://help.ubuntu.com/community/IptablesHowTo"&gt;IptablesHowTo&lt;/a&gt; and &lt;a href="http://www.cyberciti.biz/tips/linux-iptables-examples.html"&gt;Linux: 20 Iptables Examples For New SysAdmins&lt;/a&gt;
provide a quick intro to &lt;code&gt;iptables&lt;/code&gt; for Ubuntu.
When exposing your server to the Internet,
having an &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-choose-an-effective-firewall-policy-to-secure-your-servers"&gt;effective Firewall policy is very important to secure your sever&lt;/a&gt;.
The website &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-iptables-on-ubuntu-14-04"&gt;"How To Set Up a Firewall Using Iptables on Ubuntu 14.04"&lt;/a&gt;
can help you set up your Firewall.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iptable&lt;/code&gt; is a dense subject, and hard to master,
but here are some sources to get you knowledgeable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/"&gt;The Beginner’s Guide to iptables, the Linux Firewall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slashroot.in/linux-iptables-firewall-tutorial-getting-started-basics"&gt;Linux IPTABLES Firewall Tutorial: Getting Started with Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/what-is-a-firewall-and-how-does-it-work"&gt;What is a Firewall and How Does It Work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture"&gt;A Deep Dive into Iptables and Netfilter Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-iptables-on-ubuntu-14-04"&gt;How To Set Up a Firewall Using Iptables on Ubuntu 14.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2011/01/iptables-fundamentals/"&gt;Linux Firewall Tutorial: IPTables Tables, Chains, Rules Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.garron.me/en/linux/iptables-manual.html"&gt;iptables: Small manual and tutorial with some examples and tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/IptablesHowTo"&gt;IptablesHowTo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ubuntu has &lt;code&gt;iptables&lt;/code&gt; but also comes with &lt;a href="https://wiki.ubuntu.com/UncomplicatedFirewall"&gt;&lt;code&gt;ufw&lt;/code&gt;&lt;/a&gt;
and is considered the default firewall configuration tool for Ubuntu.
There is also a graphical version [&lt;code&gt;gufw&lt;/code&gt;][46] can be installed with &lt;code&gt;sudo apt-get install gufw&lt;/code&gt;.
Developed to ease &lt;code&gt;iptables&lt;/code&gt; firewall configuration,
&lt;code&gt;ufw&lt;/code&gt; provides a user friendly way to create an IPv4 or IPv6 host-based firewall.
By default &lt;code&gt;ufw&lt;/code&gt; is disabled.&lt;/p&gt;
&lt;h3&gt;Step 1: Install Fail2Ban&lt;/h3&gt;
&lt;p&gt;We will be installing a daemon called &lt;code&gt;fail2ban&lt;/code&gt; that scans log files
and automatically bans suspicious IP address using &lt;code&gt;iptables&lt;/code&gt;.
Install &lt;code&gt;fail2ban&lt;/code&gt; with the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install the software&lt;/span&gt;
sudo apt-get install fail2ban

&lt;span style="color: #0099FF; font-style: italic"&gt;# copy the example configuration file and make it live&lt;/span&gt;
sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;fail2ban&lt;/code&gt; should start automatically after the install.
You can check this via &lt;code&gt;sudo service fail2ban status&lt;/code&gt;.
You should see your &lt;code&gt;iptables&lt;/code&gt; rules updated to something like:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list the chain rules in service&lt;/span&gt;
$ sudo iptables -t filter --list
Chain INPUT &lt;span style="color: #555555"&gt;(&lt;/span&gt;policy ACCEPT&lt;span style="color: #555555"&gt;)&lt;/span&gt;
target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination
fail2ban-ssh  tcp  --  anywhere             anywhere             multiport dports ssh

Chain FORWARD &lt;span style="color: #555555"&gt;(&lt;/span&gt;policy ACCEPT&lt;span style="color: #555555"&gt;)&lt;/span&gt;
target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination

Chain OUTPUT &lt;span style="color: #555555"&gt;(&lt;/span&gt;policy ACCEPT&lt;span style="color: #555555"&gt;)&lt;/span&gt;
target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination

Chain fail2ban-ssh &lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; references&lt;span style="color: #555555"&gt;)&lt;/span&gt;
target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination
RETURN     all  --  anywhere             anywhere
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 2: Configure Fail2Ban&lt;/h3&gt;
&lt;p&gt;You can use &lt;code&gt;fail2ban&lt;/code&gt; with any service that makes log files like Apache, FTP, etc.
The configuration for different services can be found in &lt;code&gt;/etc/fail2ban/jail.local&lt;/code&gt;.
You can change this settings by adding appropriate lines in &lt;code&gt;/etc/fail2ban/jail.local&lt;/code&gt;.
For example, I want to permanently ban the suspicious IP address after 10 attempts.
Apart from that, I want to ban access for this IP on all ports,
so I changed default &lt;code&gt;banaction&lt;/code&gt; to &lt;code&gt;iptables-allports&lt;/code&gt;.
So, part of my &lt;code&gt;/etc/fail2ban/jail.local&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;[ssh]

enabled  = true
port     = ssh
filter   = sshd
logpath  = /var/log/auth.log
banaction = iptables-allports    ; ban retrys on any port
bantime  = 600                   ; ip address is banned for 10 minutes
maxretry = 10                    ; allow the ip address retry a max of 10 times
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If I want to permanently ban a suspicious IP address,
I would set the ban time as follows: &lt;code&gt;bantime = -1  ; ip address permanently banned&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you have an active &lt;a href="https://en.wikipedia.org/wiki/Brute-force_attack"&gt;brute force attack&lt;/a&gt; underway on SSH,
you can check out the &lt;code&gt;/var/log/auth.log&lt;/code&gt;
(use &lt;code&gt;tail --follow /var/log/auth.log | grep 'sshd.*Failed'&lt;/code&gt;).
You should see 10 login attempts, followed by at least a 10 minute pause,
and then the attacks may begin again for 10 attempts.&lt;/p&gt;
&lt;p&gt;When you did the necessary updates of the configuration files,
make sure to restart service:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo service fail2ban restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and check current bans with:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo iptables -L -n --line
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 3: Permanently Banning of an IP Address&lt;/h3&gt;
&lt;p&gt;The post &lt;a href="http://iot-projects.com/index.php?id=make-your-raspberry-pi-more-secure"&gt;"Make your Raspberry Pi more secure"&lt;/a&gt;
shows how you can use &lt;code&gt;fail2ban&lt;/code&gt; to permanently ban IP addresses,
but I prefer not to do it this way.
It would be easy to forget that I installed &lt;code&gt;fail2ban&lt;/code&gt;,
and if IP Addresses start getting block that are not intended,
I may forget where to look to fix the problem.
My preference is to ban these IP Address via a more obvious Linux tool,
that is, directly via &lt;code&gt;iptables&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You may want to log the traffic that is being blocking, this way,
your able to see which IP tried to access the server but I blocked.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# log action before blocking traffic from IP&lt;/span&gt;
sudo iptables -A INPUT -s 125.88.177.90 -j LOG --log-prefix &lt;span style="color: #CC3300"&gt;&amp;quot;blocking all traffic&amp;quot;&lt;/span&gt;
sudo iptables -A INPUT -s 125.88.177.90 -j DROP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Your firewall now looks like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list the chain rules in service with line numbers&lt;/span&gt;
$ sudo iptables --list --line-numbers
Chain INPUT &lt;span style="color: #555555"&gt;(&lt;/span&gt;policy ACCEPT&lt;span style="color: #555555"&gt;)&lt;/span&gt;
num  target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination
&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;    fail2ban-ssh  tcp  --  anywhere             anywhere
&lt;span style="color: #FF6600"&gt;2&lt;/span&gt;    LOG        all  --  125.88.177.90        anywhere             LOG level warning prefix &lt;span style="color: #CC3300"&gt;&amp;quot;blocking all traffic&amp;quot;&lt;/span&gt;
&lt;span style="color: #FF6600"&gt;3&lt;/span&gt;    DROP       all  --  125.88.177.90        anywhere

Chain FORWARD &lt;span style="color: #555555"&gt;(&lt;/span&gt;policy ACCEPT&lt;span style="color: #555555"&gt;)&lt;/span&gt;
num  target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination

Chain OUTPUT &lt;span style="color: #555555"&gt;(&lt;/span&gt;policy ACCEPT&lt;span style="color: #555555"&gt;)&lt;/span&gt;
num  target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination

Chain fail2ban-ssh &lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; references&lt;span style="color: #555555"&gt;)&lt;/span&gt;
num  target     prot opt &lt;span style="color: #336666"&gt;source&lt;/span&gt;               destination
&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;    REJECT     all  --  125.88.177.87        anywhere             reject-with icmp-port-unreachable
&lt;span style="color: #FF6600"&gt;2&lt;/span&gt;    RETURN     all  --  anywhere             anywhere

&lt;span style="color: #0099FF; font-style: italic"&gt;# list the chain rules in service as iptables commands&lt;/span&gt;
$ sudo iptables -S
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N fail2ban-ssh
-A INPUT -p tcp -j fail2ban-ssh
-A INPUT -s 125.88.177.90/32 -j LOG --log-prefix &lt;span style="color: #CC3300"&gt;&amp;quot;blocking all traffic&amp;quot;&lt;/span&gt;
-A INPUT -s 125.88.177.90/32 -j DROP
-A fail2ban-ssh -s 58.218.204.30/32 -j REJECT --reject-with icmp-port-unreachable
-A fail2ban-ssh -j RETURN
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Keep in mind that this type of logging can create considerable amounts of data
if you subject to frequent attacks.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; To remove logging rule (delete rule 2 from INPUT chain): &lt;code&gt;sudo iptables -D INPUT 2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 4: Save Firewall Rules&lt;/h3&gt;
&lt;p&gt;The firewall rules created so far will not survive a reboot of your system.
To overcome this,
you need to use the &lt;code&gt;iptables-save&lt;/code&gt; or &lt;code&gt;iptables-persistent&lt;/code&gt; commands,
or &lt;code&gt;netfilter-persistent&lt;/code&gt; for Ubuntu 16.04.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# make backup of current itables rules&lt;/span&gt;
sudo cp /etc/iptables/rules.v4 /etc/iptables/backup_rules.v4

&lt;span style="color: #0099FF; font-style: italic"&gt;# make backup of currently active rules&lt;/span&gt;
sudo iptables-save &amp;gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/tmp/backup_rules.v4

&lt;span style="color: #0099FF; font-style: italic"&gt;# make the currently active rules persistent over reboots&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# (ie load them into /etc/iptables/rules.v4)&lt;/span&gt;
sudo netfilter-persistent save
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;My saved firewall rules look like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list active firewall rules&lt;/span&gt;
$ sudo iptables -S
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N fail2ban-ssh
-A INPUT -p tcp -j fail2ban-ssh
-A INPUT -s 125.88.177.90/32 -j DROP
-A INPUT -s 58.218.204.30/32 -j DROP
-A INPUT -s 58.218.205.97/32 -j DROP
-A INPUT -s 58.218.204.248/32 -j DROP
-A INPUT -s 185.110.132.54/32 -j DROP
-A INPUT -s 125.88.177.87/32 -j DROP
-A INPUT -s 59.45.79.25/32 -j DROP
-A INPUT -s 221.229.162.7/32 -j DROP
-A INPUT -s 58.218.211.244/32 -j DROP
-A INPUT -s 58.218.211.11/32 -j DROP
-A INPUT -s 14.182.87.101/32 -j DROP
-A INPUT -s 58.218.199.166/32 -j DROP
-A INPUT -s 59.45.79.24/32 -j DROP
-A INPUT -s 122.141.236.69/32 -j DROP
-A INPUT -s 58.218.204.107/32 -j DROP
-A INPUT -s 81.243.48.52/32 -j DROP
-A INPUT -s 125.88.177.90/32 -j DROP
-A INPUT -s 1.93.129.5/32 -j DROP
-A INPUT -s 58.218.199.166/32 -j DROP
-A INPUT -s 59.45.79.24/32 -j DROP
-A INPUT -s 58.218.204.107/32 -j DROP
-A fail2ban-ssh -j RETURN
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To restore iptables rule that you may have saved&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# make your backup rules your active rules&lt;/span&gt;
sudo iptables-restore &amp;lt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/tmp/backup_rules.v4
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 5: Periodical Check of Status&lt;/h3&gt;
&lt;p&gt;You will have &lt;a href="https://en.wikipedia.org/wiki/Brute-force_attack"&gt;brute force attacks&lt;/a&gt; on SSH from time to time,
and so you should be checking you logs regularly.
You could periodically run the following command to see what is getting pass your
"&lt;code&gt;DROP&lt;/code&gt;" rules in the &lt;code&gt;INPUT&lt;/code&gt; chain.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# attacks on any port&lt;/span&gt;
tail --follow /var/log/auth.log | grep &lt;span style="color: #CC3300"&gt;&amp;#39;sshd.*Failed&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see the impact your rules are having,
you can run the following command to list the number of packets being blocked:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list number of packets and bytes being dropped by iptable rules&lt;/span&gt;
sudo iptables -L -n -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In time, you may find some duplicate rules sneak into your &lt;code&gt;/etc/iptables/rules.v4&lt;/code&gt; file.
You can find the duplicate rules via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list any rules that are duplicates&lt;/span&gt;
sudo sort /etc/iptables/rules.v4 | uniq --repeated
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will list all rows in the file that appear more than once.
Knowing this, you can edit the file and delete the duplicate rules.&lt;/p&gt;
&lt;p&gt;You may also be interested in where all your attacks are coming from.
That is, you want to find out where a given IP address is physically located on earth.
Sites like &lt;a href="https://geoiptool.com/"&gt;Geo IP Tool&lt;/a&gt; give you a web site to lookup this information.
There are also command line tools that can be used, like &lt;a href="http://linux.die.net/man/1/geoiplookup"&gt;&lt;code&gt;geoiplookup&lt;/code&gt;&lt;/a&gt;
and via &lt;code&gt;curl ipinfo.io/&amp;lt;ip-address&amp;gt;&lt;/code&gt; (both documented &lt;a href="http://xmodulo.com/geographic-location-ip-address-command-line.html"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Below is a script that creates a simple report from your rules file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# geo-locations of blocked ip addresses in json format&lt;/span&gt;
sudo sort /etc/iptables/rules.v4 | uniq | grep DROP | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $4 }&amp;#39;&lt;/span&gt; | sed &lt;span style="color: #CC3300"&gt;&amp;#39;s/\/[0-9]*//&amp;#39;&lt;/span&gt; | &lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;read&lt;/span&gt; line; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt; curl ipinfo.io/&lt;span style="color: #003333"&gt;$line&lt;/span&gt; 2&amp;gt;/dev/null ; &lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt; | jq -c &lt;span style="color: #CC3300"&gt;&amp;#39;{ city: .city , region: .region , country: .country , ip: .ip }&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Sources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://iot-projects.com/index.php?id=make-your-raspberry-pi-more-secure"&gt;Install and configure fail2ban&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pontikis.net/blog/fail2ban-install-config-debian-wheezy"&gt;Install and Config Fail2Ban in Debian 7 Wheezy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-fail2ban-works-to-protect-services-on-a-linux-server"&gt;How Fail2Ban Works to Protect Services on a Linux Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-fail2ban-on-ubuntu-14-04"&gt;How To Protect SSH with Fail2Ban on Ubuntu 14.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kyup.com/tutorials/protect-ssh-fail2ban/"&gt;How to protect SSH with fail2ban&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.howtoforge.com/fail2ban_debian_etch"&gt;Preventing Brute Force Attacks With Fail2ban On Debian Etch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linode.com/docs/security/using-fail2ban-for-security"&gt;Using Fail2ban to Secure Your Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/204383/fail2ban-is-not-blocking-ips-trying-to-access-my-server-via-ssh/204393#204393"&gt;Fail2ban is not blocking IPs trying to access my server via ssh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="How To"></category><category term="Fail2Ban"></category><category term="Security"></category></entry><entry><title>HowTo: Configure SSH Public Key Authentication</title><link href="/posts/2016/Apr/27/howto-configure-ssh-public-key-authentication/" rel="alternate"></link><published>2016-04-27T21:24:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-04-27:posts/2016/Apr/27/howto-configure-ssh-public-key-authentication/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.openssh.com/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="OpenSSH is for remote login with the SSH protocol. It encrypts all traffic to eliminate eavesdropping, connection hijacking, and other attacks. In addition, OpenSSH provides a large suite of secure tunneling capabilities, several authentication methods, and sophisticated configuration options." alt="open ssh" src="/images/openssh-logo.png" width="194" height="191" /&gt;
&lt;/a&gt;
Using &lt;a href="http://docstore.mik.ua/orelly/networking_2ndEd/ssh/index.htm"&gt;Secure Shell (SSH)&lt;/a&gt; with
&lt;a href="https://www.stackstar.com/blog/2009/06/ssh-key-based-authentication/"&gt;public key authentication&lt;/a&gt; is more secure than just using password authentication.
This is particularly important if the computer is visible on the internet.
Using SSH, &lt;a href="http://www.unixlore.net/articles/five-minutes-to-even-more-secure-ssh.html"&gt;along with a few other tricks&lt;/a&gt;,
will drastically improve the security of your computer.&lt;/p&gt;
&lt;p&gt;In conventional password authentication
you prove you are who you claim to be by proving that you know the correct password.
(Password authentication and file encryption use a &lt;a href="https://letsencrypt.org/"&gt;different methodology&lt;/a&gt;
for authentication than you would use to secure a website.)
The only way to prove you know the password is to tell the server what you think the password is.
This means that if the server has been hacked,
or spoofed, an attacker can learn your password.&lt;/p&gt;
&lt;p&gt;Public key authentication solves this problem.
You generate a key pair, consisting of a public key (which everybody is allowed to know)
and a private key (which you keep secret and do not give to anybody).
The private key is able to generate signatures.
A signature created using your private key cannot be forged by anybody who does not have that key;
but anybody who has your public key can verify that a particular signature is genuine.&lt;/p&gt;
&lt;p&gt;Each key is a large number with special mathematical properties.
The private key is kept on the computer you log in from,
while the public key is stored on the &lt;code&gt;.ssh/authorized_keys&lt;/code&gt;
file on all the computers you want to log in to.
When you log in to a computer,
the SSH server uses the public key to "lock" messages in a way that can only be
"unlocked" by your private key.
This means that even the most resourceful attacker can't snoop on,
or interfere with, your session.
As an extra security measure,
most SSH programs store the private key in a passphrase-protected format,
so that if your computer is stolen or broken in to,
you should have enough time to disable your old public key
before they break the passphrase and start using your key.&lt;/p&gt;
&lt;p&gt;Public key authentication is a much better solution than passwords for most people.
In fact, if you don't mind leaving a private key unprotected on your hard disk,
you can even use keys to do secure automatic log-ins - as part of a network backup, for example.&lt;/p&gt;
&lt;p&gt;The general process of creating a passwordless login is as follows
(see &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604"&gt;"How To Set Up SSH Keys on Ubuntu 16.04"&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a public/private key pair on the local machine with &lt;code&gt;ssh-keygen&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;ssh-agent&lt;/code&gt; to cache login credentials for the session. &lt;code&gt;ssh-agent&lt;/code&gt;
requires the user to "unlock" the private key first.&lt;/li&gt;
&lt;li&gt;Put the public key on any remote machines with &lt;code&gt;ssh-copy-id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Login to the remote machine without entering the password&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Step 1: Start on the Local Machine&lt;/h3&gt;
&lt;p&gt;To establish your SSH based authentication,
your start on the local machine, that is,
the system from which you log into the remote machine.
It is from the local machine that you will establish the SSH keys
and push the public key to the remote machine.&lt;/p&gt;
&lt;p&gt;Secure Shell (SSH) needs to already be installed and configured.
To install, just do &lt;code&gt;sudo apt-get install openssh-server&lt;/code&gt;
and &lt;a href="http://www.htpcbeginner.com/install-ssh-server-on-ubuntu-1204/"&gt;follow the procedures here to configure&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 2: Checking for Existing SSH Keys&lt;/h3&gt;
&lt;p&gt;Before you generate an SSH key,
you should check to see if you have any existing SSH keys.
To do this, open terminal and enter:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Lists the files in your .ssh directory&lt;/span&gt;
ls -al ~/.ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, the filenames of the keys are
&lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; for your private key and &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt; for your public key.&lt;/p&gt;
&lt;p&gt;If you don't have an existing public and private key pair,
or don't wish to use any that are available, then generate a new SSH key.&lt;/p&gt;
&lt;p&gt;If you see an existing public and private key pair listed
(for example &lt;code&gt;id_rsa.pub&lt;/code&gt; and &lt;code&gt;id_rsa&lt;/code&gt;)
that you would like to use to connect to your remote machine,
you can add your SSH key to the &lt;code&gt;ssh-agent&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Step 3: Generating a New SSH Key&lt;/h3&gt;
&lt;p&gt;After you've checked for existing SSH keys,
you can generate a new SSH key to use for authentication,
then add it to the &lt;code&gt;ssh-agent&lt;/code&gt;.
When you're prompted to "Enter a file in which to save the key," press Enter.
This accepts the default file location.
At the next prompt, type a secure passphrase.
In a terminal, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Creates a new ssh key, using the provided email as a label&lt;/span&gt;
$ ssh-keygen -t rsa -b &lt;span style="color: #FF6600"&gt;4096&lt;/span&gt; -C &lt;span style="color: #CC3300"&gt;&amp;quot;jeff.irland@verizon.net&amp;quot;&lt;/span&gt;
Generating public/private rsa key pair.
Enter file in which to save the key &lt;span style="color: #555555"&gt;(&lt;/span&gt;/home/jeff/.ssh/id_rsa&lt;span style="color: #555555"&gt;)&lt;/span&gt;:
/home/jeff/.ssh/id_rsa already exists.
Overwrite &lt;span style="color: #555555"&gt;(&lt;/span&gt;y/n&lt;span style="color: #555555"&gt;)&lt;/span&gt;? y
Enter passphrase &lt;span style="color: #555555"&gt;(&lt;/span&gt;empty &lt;span style="color: #006699; font-weight: bold"&gt;for&lt;/span&gt; no passphrase&lt;span style="color: #555555"&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your identification has been saved in /home/jeff/.ssh/id_rsa.
Your public key has been saved in /home/jeff/.ssh/id_rsa.pub.
The key fingerprint is:
2b:69:c2:53:9a:2d:a7:68:b7:88:e4:ba:35:e3:f5:3c jeff.irland@verizon.net
The key&lt;span style="color: #AA0000; background-color: #FFAAAA"&gt;&amp;#39;&lt;/span&gt;s randomart image is:
+--&lt;span style="color: #555555"&gt;[&lt;/span&gt; RSA 4096&lt;span style="color: #555555"&gt;]&lt;/span&gt;----+
|      ...        |
| .               |
|.o.e.    C       |
|&lt;span style="color: #555555"&gt;=&lt;/span&gt; oO.  e .       |
|.oB.3 &lt;span style="color: #555555"&gt;=&lt;/span&gt; S E      |
|.  * + + .       |
|. . &lt;span style="color: #FF6600"&gt;3&lt;/span&gt;   o &lt;span style="color: #FF6600"&gt;4&lt;/span&gt;      |
| o               |
|.         &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;      |
+-----------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="http://superuser.com/questions/22535/what-is-randomart-produced-by-ssh-keygen"&gt;randomart&lt;/a&gt; is meant to be an easier way for humans to visually validate keys,
a "visual fingerprint" of your key.
You do not need to save these.
The &lt;a href="http://superuser.com/questions/421997/what-is-a-ssh-key-fingerprint-and-how-is-it-generated"&gt;key fingerprint&lt;/a&gt; is used by your local machine for easy
identification/verification of the host you are connecting to.
If the fingerprint changes,
the machine you are connecting to has changed their public key.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://help.github.com/articles/working-with-ssh-key-passphrases/"&gt;passphrase&lt;/a&gt; provides a securing method for your SSH keys
and configuring an authentication agent so that you won't have to
re-enter your passphrase every time you use your keys.
On Ubuntu, you'll need to enter only once after you have logged in.
You'll be prompted with a screen like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.ubuntu.com/community/SSH/OpenSSH/Keys"&gt;&lt;img alt="passphrase-screen" src="/images/private-key-passphrase.png" title="An SSH key passphrase is a secondary form of security that gives you a little time when your keys are stolen. If your RSA key has a strong passphrase, it might take your attacker a few hours to guess by brute force. That extra time should be enough to log in to any computers you have an account on, delete your old key from the .ssh/authorized_keys file, and add a new key." /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Step 3B: Changing Your Passphrase&lt;/h3&gt;
&lt;p&gt;Sooner or later you'll want to change the passphrase on your private key.
You can change the passphrase for an existing private keys without regenerating the key pair.
Just type the command &lt;code&gt;ssh-keygen -p&lt;/code&gt;.
See an example below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# change the passphrase for an existing private key&lt;/span&gt;
$ ssh-keygen -p
Enter file in which the key is &lt;span style="color: #555555"&gt;(&lt;/span&gt;/home/jeff/.ssh/id_rsa&lt;span style="color: #555555"&gt;)&lt;/span&gt;:
Enter old passphrase:
Key has comment &lt;span style="color: #CC3300"&gt;&amp;#39;/home/jeff/.ssh/id_rsa&amp;#39;&lt;/span&gt;
Enter new passphrase &lt;span style="color: #555555"&gt;(&lt;/span&gt;empty &lt;span style="color: #006699; font-weight: bold"&gt;for&lt;/span&gt; no passphrase&lt;span style="color: #555555"&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your identification has been saved with the new passphrase.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 3C: Retrieve Your Public Key from Your Private Key&lt;/h3&gt;
&lt;p&gt;The following command will retrieve the public key from a private key:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;generate your public key from your private key
ssh-keygen -y
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This can be useful, for example, if your server provider generated your SSH key for you
and you were only able to download the private key portion of the key pair.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You cannot retrieve the private key if you only have the public key.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 4: Adding your SSH Key to the ssh-agent&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ssh-agent&lt;/code&gt; is responsible for manging you multiple keys.
You enter the passphrase once, and after that,
&lt;code&gt;ssh-agent&lt;/code&gt; keeps your key in its memory and pulls it up whenever it is asked for it.
It will be available for the duration of your terminal session,
allowing you to connect in the future without re-entering the passphrase.
The idea is that &lt;code&gt;ssh-agent&lt;/code&gt; is started in the beginning of an X-session or a login session,
and all other windows or programs are started as clients to the &lt;code&gt;ssh-agent&lt;/code&gt; program.&lt;/p&gt;
&lt;p&gt;To ensure &lt;code&gt;ssh-agent&lt;/code&gt; is enabled:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# start the ssh-agent in the background&lt;/span&gt;
&lt;span style="color: #336666"&gt;eval&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;ssh-agent -s&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
Agent pid 59566
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add your SSH key to the &lt;code&gt;ssh-agent&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;ssh-add ~/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can have a look at your currently loaded keys by using &lt;code&gt;ssh-add -l&lt;/code&gt;.
This is also important if you need to forward your SSH credentials (shown below).&lt;/p&gt;
&lt;h3&gt;Step 5: Copy Public Key to Remote Machine&lt;/h3&gt;
&lt;p&gt;Now you must provide the public keys to your remote machine.
The easiest way to copy your public key is to use a utility called &lt;code&gt;ssh-copy-id&lt;/code&gt;.
For this method to work,
you must already have password-based SSH working on the remote machine.
Simply do this &lt;code&gt;ssh-copy-id user_name@remote_machine&lt;/code&gt;.
In my example:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# copy public keys to your remote machine&lt;/span&gt;
$ ssh-copy-id pi@mesh01
The authenticity of host &lt;span style="color: #CC3300"&gt;&amp;#39;mesh01 (192.168.1.179)&amp;#39;&lt;/span&gt; can&lt;span style="color: #CC3300"&gt;&amp;#39;t be established.&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;ECDSA key fingerprint is e6:49:7d:c3:48:e3:21:72:b3:2e:12:2a:d8:bc:13:15.&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;Are you sure you want to continue connecting (yes/no)? yes&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;/usr/bin/ssh-copy-id: INFO: 2 key(s) remain to be installed -- if you are prompted now it is to install the new keys&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;pi@mesh01&amp;#39;&lt;/span&gt;s password:

Number of key&lt;span style="color: #555555"&gt;(&lt;/span&gt;s&lt;span style="color: #555555"&gt;)&lt;/span&gt; added: 2

Now try logging into the machine, with:   &lt;span style="color: #CC3300"&gt;&amp;quot;ssh &amp;#39;pi@mesh01&amp;#39;&amp;quot;&lt;/span&gt;
and check to make sure that only the key&lt;span style="color: #555555"&gt;(&lt;/span&gt;s&lt;span style="color: #555555"&gt;)&lt;/span&gt; you wanted were added.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This procedure has created the file  &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; under the home directory
of the remote system.
Your &lt;code&gt;d_rsa.pub&lt;/code&gt; file has been copied into &lt;code&gt;.ssh/authorized_keys&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you do not have password-based SSH access to your server available,
you will have to do the &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server"&gt;above process manually&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;ssh-copy-id&lt;/code&gt; creates the &lt;code&gt;.ssh&lt;/code&gt; directory and &lt;code&gt;.ssh/authorized_keys&lt;/code&gt;
file with the correct permissions.
However, if you've created them manually and need to fix permissions.
You can run the following commands to do this:
&lt;code&gt;chmod 700 ~/.ssh&lt;/code&gt; and &lt;code&gt;chmod 600 ~/.ssh/authorized_keys&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 5B: Granting Access to Multiple Keys&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file you created above uses a very simple format:
it can contain many keys as long as you put one key on each line in the file.
If you have multiple keys (for example, one on each of your laptops)
or multiple developers you need to grant access to,
just follow the same instructions above using &lt;code&gt;ssh-copy-id&lt;/code&gt;
or manually editing the file to paste in additional keys, one on each line.&lt;/p&gt;
&lt;p&gt;When you're done, the &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file will look something like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSkT3A1j89RT/540ghIMHXIVwNlAEM3WtmqVG7YN/wYwtsJ8iCszg4/lXQsfLFxYmEVe8L9atgtMGCi5QdYPl4X/c+5YxFfm88Yjfx+2xEgUdOr864eaI22yaNMQ0AlyilmK+PcSyxKP4dzkf6B5Nsw8lhfB5n9F5md6GHLLjOGuBbHYlesKJKnt2cMzzS90BdRk73qW6wJ+MCUWo+cyBFZVGOzrjJGEcHewOCbVs+IJWBFSi6w1enbKGc+RY9KrnzeDKWWqzYnNofiHGVFAuMxrmZOasqlTIKiC2UK3RmLxZicWiQmPnpnjJRo7pL0oYM9r/sIWzD6i2S9szDy6aZ mike@laptop1
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzlL9Wo8ywEFXSvMJ8FYmxP6HHHMDTyYAWwM3AOtsc96DcYVQIJ5VsydZf5/4NWuq55MqnzdnGB2IfjQvOrW4JEn0cI5UFTvAG4PkfYZb00Hbvwho8JsSAwChvWU6IuhgiiUBofKSMMifKg+pEJ0dLjks2GUcfxeBwbNnAgxsBvY6BCXRfezIddPlqyfWfnftqnafIFvuiRFB1DeeBr24kik/550MaieQpJ848+MgIeVCjko4NPPLssJ/1jhGEHOTlGJpWKGDqQK+QBaOQZh7JB7ehTK+pwIFHbUaeAkr66iVYJuC05iA7ot9FZX8XGkxgmhlnaFHNf0l8ynosanqt henry@laptop2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 6: Logging on the Remote Machine&lt;/h3&gt;
&lt;p&gt;If you have successfully completed one of the procedures above,
you should be able to log into the remote machine without the remote account's password.
The login process is the same:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# login password-less&lt;/span&gt;
ssh user_name@remote_machine
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 7: Disabling Password Authentication on Remote Machine&lt;/h3&gt;
&lt;p&gt;If you were able to login to your remote machine using SSH without a password,
you have successfully configured SSH key-based authentication to your remote account.
However, your password-based authentication mechanism is still active,
meaning that your server is still exposed to &lt;a href="https://en.wikipedia.org/wiki/Brute-force_attack"&gt;brute-force attacks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before proceeding,
make sure that you either have SSH key-based authentication configured
for the root account on this server, or preferably,
that you have SSH key-based authentication configured for an account
on this server with &lt;a href="https://linuxacademy.com/blog/linux/linux-commands-for-beginners-sudo/"&gt;&lt;code&gt;sudo&lt;/code&gt;&lt;/a&gt; access.
This step will lock down password-based logins,
so ensuring that you have will still be able to get administrative access is essential.&lt;/p&gt;
&lt;p&gt;Login into the remote machine,
either as root or with an account with &lt;code&gt;sudo&lt;/code&gt; privileges.
Open the SSH daemon's configuration file: &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;.
Inside the file, search for a directive called &lt;code&gt;PasswordAuthentication&lt;/code&gt;.
This may be commented out.
Uncomment the line and set the value to "no".
This will disable your ability to log in through SSH using account passwords.&lt;/p&gt;
&lt;p&gt;Save and close the file and you are finished.
To actually implement the changes we just made,
you must restart the SSH service.
On Ubuntu or Debian machines, you can issue this command: &lt;code&gt;sudo service ssh restart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After completing this step,
&lt;strong&gt;all&lt;/strong&gt; accounts on the remote machine will only allow login using SSH keys.&lt;/p&gt;
&lt;h3&gt;Step 8: Disabling SSH Login as Root on Remote Machine&lt;/h3&gt;
&lt;p&gt;For security purposes, you may want to not allow anyone to log into
the remote machine as root over SSH.
You still want the root account to exist,
just do not want it to be able to be logged into remotely.
You can use &lt;code&gt;sudo&lt;/code&gt; to gain root privileges anytime you need them.&lt;/p&gt;
&lt;p&gt;You can do this by putting the following line into &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# deny ssh users root logins&lt;/span&gt;
PermitRootLogin no
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 9: Protecting SSH with Fail2Ban&lt;/h3&gt;
&lt;p&gt;Any server that is exposed to the Internet is susceptible to attacks from malicious parties
(read &lt;a href="https://hackaday.com/2018/11/14/hack-my-house-opening-raspberry-pi-to-the-internet-but-not-the-whole-world/"&gt;this&lt;/a&gt; if you need convincing).
If your system requires authentication,
illegitimate users and &lt;a href="https://en.wikipedia.org/wiki/Internet_bot"&gt;bots&lt;/a&gt; will attempt to break into your system by repeatedly
trying to authenticate using different credentials
(aka &lt;a href="https://en.wikipedia.org/wiki/Brute-force_attack"&gt;brute-force attacks&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;By default, fail2ban will take action when three authentication failures
have been detected in 10 minutes,
and the default ban time is for 10 minutes.
The default for number of authentication failures necessary to trigger a ban
is overridden in the SSH portion of the default configuration file to allow for
6 failures before the ban takes place.
All of this is entirely configurable by the root user.&lt;/p&gt;
&lt;p&gt;SSH is particularly a focus of such attacks.
The utility &lt;a href="http://www.fail2ban.org/"&gt;fail2ban&lt;/a&gt; was created to help mitigate these attacks.
Fail2ban monitors the logs of common services to spot patterns in authentication failures,
and then alters the firewall rules to ban addresses
that have unsuccessfully attempted to log in a certain number of times.&lt;/p&gt;
&lt;p&gt;A good article to understand how fail2ban works is
&lt;a href="https://www.digitalocean.com/community/tutorials/how-fail2ban-works-to-protect-services-on-a-linux-server"&gt;"How Fail2Ban Works to Protect Services on a Linux Server"&lt;/a&gt;.
To get fail2ban up and running, check out the article
&lt;a href="http://jeffskinnerbox.me/posts/2016/Apr/27/howto-install-and-configure-fail2ban/"&gt;"HowTo: Install and Configure Fail2Ban"&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Trouble Shooting&lt;/h1&gt;
&lt;p&gt;There are many things that can stop SSH from working.
Generally problems with SSH connections fall into two groups - network related and server related.
Here are some good references:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.unixlore.net/articles/troubleshooting-ssh-connections.html"&gt;Troubleshooting SSH Connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docstore.mik.ua/orelly/networking_2ndEd/ssh/ch12_01.htm"&gt;SSH: The Secure Shell - Troubleshooting and FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Sources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/100-days-of-linux/say-yes-to-password-free-ssh-access-c7a7fa315cd7"&gt;Say YES to Password-free SSH Access!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.suso.com/supki/SSH_Tutorial_for_Linux"&gt;SSH Tutorial for Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/categories/ssh/"&gt;GitHub: Generating an SSH key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unixwiz.net/techtips/ssh-agent-forwarding.html"&gt;An Illustrated Guide to SSH Agent Forwarding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys"&gt;SSH Essentials: Working with SSH Servers, Clients, and Keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serverpilot.io/community/articles/how-to-use-ssh-public-key-authentication.html"&gt;How to Use SSH Public Key Authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="How To"></category><category term="Public Key Authentication"></category><category term="Security"></category></entry><entry><title>HowTo: Set-Up the Raspberry Pi as a Headless Device</title><link href="/posts/2016/Apr/27/howto-set-up-the-raspberry-pi-as-a-headless-device/" rel="alternate"></link><published>2016-04-27T21:23:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-04-27:posts/2016/Apr/27/howto-set-up-the-raspberry-pi-as-a-headless-device/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.raspberrypi-spy.co.uk/2015/11/raspberry-pi-family-photo-by-raspi-tv/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="The Raspberry Pi is a series of credit card–sized single-board computers developed in England, United Kingdom by the Raspberry Pi Foundation with the intent to promote the teaching of basic computer science in schools and developing countries." alt="rpi family" src="/images/raspberry-pi-family.jpg" width="175" height="117" /&gt;
&lt;/a&gt;
I have set up all my Raspberry Pi's as &lt;a href="http://internetofthingsagenda.techtarget.com/definition/headless-system"&gt;headless devices&lt;/a&gt;.
For one thing, I want to SSH into my devices so I don't want
or need a monitor/keyboard.
The real trick on going headless is doing the initial setup of the device
without an HDMI monitor or a keyboard / mouse,
required by the &lt;a href="https://www.raspberrypi.org/help/noobs-setup/"&gt;typical RPi setup&lt;/a&gt;.
Using just a SD Card reader/writer, a USB WiFi adapter,
and a Linux machine, I will do the whole setup.&lt;/p&gt;
&lt;p&gt;By the way, if you want to make an existing Raspberry Pi headless,
you don't need to follow this whole procedure.
Just make sure SSH is working and follow Step 3.
If you want to also upgrade your existing Raspberry Pi OS to the latest version,
check out the article &lt;a href="https://linuxconfig.org/raspbian-gnu-linux-upgrade-from-wheezy-to-raspbian-jessie-8"&gt;"Raspbian GNU/Linux upgrade from Wheezy to Raspbian Jessie 8"&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 1: Download Raspberry Pi Image&lt;/h3&gt;
&lt;p&gt;Before you can load a copy of the latest Raspberry Pi image onto your micro SD Card,
you must first download the official Raspberry Pi operating system, &lt;a href="https://www.raspbian.org/"&gt;Raspbian&lt;/a&gt;
(in my case, the version is &lt;a href="https://www.raspberrypi.org/blog/raspbian-jessie-is-here/"&gt;Jessie&lt;/a&gt;).
You can get that download &lt;a href="https://www.raspberrypi.org/downloads/raspbian/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Raspbian download site also lists a check sum for the download file.
(In my case, I down loaded the Raspbian file to &lt;code&gt;/home/jeff/Downloads/&lt;/code&gt;.)
Check whether the file has been changed from its original state
by checking its digital signature (SHA1 hash value).&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# validate file is uncorrupted via check of digital signature&lt;/span&gt;
$ sha1sum /home/jeff/Downloads/2016-02-09-raspbian-jessie.zip
da329713833e0785ffd94796304b7348803381db  /home/jeff/Downloads/2016-02-09-raspbian-jessie.zip
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Latest versons of Raspian may be using SHA-256,
so replace &lt;code&gt;sha1sum&lt;/code&gt; with &lt;code&gt;sha256sum&lt;/code&gt; in the above command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next you need to unzip the file to retrieve the Linux image file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ unzip 2016-02-09-raspbian-jessie.zip
Archive:  2016-02-09-raspbian-jessie.zip
  inflating: 2016-02-09-raspbian-jessie.img
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 2: Write Raspberry Pi Image to SD Card&lt;/h3&gt;
&lt;p&gt;Next using Linux, you have copied the Raspbian image onto the SD card mounted to your system.
I'll be using the &lt;a href="http://www.amazon.com/gp/product/B00GVRHON2?psc=1&amp;amp;redirect=true&amp;amp;ref_=oh_aui_detailpage_o00_s01"&gt;Rocketek 11-in-1 4 Slots USB 3.0 Memory Card Reader&lt;/a&gt; to create my SD Card.
Make sure to &lt;a href="http://www.wirelesshack.org/best-micro-sd-card-for-the-raspberry-pi-model-2.html"&gt;choose a reputable SD Card&lt;/a&gt; from &lt;a href="http://www.jeffgeerling.com/blogs/jeff-geerling/raspberry-pi-microsd-card"&gt;here&lt;/a&gt;, don't go cheap.&lt;/p&gt;
&lt;p&gt;When using your card reader,
you'll need to know the device name of the reader.
The easiest way to find this is just unplug your card reader from the USB port,
run &lt;code&gt;df -h&lt;/code&gt;, then plug it back in, and run &lt;code&gt;df -h&lt;/code&gt; again.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# with the SD card reader unplugged&lt;/span&gt;
$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            3.9G   12K  3.9G   1% /dev
tmpfs           783M  1.7M  781M   1% /run
/dev/sda3       110G   14G   90G  14% /
none            4.0K     &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;  4.0K   0% /sys/fs/cgroup
none            5.0M     &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
none            3.9G   90M  3.8G   3% /run/shm
none            100M   80K  100M   1% /run/user
/dev/sda1       461M  132M  306M  31% /boot
/dev/md0        917G  224G  647G  26% /home
/dev/sdb        3.6T  2.5T  950G  73% /mnt/backup

&lt;span style="color: #0099FF; font-style: italic"&gt;# with the SD card reader plugged in USB&lt;/span&gt;
$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            3.9G   12K  3.9G   1% /dev
tmpfs           783M  1.8M  781M   1% /run
/dev/sda3       110G   14G   90G  14% /
none            4.0K     &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;  4.0K   0% /sys/fs/cgroup
none            5.0M     &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
none            3.9G   90M  3.8G   3% /run/shm
none            100M   80K  100M   1% /run/user
/dev/sda1       461M  132M  306M  31% /boot
/dev/md0        917G  224G  647G  26% /home
/dev/sdb        3.6T  2.5T  950G  73% /mnt/backup
&lt;span style="background-color: #ffffcc"&gt;/dev/sdj1        15G   32K   15G   1% /media/jeff/3CB1-D9D9
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that in my example above, the new device is &lt;code&gt;/dev/sdj1&lt;/code&gt;.
The last part (the number 1) is the partition number
but we want to write to the whole SD card, not just one partition.
Therefore you need to remove that part when creating the image.
With this information, and know the location of the Raspbian image and
where we need to write the Raspbian image to the SD Card
(see more detail instructions &lt;a href="https://www.raspberrypi.org/documentation/installation/installing-images/linux.md"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# go to directory with the RPi image&lt;/span&gt;
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; /home/jeff/Downloads

&lt;span style="color: #0099FF; font-style: italic"&gt;# unmount the sd card reader&lt;/span&gt;
sudo umount /dev/sdj1 /dev/sdj2

&lt;span style="color: #0099FF; font-style: italic"&gt;# write the image to the sd card reader&lt;/span&gt;
sudo dd &lt;span style="color: #003333"&gt;bs&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;4M &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;2016-02-09-raspbian-jessie.img &lt;span style="color: #003333"&gt;of&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/dev/sdj

&lt;span style="color: #0099FF; font-style: italic"&gt;# ensure the write cache is flushed&lt;/span&gt;
sudo sync

&lt;span style="color: #0099FF; font-style: italic"&gt;# check the integrity of the sd card image&lt;/span&gt;
sudo dd &lt;span style="color: #003333"&gt;bs&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;4M &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/dev/sdj &lt;span style="color: #003333"&gt;of&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;copy-from-sd-card.img
sudo truncate --reference 2016-02-09-raspbian-jessie.img copy-from-sd-card.img
diff -s 2016-02-09-raspbian-jessie.img copy-from-sd-card.img

&lt;span style="color: #0099FF; font-style: italic"&gt;# unmount the sd card reader&lt;/span&gt;
sudo umount /dev/sdj
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Don’t remove SD card from the reader on your computer.
We’re going to set up the WiFi interface next.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You could immediately put the SD Card in the RPi and boot it up,
but you will have no WiFi access and you'll need to use the Ethernet interface,
or if there is no Ethernet interface,
you'll need to use a console cable to make the file modification
outline in the next step.
&lt;a href="https://learn.adafruit.com/adafruits-raspberry-pi-lesson-5-using-a-console-cable/overview"&gt;Adafruit has good description on how to use a console cable&lt;/a&gt;
and the how to &lt;a href="https://cdn-learn.adafruit.com/downloads/pdf/adafruits-raspberry-pi-lesson-5-using-a-console-cable.pdf"&gt;enable the UART for the console&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 3: Configure your WiFi&lt;/h3&gt;
&lt;p&gt;I have chosen to configure my WiFi router with WPA2 security because of superior security
but even this can &lt;a href="http://lifehacker.com/5873407/how-to-crack-a-wi-fi-networks-wpa-password-with-reaver"&gt;compromised if your not careful&lt;/a&gt;
(a key &lt;a href="https://www.us-cert.gov/ncas/alerts/TA12-006A"&gt;vulnerability lies in the implementation of WiFi Protected Setup (WPS)&lt;/a&gt;
- turn it off, better yet don't have it on your router).&lt;/p&gt;
&lt;p&gt;To configure your WiFi,
unplug your SD Card reader and plug it back in
and this will mount the Raspbian image on your Linux box.
The &lt;code&gt;df -h&lt;/code&gt; command will show you the device being used, the mount point, and memory used/available.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            3.9G   12K  3.9G   1% /dev
tmpfs           783M  1.8M  781M   1% /run
/dev/sda3       110G   14G   91G  13% /
none            4.0K     &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;  4.0K   0% /sys/fs/cgroup
none            5.0M     &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
none            3.9G   15M  3.9G   1% /run/shm
none            100M   44K  100M   1% /run/user
/dev/sda1       461M  132M  306M  31% /boot
/dev/md0        917G  232G  639G  27% /home
/dev/sdd        3.6T  2.5T  984G  72% /mnt/backup
/dev/sdj2       3.7G  3.3G  206M  95% /media/jeff/23c4ddbc-85fa-4cea-b96b-edae0bb138c9
/dev/sdj1        60M   20M   41M  34% /media/jeff/boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will find two new partitions, in my case &lt;code&gt;/dev/sdj1&lt;/code&gt; and &lt;code&gt;/dev/sdj2&lt;/code&gt;.
As root, you'll need to change directory to the main partition,
in my case &lt;code&gt;/media/jeff/23c4ddbc-85fa-4cea-b96b-edae0bb138c9&lt;/code&gt;, to edit the files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; On a Mac, you can’t access EXT4 partitions without fiddling with 3rd party software.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Change directory to root on the SD card via &lt;code&gt;cd /media/jeff/23c4ddbc-85fa-4cea-b96b-edae0bb138c9/&lt;/code&gt;.
Pay special attention to the path in the files referenced below.
There is no leading slash since you want to edit the files on your SD Card
and not the ones on your host system!
Next we're going to configure the network interface by
editing the interfaces file &lt;code&gt;etc/network/interfaces&lt;/code&gt;.
Find this block in the file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;allow-hotplug wlan0
iface wlan0 inet manual
    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then change it to this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;# establish connection to home wifi and other known networks
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So the file &lt;code&gt;/etc/network/interfaces&lt;/code&gt; should now look like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# interfaces(5) file used by ifup(8) and ifdown(8)&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Please note that this file is written to be used with dhcpcd&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# For static IP, consult /etc/dhcpcd.conf and &amp;#39;man dhcpcd.conf&amp;#39;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Include files from /etc/network/interfaces.d:&lt;/span&gt;
source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback

iface eth0 inet manual

&lt;span style="color: #0099FF; font-style: italic"&gt;# establish connection to home wifi and other known networks&lt;/span&gt;
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now open the file &lt;code&gt;etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt; in an editor
and add the following to the bottom of the file so your
Raspberry Pi can connect automatically to your WiFi network:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# country code environment variable, required for RPi 3&lt;/span&gt;
&lt;span style="color: #003333"&gt;country&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;US

&lt;span style="color: #0099FF; font-style: italic"&gt;# path to the ctrl_interface socket and the user group&lt;/span&gt;
&lt;span style="color: #003333"&gt;ctrl_interface&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;DIR&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/var/run/wpa_supplicant &lt;span style="color: #003333"&gt;GROUP&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;netdev

&lt;span style="color: #0099FF; font-style: italic"&gt;# allow wpa_supplicant to overwrite configuration file whenever configuration is changed&lt;/span&gt;
&lt;span style="color: #003333"&gt;update_config&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;1

&lt;span style="color: #0099FF; font-style: italic"&gt;# 1 = wpa_supplicant initiates scanning and AP selection ; 0 = driver takes care of scanning&lt;/span&gt;
&lt;span style="color: #003333"&gt;ap_scan&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;1

&lt;span style="color: #0099FF; font-style: italic"&gt;# home wifi network settings&lt;/span&gt;
&lt;span style="color: #003333"&gt;network&lt;/span&gt;&lt;span style="color: #555555"&gt;={&lt;/span&gt;
    &lt;span style="color: #003333"&gt;id_str&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;home&amp;quot;&lt;/span&gt;                   &lt;span style="color: #0099FF; font-style: italic"&gt;# needs to match keyword you used in the interfaces file&lt;/span&gt;
    &lt;span style="color: #003333"&gt;ssid&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;lt;your-network-ssid-name&amp;gt;&amp;quot;&lt;/span&gt; &lt;span style="color: #0099FF; font-style: italic"&gt;# SSID either as an ASCII string with double quotation or as hex string&lt;/span&gt;
    &lt;span style="color: #003333"&gt;mode&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;                          &lt;span style="color: #0099FF; font-style: italic"&gt;# 0 = managed, 1 = ad-hoc, 2 = access point&lt;/span&gt;
    &lt;span style="color: #003333"&gt;scan_ssid&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;                     &lt;span style="color: #0099FF; font-style: italic"&gt;# = 1 do not broadcast SSID ; = 0 SSID is visible to scans&lt;/span&gt;
    &lt;span style="color: #003333"&gt;proto&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;WPA RSN                   &lt;span style="color: #0099FF; font-style: italic"&gt;# list of supported protocals; WPA = WPA ; RSN = WPA2 (also WPA2 is alias for RSN)&lt;/span&gt;
    &lt;span style="color: #003333"&gt;key_mgmt&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;WPA-PSK WPA-EAP        &lt;span style="color: #0099FF; font-style: italic"&gt;# list of authenticated key management protocols (WPA-PSK, WPA-EAP, ...)&lt;/span&gt;
    &lt;span style="color: #003333"&gt;psk&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;lt;your-network-password&amp;gt;&amp;quot;&lt;/span&gt;   &lt;span style="color: #0099FF; font-style: italic"&gt;# pre-shared key used in WPA-PSK mode ; 8 to 63 character ASCII passphrase&lt;/span&gt;
    &lt;span style="color: #003333"&gt;pairwise&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;CCMP                   &lt;span style="color: #0099FF; font-style: italic"&gt;# accepted pairwise (unicast) ciphers for WPA (CCMP, TKIP, ...)&lt;/span&gt;
    &lt;span style="color: #003333"&gt;auth_alg&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;OPEN                   &lt;span style="color: #0099FF; font-style: italic"&gt;# authentication algorithms (OPEN, ShARED, LEAP, ...)&lt;/span&gt;
    &lt;span style="color: #003333"&gt;priority&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;5&lt;/span&gt;                      &lt;span style="color: #0099FF; font-style: italic"&gt;# priority of selecting network (larger numbers are higher priority)&lt;/span&gt;
&lt;span style="color: #555555"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id_str&lt;/code&gt; is used to set up custom network settings, depending on which access point we are connected to&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scan_ssid&lt;/code&gt; is 1 tells your WiFi adapter to look for the networks automatically and connect when in range&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssid&lt;/code&gt; is the name of the wireless network (what you typically see when you search for WiFi connections)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;psk&lt;/code&gt; is the WiFi password if the network is WPA/WPA2 encrypted, leave out for open or WEP networks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proto&lt;/code&gt; could be either RSN (WPA2) or WPA (WPA1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;key_mgmt&lt;/code&gt; could be either WPA-PSK (most probably) or WPA-EAP (enterprise networks)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pairwise&lt;/code&gt; could be either CCMP (WPA2) or TKIP (WPA1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auth_alg&lt;/code&gt; is most probably OPEN, other options are LEAP and SHARED&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to include other WiFi networks,
just add another &lt;code&gt;network&lt;/code&gt; structure to the file &lt;code&gt;etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt;.
(See examples &lt;a href="http://raspberrypi.stackexchange.com/questions/11631/how-to-setup-multiple-wifi-networks"&gt;here&lt;/a&gt; and &lt;a href="https://www.raspberrypi.org/forums/viewtopic.php?f=91&amp;amp;t=14226"&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Step 4: Configure SSH and Set Hostname&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.raspberrypi.org/documentation/remote-access/ssh/"&gt;As of the November 2016 release&lt;/a&gt;, Raspbian has the SSH server disabled by default.
You will have to enable it manually.
This can done using &lt;code&gt;raspi-config&lt;/code&gt; once you login via monitor/keyboard/mouse
but I want to do this now.&lt;/p&gt;
&lt;p&gt;For Raspbian headless setup,
SSH can be enabled by placing a file named "ssh", without any extension,
onto the boot partition of the SD card.
For my example here, this can be done via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# place file on boot partition&lt;/span&gt;
touch /media/jeff/boot/ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You'll notice that this file is remove once you boot up the Raspberry Pi.
You need to use &lt;code&gt;raspi-config&lt;/code&gt;, as shown in a later step of these instructions,
to permanently activate SSH.&lt;/p&gt;
&lt;p&gt;You can also set the host name of the Raspberry Pi now by modifying the contents
of &lt;code&gt;/etc/hostname&lt;/code&gt;.
Just edit its contests, which is currently &lt;code&gt;raspberry&lt;/code&gt; to what you would like.
If you do this, you can skip the host name modification step that appears in latter steps.&lt;/p&gt;
&lt;h3&gt;Step 5: First Time Boot of the Raspberry Pi&lt;/h3&gt;
&lt;p&gt;Now unmount the SD Card, put the SD Card into the Raspberry Pi,
plug a &lt;a href="http://www.amazon.com/Edimax-EW-7811Un-150Mbps-Raspberry-Supports/dp/B003MTTJOY"&gt;WiFi dongle&lt;/a&gt; into the Raspberry Pi
(not need if its a Raspberry Pi 3), and power it up.
After approximately a minute, the Raspberry Pi will have completely booted up.
At this point your WiFi router should have automatically assigned an IP to the Raspberry Pi
(assuming the router is running DHCP).&lt;/p&gt;
&lt;p&gt;To access the Raspberry Pi, we'll need its host name, which you provided in Step 4,
(generally this defaults to &lt;code&gt;raspberrypi&lt;/code&gt;) or
we’ll need to get the IP address it has been assigned by the network,
which you can get via your WiFi routers administrate interface or &lt;code&gt;nmap&lt;/code&gt; or &lt;code&gt;arp&lt;/code&gt;.
To begin your can scan using &lt;code&gt;nmap -sP&lt;/code&gt;,
which will run a ping scan on the specified network.
For instance, &lt;code&gt;nmap -sP 192.168.1.0/24&lt;/code&gt; will scan the 256 hosts from
192.168.1.0 through 192.168.1.255 to see if they're available, and report back.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# ping scan on the specified network&lt;/span&gt;
sudo nmap -sP 192.168.1.0/24

&lt;span style="color: #0099FF; font-style: italic"&gt;# using arp to find the IP address&lt;/span&gt;
arp -a

&lt;span style="color: #0099FF; font-style: italic"&gt;# ping sweep without nmap&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# waits for all pings to complete and returns ip with mac address&lt;/span&gt;
&lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #003333"&gt;prefix&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;192.168.1&amp;quot;&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;for&lt;/span&gt; i in &lt;span style="color: #CC3300"&gt;`&lt;/span&gt;seq 254&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt; &lt;span style="color: #555555"&gt;(&lt;/span&gt;sleep 0.5 &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ping -c1 -w1 &lt;span style="color: #003333"&gt;$prefix&lt;/span&gt;.&lt;span style="color: #003333"&gt;$i&lt;/span&gt; &amp;amp;&amp;gt; /dev/null &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; arp -n | awk &lt;span style="color: #CC3300"&gt;&amp;#39; /&amp;#39;&lt;/span&gt;&lt;span style="color: #003333"&gt;$prefix&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style="color: #003333"&gt;$i&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39; / { print $1 &amp;quot;\t&amp;quot; $3 } &amp;#39;&lt;/span&gt;&lt;span style="color: #555555"&gt;)&lt;/span&gt; &amp;amp; &lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;; &lt;span style="color: #336666"&gt;wait&lt;/span&gt;&lt;span style="color: #555555"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check to see what devices are running SSH service on port 22:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# using nmap to list IP for devices running with port 22 open&lt;/span&gt;
sudo nmap -p22 -sV 192.168.1.0/24
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So lets assume from the above output that the Raspberry Pi has an IP address of 192.168.1.179
and SSH is running on this Raspberry Pi,
so it can be accessed at via &lt;code&gt;ssh pi@192.168.1.179&lt;/code&gt;
Enter the default password &lt;code&gt;raspberry&lt;/code&gt; and you will now get to the command prompt.
If this is your first time for logging in, you will also be a message:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ ssh pi@192.168.1.179
The authenticity of host &amp;#39;192.168.1.179 (192.168.1.179)&amp;#39; can&amp;#39;t be established.
ECDSA key fingerprint is a6:45:7d:78:4b:c8:52:72:a0:6b:52:37:c8:e6:73:45.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &amp;#39;192.168.1.179&amp;#39; (ECDSA) to the list of known hosts.
pi@192.168.1.179&amp;#39;s password:

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sat Feb 27 15:10:01 2016
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You may also be get with the message:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;NOTICE: this Raspberry Pi has not been fully configured. Please run &amp;#39;sudo raspi-config&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you get it or not, this should be your next step.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; When using a keyboard and monitor (not SSH) when logging in,
the Raspberry Pi OS image &lt;a href="https://www.raspberrypi.org/blog/raspbian-jessie-is-here/"&gt;Jessie&lt;/a&gt; default behaviour is to boot straight to the desktop GUI,
not to the Linux command line as done above.
The motivation is that is the expected behaviour for all modern computers.
When a new image that contains the &lt;code&gt;raspi-config&lt;/code&gt; utility is booted the first time,
the session starts with the &lt;code&gt;raspi-config&lt;/code&gt; screen
(This behaviour is driven by the &lt;code&gt;raspi-config.sh&lt;/code&gt; script in the &lt;code&gt;/etc/profile.d&lt;/code&gt; directory).
Under these conditions, you would be prompted for the next step automatically.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 6: Configure the Raspberry Pi&lt;/h3&gt;
&lt;p&gt;You should now run the &lt;code&gt;sudo raspi-config&lt;/code&gt; (see &lt;a href="http://elinux.org/RPi_raspi-config"&gt;raspi-config documentation&lt;/a&gt;)
This is an interactive script that allowing you to configured multiple devices settings.
We need to change the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hostname&lt;/strong&gt; select this and change the name of the device&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Boot Options&lt;/strong&gt; - select this and choose "B1 Console" - You will need a password to get console access. Gives you greater security and allow console cables to work via &lt;a href="http://www.computerhope.com/unix/screen.htm"&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/a&gt; and &lt;a href="http://manpages.ubuntu.com/manpages/xenial/man1/microcom.1.html"&gt;&lt;code&gt;microcom&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interface&lt;/strong&gt; enable "P2 SSH", enable "P4 SPI", enable "P5 IC2", enable "P6 Serial", enable "P7 1-Wire"&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advanced Options&lt;/strong&gt; - select "A1 Expland Filesystem"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, select &lt;code&gt;&amp;lt;Finish&amp;gt;&lt;/code&gt; but don't reboot yet.
Make this final update:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# set the time zone for your device&lt;/span&gt;
sudo timedatectl set-timezone America/New_York

sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;**NOTE: You can run &lt;code&gt;raspi-config&lt;/code&gt; as a non-interactive command line tool.
See "&lt;a href="https://www.52pi.com/blog/19-instructions-of-command-line-in-raspi-config"&gt;Instructions of command-line in Raspi-config&lt;/a&gt;".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 7: OS Updates&lt;/h3&gt;
&lt;p&gt;Let's make sure you have all the most current Linux packages.
This will patch the Linux operating system and all its GPL applications&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# commandline utility for applications upgrade&lt;/span&gt;
sudo apt-get update &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get dist-upgrade

&lt;span style="color: #0099FF; font-style: italic"&gt;# clean up any packages no longer needed&lt;/span&gt;
sudo apt-get autoremove

&lt;span style="color: #0099FF; font-style: italic"&gt;# if packages were installed, reboot&lt;/span&gt;
sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After a successful upgrade and reboot,
use &lt;code&gt;hostnamectl&lt;/code&gt; and &lt;code&gt;vcgencmd&lt;/code&gt; if you wish to see your current Raspbian version
and firmware version.
See how below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# check you current OS version&lt;/span&gt;
$ hostnamectl
   Static hostname: mesh01
         Icon name: computer
           Chassis: n/a
        Machine ID: 66ed98ff0e86414096aa89869d8e8c09
           Boot ID: d85f8fc7314f427b8049f304baf05b8c
  Operating System: Raspbian GNU/Linux &lt;span style="color: #FF6600"&gt;8&lt;/span&gt; &lt;span style="color: #555555"&gt;(&lt;/span&gt;jessie&lt;span style="color: #555555"&gt;)&lt;/span&gt;
            Kernel: Linux 4.1.17+
      Architecture: arm

&lt;span style="color: #0099FF; font-style: italic"&gt;# check the firmware version&lt;/span&gt;
$ sudo /opt/vc/bin/vcgencmd version
Feb  &lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2016&lt;/span&gt; 17:51:17
Copyright &lt;span style="color: #555555"&gt;(&lt;/span&gt;c&lt;span style="color: #555555"&gt;)&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2012&lt;/span&gt; Broadcom
version b3dc56931507f355d503ea69397778643f7a3dc3 &lt;span style="color: #555555"&gt;(&lt;/span&gt;clean&lt;span style="color: #555555"&gt;)&lt;/span&gt; &lt;span style="color: #555555"&gt;(&lt;/span&gt;release&lt;span style="color: #555555"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 8: Updating Firmware for Raspberry Pi&lt;/h3&gt;
&lt;p&gt;In the case of the Raspberry Pi (RPi), you will want to also upgrade the firmware regularly.
&lt;a href="http://www.raspbian.org/"&gt;Raspbian&lt;/a&gt; is the standard Linux operating system distribution for the RPi,
but it doesn't include firmware.
Never the less, tools for updating the firmware are included in the Raspbian distribution of Linux.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install firmware update tool&lt;/span&gt;
sudo apt-get install rpi-update

&lt;span style="color: #0099FF; font-style: italic"&gt;# check for and install any required Raspberry Pi firmware upgrades&lt;/span&gt;
sudo &lt;span style="color: #003333"&gt;BRANCH&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;next rpi-update

&lt;span style="color: #0099FF; font-style: italic"&gt;# if firmeware is installed, reboot&lt;/span&gt;
sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Rerun the tools &lt;code&gt;hostnamectl&lt;/code&gt; and &lt;code&gt;vcgencmd&lt;/code&gt; to see how your
kernel and firmware may have changed from the earlier step.&lt;/p&gt;
&lt;p&gt;Once these tools have been installed,
periodically you can update the firmware via the commands below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# periodically you can update the firmware via the command&lt;/span&gt;
sudo apt-get install rpi-update

&lt;span style="color: #0099FF; font-style: italic"&gt;# check for and install any required Raspberry Pi firmware upgrades&lt;/span&gt;
sudo &lt;span style="color: #003333"&gt;BRANCH&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;next rpi-update

&lt;span style="color: #0099FF; font-style: italic"&gt;# if firmeware is installed, reboot&lt;/span&gt;
sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If your using the &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Adafruit's Occidentalis distribution&lt;/a&gt;,
this may require a &lt;a href="https://github.com/Hexxeh/rpi-update"&gt;slightly different update tool&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 9: Package Installs (Optional)&lt;/h3&gt;
&lt;p&gt;While the Raspberry Pi comes with a fairly robust set of Linux packages,
it could use some beefing up for most uses.
For example, while the distribution is likely to already have some Python packages installed,
execute the following to make sure you have all that is needed&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# package management tools&lt;/span&gt;
sudo apt-get install software-properties-common

&lt;span style="color: #0099FF; font-style: italic"&gt;# first install Python packages&lt;/span&gt;
sudo apt-get install python python-dev libjpeg-dev libfreetype6-dev python-setuptools python-pip
sudo pip install virtualenv virtualenvwrapper

&lt;span style="color: #0099FF; font-style: italic"&gt;# update the Python distribution&lt;/span&gt;
sudo easy_install -U distribute

&lt;span style="color: #0099FF; font-style: italic"&gt;# install the RPi GPIO and other packages via pip&lt;/span&gt;
sudo pip install RPi.GPIO pySerial nose cmd2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install X Window utilities, some general development tools, and other applications&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# some X Window utilities&lt;/span&gt;
sudo apt-get install x11-apps x11-xserver-utils xterm wmctrl

&lt;span style="color: #0099FF; font-style: italic"&gt;# tools for viewing and minipulating image &amp;amp; video files&lt;/span&gt;
sudo apt-get install imagemagick feh mplayer2

&lt;span style="color: #0099FF; font-style: italic"&gt;# general development tools&lt;/span&gt;
sudo apt-get install markdown git vim vim-gtk libcanberra-gtk-module
sudo apt-get install microcom screen
sudo apt-get install build-essential i2c-tools libssl-dev

&lt;span style="color: #0099FF; font-style: italic"&gt;# so you can discover hosts via Multicast Domain Name System (mDNS)&lt;/span&gt;
sudo apt-get install avahi-daemon

&lt;span style="color: #0099FF; font-style: italic"&gt;# basic networking / firewall tools&lt;/span&gt;
sudo apt-get install dnsutils tcpdump wavemon nicstat nmap ufw rfkill

&lt;span style="color: #0099FF; font-style: italic"&gt;# other handy tools&lt;/span&gt;
sudo apt-get install sendmail gnome-terminal jq
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Appears that getting my favorite browser,
&lt;a href="https://www.google.com/chrome/browser/desktop/index.html"&gt;Chrome&lt;/a&gt; or its open source version &lt;a href="https://www.chromium.org/"&gt;Chromium&lt;/a&gt;,
on the Raspberry Pi &lt;a href="http://conoroneill.net/running-the-latest-chromium-45-on-debian-jessie-on-your-raspberry-pi-2/"&gt;got a bit harder&lt;/a&gt;.
The default browser for the RPi has been &lt;a href="http://midori-browser.org/"&gt;Midori&lt;/a&gt;.
Another popular lightweight browser is &lt;a href="http://links.twibright.com/"&gt;links2&lt;/a&gt;
which can running in both graphics and text mode.
An of course there is the text mode browser &lt;a href="http://lynx.browser.org/"&gt;lynx&lt;/a&gt;.
While Midori is prettier, Links2 appears to be the faster graphics browser.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install the midori and links2 browser&lt;/span&gt;
sudo apt-get install midori links2

&lt;span style="color: #0099FF; font-style: italic"&gt;# to execute the midori browser&lt;/span&gt;
midori &amp;amp;
midori http://www.google.com &amp;amp;

&lt;span style="color: #0099FF; font-style: italic"&gt;# to execute the links browser in grapics mode&lt;/span&gt;
links2 -g &amp;amp;
links2 -g http://www.google.com &amp;amp;

&lt;span style="color: #0099FF; font-style: italic"&gt;# to execute the links browser in text mode&lt;/span&gt;
gnome-terminal -x sh -c &lt;span style="color: #CC3300"&gt;&amp;#39;links2 http://www.google.com&amp;#39;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# to execute the lynx browser&lt;/span&gt;
gnome-terminal -x sh -c &lt;span style="color: #CC3300"&gt;&amp;#39;lynx&amp;#39;&lt;/span&gt;
gnome-terminal -x sh -c &lt;span style="color: #CC3300"&gt;&amp;#39;lynx http://www.google.com&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Google Chrome on your &lt;a href="https://en.wikipedia.org/wiki/ARM_architecture"&gt;ARM architecture&lt;/a&gt; is problematic
because of licensing issues with ARM and bugs with ARM's proprietary drivers.
It appears to be supported on the amd64 architecture.
If your using the amd64 architecture,
use the &lt;code&gt;midori&lt;/code&gt; or &lt;code&gt;links2&lt;/code&gt; browsers,
goto the Chrome download website
&lt;code&gt;https://www.google.com/chrome/browser/desktop/index.html&lt;/code&gt;
and get the &lt;code&gt;.deb&lt;/code&gt; package from Google,
and install it with &lt;code&gt;sudo dpkg -i ....&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Step 10: Load Personal Tools (Optional)&lt;/h3&gt;
&lt;p&gt;Now that all the Linux packages have been loaded,
time to install my personal tools on the device.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install tools for vim text editor&lt;/span&gt;
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~
git clone https://github.com/jeffskinnerbox/.vim.git
ln -s ~/.vim/vimrc ~/.vimrc
mkdir ~/.vim/backup
mkdir ~/.vim/tmp

&lt;span style="color: #0099FF; font-style: italic"&gt;# install tools for bash shell&lt;/span&gt;
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~
git clone https://github.com/jeffskinnerbox/.bash.git
rm .bashrc .bash_logout
ln -s ~/.bash/bashrc ~/.bashrc
ln -s ~/.bash/bash_login ~/.bash_login
ln -s ~/.bash/bash_logout ~/.bash_logout
ln -s ~/.bash/bash_profile ~/.bash_profile
ln -s ~/.bash/dircolors.old ~/.dircolors
sudo cp ~/.bash/virtualenvwrapper.sh ~/.bash/virtualenvwrapper_lazy.sh /usr/local/bin
sudo pip install virtualenvwrapper

&lt;span style="color: #0099FF; font-style: italic"&gt;# install X configuration files&lt;/span&gt;
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~
git clone https://github.com/jeffskinnerbox/.X.git
ln -s ~/.X/xbindkeysrc ~/.xbindkeysrc
ln -s ~/.X/Xresources ~/.Xresources
ln -s ~/.X/xsessionrc ~/.xsessionrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 11: Node.js Development Tools (Optional)&lt;/h3&gt;
&lt;p&gt;Now we'll install some of the Node.js development tools.
This must come after installing my personal tools
since  the installation of &lt;code&gt;nvm&lt;/code&gt; will modify the &lt;code&gt;~/.bashrc&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# first you need to modify your .bashrc file since you copied it from github&lt;/span&gt;
sed --in-place &lt;span style="color: #CC3300"&gt;&amp;#39;s/\/home\/jeff\/.nvm/\/home\/pi\/.nvm/&amp;#39;&lt;/span&gt; ~/.bashrc
&lt;span style="color: #336666"&gt;source&lt;/span&gt; ~/.bashrc

&lt;span style="color: #0099FF; font-style: italic"&gt;# install or update the node version manager (nvm), do the following&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# https://github.com/creationix/nvm&lt;/span&gt;
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash

&lt;span style="color: #0099FF; font-style: italic"&gt;# install the latest stable version of node and make it the default version&lt;/span&gt;
nvm install 6.11.1

&lt;span style="color: #0099FF; font-style: italic"&gt;# install the latest version of npm&lt;/span&gt;
npm install npm@latest --global

&lt;span style="color: #0099FF; font-style: italic"&gt;# node development tools&lt;/span&gt;
npm install jshint --global
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you choose to install Node.js via apt-get package management,
you'll need to avoid a &lt;a href="http://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu"&gt;potential namespace collision&lt;/a&gt; for the word "node",
specifically as it relates to &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;,
make sure to use the &lt;code&gt;nodejs-legacy&lt;/code&gt; package for Node.js.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 12: Boot Without Starting X Window (Optional)&lt;/h3&gt;
&lt;p&gt;The Raspberry Pi's Jessie image is configured to automatically bring up the X Window
graphics system and the supporting GUI (aka &lt;a href="https://en.wikipedia.org/wiki/X_display_manager_(program_type)"&gt;X Window System Display Manager&lt;/a&gt;).
Generally, your not going to be using an RPi to support GUI's for users.
You should turn off X Windows and save yourself some CPU cycles.&lt;/p&gt;
&lt;p&gt;You can discover if X Windows being start at boot up via the command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# query to find out if your in graphical or multi-user mode&lt;/span&gt;
$ systemctl get-default
graphical.target
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The response &lt;code&gt;graphical.target&lt;/code&gt; indicates X Windows is being started on boot up.
The utility &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units"&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/a&gt; is an init system and system manager that is widely
becoming the new standard for Linux machines.&lt;/p&gt;
&lt;p&gt;To no long use the GUI and boot into multi-user mode, use this command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# set to multi-user mode&lt;/span&gt;
sudo systemctl set-default multi-user.target

&lt;span style="color: #0099FF; font-style: italic"&gt;# query to find out if your in graphical or multi-user mode&lt;/span&gt;
$ systemctl get-default
multi-user.target
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that at this point the X Server will still be running.
You can see this via the command &lt;code&gt;ps -aux | grep X&lt;/code&gt;.
You need to reboot the RPi and then you will no long have X Window running.&lt;/p&gt;
&lt;h3&gt;Step 13: Running X Window Clients When You Want It (Optional)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.xquartz.org/index.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="The XQuartz project is an open-source effort to develop a version of the X.Org X Window System that runs on OS X." alt="XQuartz Logo" src="/images/xquartz-logo.jpg" width="70" height="70" /&gt;
&lt;/a&gt;
Despite the fact that you boot without X Windows starting,
you can run &lt;a href="http://www.tldp.org/HOWTO/XWindow-Overview-HOWTO/arch-overview.html"&gt;X Window clients&lt;/a&gt; on the Raspberry Pi
(like the &lt;code&gt;midori&lt;/code&gt; browser)
without any problem if you &lt;code&gt;ssh -X&lt;/code&gt; into the RPi from a machine running
the &lt;a href="https://en.wikipedia.org/wiki/X_Window_System"&gt;X Window System&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/X.Org_Server"&gt;X.Org Server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A simple test to see this work is to run &lt;code&gt;xeyes&lt;/code&gt; on the Raspberry Pi.
A pair of eyes that track you mouse movement should appear in the display
of the machine from which your performing the &lt;code&gt;ssh -X&lt;/code&gt;.
The &lt;code&gt;xeyes&lt;/code&gt; X Window client is running on the RPi
using the display and XServer of our local machine.&lt;/p&gt;
&lt;p&gt;If your using &lt;code&gt;sudo&lt;/code&gt; (say with &lt;code&gt;vim -g&lt;/code&gt;), it gets a little trickier.
You'll find that you get the message
"sudo x11 connection rejected because of wrong authentication"
and the session is in your current window, not in a new window as you want.
The problem is that the X session for the superuser doesn't know what the cookie is.
To fix this, after logging into the Pi execute the following (&lt;a href="http://raspberrypi.stackexchange.com/questions/1719/x11-connection-rejected-because-of-wrong-authentication"&gt;source&lt;/a&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list the cookies for $DISPLAY&lt;/span&gt;
xauth list &lt;span style="color: #003333"&gt;$DISPLAY&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This prints the cookie, something like this:
&lt;code&gt;pi:10 mit-magic-cookie-1 4d22408aga55sad1ccd165723g77923ae&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then login as the superuser &lt;code&gt;sudo su -&lt;/code&gt; and set the cookie
(If you get a message concerning &lt;code&gt;.Xauthority&lt;/code&gt; does not exist
ignore it since the command will create the file):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# add cookie to authorize display connection&lt;/span&gt;
xauth add pi:10 mit-magic-cookie-1 4d22408aga55sad1ccd165723g77923ae
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Maybe a better way around this is  when it comes to using &lt;code&gt;sudo&lt;/code&gt; with &lt;code&gt;vi&lt;/code&gt; or &lt;code&gt;vim&lt;/code&gt;.
Rather than opening &lt;code&gt;vim&lt;/code&gt; as root,
you can simply save as root by redirecting via &lt;code&gt;tee&lt;/code&gt;.
Here is vi/vim command line (&lt;a href="http://vim.wikia.com/wiki/Su-write"&gt;source&lt;/a&gt;):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;:w !sudo tee % &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could alias this in your &lt;code&gt;.vimrc&lt;/code&gt; file with this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot; invoke root privilege when writing file&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;command W w !sudo tee % &amp;gt; /dev/null&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If your not using, &lt;code&gt;ssh&lt;/code&gt; to connect with the Raspberry Pi,
but just using a terminal, say with &lt;a href="http://aperiodic.net/screen/start"&gt;screen&lt;/a&gt; using a &lt;a href="https://learn.adafruit.com/adafruits-raspberry-pi-lesson-5-using-a-console-cable/overview"&gt;console cable&lt;/a&gt;,
your not going to be able run X Window System applications.
You &lt;strong&gt;must&lt;/strong&gt; be connected via TCP/IP to the Raspberry Pi.&lt;/p&gt;
&lt;h3&gt;Step 14: Password-less Login via SSH Keys (Optional)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.openssh.com/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="OpenSSH is for remote login with the SSH protocol. It encrypts all traffic to eliminate eavesdropping, connection hijacking, and other attacks. In addition, OpenSSH provides a large suite of secure tunneling capabilities, several authentication methods, and sophisticated configuration options." alt="open ssh" src="/images/openssh-logo.png" width="92" height="90" /&gt;
&lt;/a&gt;
Public key authentication is an alternative means of
identifying yourself to a login server, instead of typing a password.
It is more secure and more flexible, but more difficult to set up.
This is particularly important if the computer is visible on the Internet.
Also, public key authentication allows you to log into a machine
without a user typing in a password.&lt;/p&gt;
&lt;p&gt;To setup password-less login via public key authentication,
use the posting &lt;a href="http://jeffskinnerbox.me/posts/2016/Apr/27/howto-configure-ssh-public-key-authentication/"&gt;"HowTo: Configure SSH Public Key Authentication"&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 15: Static IP Address (Optional)&lt;/h3&gt;
&lt;p&gt;Currently, your Raspberry Pi connects automatically to your WiFi network
every time it is tuned on,
but you may want to specify a static IP address to communicate with your RPi.&lt;/p&gt;
&lt;p&gt;For example, to set the static IP address to &lt;code&gt;192.168.100.50&lt;/code&gt;,
you'll need to update the file &lt;code&gt;/etc/network/interfaces&lt;/code&gt;.
This file currently looks like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Include files from /etc/network/interfaces.d:&lt;/span&gt;
source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback

iface eth0 inet manual

auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For your static IP address, modify file &lt;code&gt;/etc/network/interfaces&lt;/code&gt; to look like:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Include files from /etc/network/interfaces.d:&lt;/span&gt;
source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback

iface eth0 inet manual

auto wlan0
allow-hotplug wlan0
iface wlan0 inet manual
    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

iface default inet static
    address 192.168.100.50
    netmask 255.255.255.0
    gateway 192.168.100.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Good documentation for the network interface file is hard to find.
You can find online many examples, but What what is missing is an explanation of the syntax,
an explanation of the meaning of the commands and which order the commands require.
&lt;a href="https://www.debian.org/doc/manuals/debian-reference/ch05.en.html#_the_network_interface_name"&gt;What exists is far too complex for the type need&lt;/a&gt;,
and the Ubuntu file &lt;code&gt;/usr/share/doc/ifupdown/examples/network-interfaces&lt;/code&gt; is just examples,
but the &lt;a href="http://manpages.ubuntu.com/manpages/precise/man5/interfaces.5.html"&gt;manual page&lt;/a&gt; is about right in its detail.
Here is a brief summary for your typical needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Layer 2 Options&lt;ul&gt;
&lt;li&gt;&lt;code&gt;auto&lt;/code&gt; Start the interface(s) at boot.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allow-hotplug&lt;/code&gt; start the interface when a "hotplug" event is detected.  This is the same situations as auto but the difference is that it will wait for an event like "being detected by udev hotplug api" or "cable linked".&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Layer 3 Options&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inet static&lt;/code&gt; Defines a static IP address.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inet manual&lt;/code&gt; Does not define an IP address for an interface. Generally used by interfaces that are bridge or aggregation members, or have a VLAN device configured on them.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inet dhcp&lt;/code&gt; Acquire IP address through DHCP protocol.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inet6 static&lt;/code&gt; Defines a static IPv6 address.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface Stanza Options&lt;ul&gt;
&lt;li&gt;&lt;code&gt;address&lt;/code&gt; IP address for a static IP configured interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netmask&lt;/code&gt; netmask&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gateway&lt;/code&gt; The default gateway of a server. Be careful to use only one of this guy.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vlan-raw-device&lt;/code&gt; On a VLAN interface, defines its "father".&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bridge_ports&lt;/code&gt; On a bridge interface, define its members.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;down&lt;/code&gt; Use the following command to down the interface instead of ifdown.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;post-down&lt;/code&gt; Actions taken right after the interface is down.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pre-up&lt;/code&gt; Actions before the interface is up.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up&lt;/code&gt; Use the following command to up the interface instead of ifup.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns-nameservers&lt;/code&gt; IP addresses of nameservers. Requires the &lt;code&gt;resolvconf&lt;/code&gt; package. It’s a way to concentrate all the information in &lt;code&gt;/etc/network/interfaces&lt;/code&gt; instead of using &lt;code&gt;/etc/resolv.conf&lt;/code&gt; for DNS-related configurations. Do not edit the &lt;code&gt;resolv.conf&lt;/code&gt; configuration file manually as it will be dynamically changed by programs in the system.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wpa-ssid&lt;/code&gt; Wireless: Set a wireless WPA SSID.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wpa-psk&lt;/code&gt; Wireless: Set a hexadecimal encoded PSK for your SSID.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 16: Configure Firewall (Optional)&lt;/h3&gt;
&lt;p&gt;I recommend using &lt;a href="https://wiki.ubuntu.com/UncomplicatedFirewall"&gt;&lt;code&gt;ufw&lt;/code&gt; (Uncomplicated FireWall)&lt;/a&gt; to restrict access to the Raspberry Pi.
The Linux kernel provides a packet filtering system called &lt;a href="https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture"&gt;&lt;code&gt;netfilter&lt;/code&gt;&lt;/a&gt;,
and the traditional interface for manipulating &lt;code&gt;netfilter&lt;/code&gt; are the &lt;a href="http://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/"&gt;&lt;code&gt;iptables&lt;/code&gt;&lt;/a&gt; suite of commands.
&lt;code&gt;iptables&lt;/code&gt; provide a complete firewall solution that is highly configurable and flexible
but can be daunting task.
To make things easier, several frontends for &lt;code&gt;iptables&lt;/code&gt; have been created over the years.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ufw&lt;/code&gt; is one of those frontends and its aims is to provide an
easy to use interface for people unfamiliar with firewall concepts,
while at the same time simplifies complicated &lt;code&gt;iptables&lt;/code&gt; commands
to help an administrator who knows what he or she is doing.&lt;/p&gt;
&lt;h3&gt;Step 17: Install Fail2Ban (Optional)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.fail2ban.org/wiki/index.php/Main_Page"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Fail2ban scans log files (e.g. /var/log/apache/error_log) and bans IPs that show the malicious signs -- too many password failures, seeking for exploits, etc. Generally Fail2Ban is then used to update firewall rules to reject the IP addresses for a specified amount of time." alt="fail2ban logo" src="/images/fail2ban-logo.png" width="75" height="75" /&gt;&lt;/a&gt;
Recently I examined my desktop computer's &lt;code&gt;sshd&lt;/code&gt; log file &lt;code&gt;/var/log/auth.log&lt;/code&gt;
(&lt;a href="http://ossec-docs.readthedocs.org/en/latest/log_samples/auth/sshd.html"&gt;log samples from sshd&lt;/a&gt;) looking for failed login attempts.
I saw a list of well over 100 attempts, from mainly one IP (125.88.177.90 - Guangdong, China),
trying to login via SSH as root or bin user.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# attacks on just port 22&lt;/span&gt;
$ cat /var/log/auth.log | grep &lt;span style="color: #CC3300"&gt;&amp;#39;sshd.*Failed&amp;#39;&lt;/span&gt; | grep &lt;span style="color: #CC3300"&gt;&amp;#39;port 22&amp;#39;&lt;/span&gt; | wc
    &lt;span style="color: #FF6600"&gt;806&lt;/span&gt;   &lt;span style="color: #FF6600"&gt;11825&lt;/span&gt;   81130

&lt;span style="color: #0099FF; font-style: italic"&gt;# attacks on any port&lt;/span&gt;
$ cat /var/log/auth.log | grep &lt;span style="color: #CC3300"&gt;&amp;#39;sshd.*Failed&amp;#39;&lt;/span&gt; | wc
  &lt;span style="color: #FF6600"&gt;57110&lt;/span&gt;  &lt;span style="color: #FF6600"&gt;834856&lt;/span&gt; 5744670

&lt;span style="color: #0099FF; font-style: italic"&gt;# failed login attempts&lt;/span&gt;
$ sudo lastb | wc
 &lt;span style="color: #FF6600"&gt;599078&lt;/span&gt; &lt;span style="color: #FF6600"&gt;5990758&lt;/span&gt; 43732586
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also noticed that the attacker is attempting to use multiple originating ports in an effort
to subvert delays required between multiple logins
(see this &lt;a href="http://security.stackexchange.com/questions/67602/closely-spaced-failed-logins-in-auth-log"&gt;article&lt;/a&gt; and &lt;a href="https://hackaday.com/2018/11/14/hack-my-house-opening-raspberry-pi-to-the-internet-but-not-the-whole-world/"&gt;this&lt;/a&gt; if you need more).
I decided it was time to pay a little bit more attention to security!&lt;/p&gt;
&lt;p&gt;The article &lt;a href="https://www.debian-administration.org/article/87/Keeping_SSH_access_secure"&gt;"Keeping SSH Access Secure"&lt;/a&gt; provides some good suggestions.
One method, not referenced in this article, is how you could
rate-limit &lt;code&gt;iptables&lt;/code&gt; rules to address this issue (from this &lt;a href="https://www.debian-administration.org/article/187/Using_iptables_to_rate-limit_incoming_connections"&gt;source&lt;/a&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# block connections if the login fails 10 times in 1 hour on port 22&lt;/span&gt;
iptables -I INPUT -p tcp --dport &lt;span style="color: #FF6600"&gt;22&lt;/span&gt; -m state --state NEW -m recent --set
iptables -I INPUT -p tcp --dport &lt;span style="color: #FF6600"&gt;22&lt;/span&gt; -m state --state NEW -m recent --update --seconds &lt;span style="color: #FF6600"&gt;3600&lt;/span&gt; --hitcount &lt;span style="color: #FF6600"&gt;10&lt;/span&gt; -j DROP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This blocks connections if the login fails ten times in one hour on port 22.&lt;/p&gt;
&lt;p&gt;Another easy answer would be to limit &lt;code&gt;ssh&lt;/code&gt; access from wlan interface only.
This works if you have no plans to &lt;code&gt;ssh&lt;/code&gt; into your device from the Internet,
effectively cuts out the attacks from the Internet.
But of course, if your neighbors nerdy 13 year old wants to mess with your WiFi,
you still could have some attacks.&lt;/p&gt;
&lt;p&gt;If your wondering how many times somebody has tried to log on,
with or without SSH,the &lt;code&gt;last&lt;/code&gt; command shows the number of successful attempts.
The &lt;code&gt;lastb&lt;/code&gt; command shows the number of unsuccessful attempts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;last&lt;/code&gt; and &lt;code&gt;lastb&lt;/code&gt; commands write to the
&lt;code&gt;/var/log/wtmp&lt;/code&gt; and &lt;code&gt;/var/log/btmp&lt;/code&gt; files, respectively.
If you ever see these files zeroed out, you might have a problem.&lt;/p&gt;
&lt;p&gt;So its just a matter of time before the attack is on another port, or user account, or network interface,
therefore using &lt;a href="http://www.fail2ban.org/wiki/index.php/Main_Page"&gt;Fail2Ban&lt;/a&gt; or something similar may be in order.
&lt;code&gt;fail2ban&lt;/code&gt; reads the &lt;code&gt;sshd&lt;/code&gt; log entries (and other log files)
and bans the originating address when there are too many failures.
Generally Fail2Ban is then used to update firewall rules to reject
the IP addresses for a specified amount of time, although any arbitrary other action
(e.g. sending an email) could also be configured.
Out of the box Fail2Ban comes with filters for various services (apache, courier, ssh, etc.).&lt;/p&gt;
&lt;p&gt;For the installation and configuration of Fail2Ban,
check out &lt;a href="http://jeffskinnerbox.me/posts/2016/Apr/27/howto-install-and-configure-fail2ban/"&gt;"HowTo: Install and Configure Fail2Ban"&lt;/a&gt;
While Fail2Ban does provide additional protection, the use of two factor authentication
(see &lt;a href="http://jeffskinnerbox.me/posts/2015/Nov/28/two-factor-authentication-via-google-authenticator/"&gt;"Two-Factor Authentication via Google Authenticator"&lt;/a&gt;) can increase your protection.
The use of public/private key authentication mechanisms
(see &lt;a href="http://jeffskinnerbox.me/posts/2016/Apr/27/howto-configure-ssh-public-key-authentication/"&gt;"HowTo: Configure SSH Public Key Authentication"&lt;/a&gt;)
can provide the best protection overall.&lt;/p&gt;
&lt;h3&gt;Step 18: Basic Security (Optional)&lt;/h3&gt;
&lt;p&gt;Beyond the SSH login security take in Step 15,
you should minimize your exposure to other network security attacks
and following some of the tips outlined in the postings
&lt;a href="https://www.hackster.io/charifmahmoudi/iot-security-tips-to-protect-your-device-from-bad-hackers-768093?utm_source=Hackster.io+newsletter&amp;amp;utm_campaign=3e0b3a91f6-2015_4_17_Top_projects4_16_2015&amp;amp;utm_medium=email&amp;amp;utm_term=0_6ff81e3e5b-3e0b3a91f6-140225889"&gt;"IoT Security: Tips to Protect your Device from Bad Hackers"&lt;/a&gt;
and &lt;a href="http://jjjjango.blogspot.com/2015/01/secure-your-raspberry-pi.html"&gt;"Secure your Raspberry Pi"&lt;/a&gt; is a good start.&lt;/p&gt;
&lt;h3&gt;Step 19: Install Watchdog (Optional)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://dovgalecs.com/blog/keeping-your-raspberry-pi-alive-enabling-hardware-watchdog-under-arch-linux/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="A watchdog timer is a piece of hardware or software that can be used to automatically detect software anomalies and reset the processor if any occur. Generally speaking, a watchdog timer is based on a counter that counts down from some initial value to zero." alt="watchdog" src="/images/watchdog.jpg" width="115" height="110" /&gt;
&lt;/a&gt;
A &lt;a href="http://www.embedded.com/electronics-blogs/beginner-s-corner/4023849/Introduction-to-Watchdog-Timers"&gt;Watchdog&lt;/a&gt; is a kind of peripheral that will boot your device
if it doesn’t get "fed" at regular times or intervals
Therefore, it can prevent your system from hanging.
It’s a nice feature to have,
specially if there’s nobody around to press the "reset" button for you.&lt;/p&gt;
&lt;p&gt;Watchdog's can be built with hardware or software,
but they do differ in the types of problems they can address.
A hardware watchdog resets the system automatically even when the CPU crashes.
A software watchdog can do something only when given a slice of CPU time.
The end result is that a software watchdog can fail to respond to total system crash.&lt;/p&gt;
&lt;p&gt;Luckily, the Raspberry Pi's BCM2835 and BCM2708 SoC chip have a hardware watchdog built in.
For how to make use of the watchdog and additional information, check out these sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://betterembsw.blogspot.com/2014/05/proper-watchdog-timer-use.html"&gt;Proper Watchdog Timer Use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.ricardoarturocabral.com/2013/01/auto-reboot-hung-raspberry-pi-using-on.html"&gt;Auto-reboot a hung Raspberry Pi using the on-board watchdog timer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.switchdoc.com/2014/11/reliable-projects-using-internal-watchdog-timer-raspberry-pi/"&gt;Using the Internal WatchDog Timer for the Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jann.cc/2013/02/02/linux_watchdog.html"&gt;Using the Watchdog Timer in Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://embeddedfreak.wordpress.com/2010/08/23/howto-use-linux-watchdog/"&gt;Howto Use Linux Watchdog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sat.dundee.ac.uk/psc/watchdog/watchdog-configure.html"&gt;Linux Watchdog Daemon - Configuring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kernel.org/doc/Documentation/watchdog/watchdog-api.txt"&gt;The Linux Watchdog driver API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 20: Clone the SD Card (Optional)&lt;/h3&gt;
&lt;p&gt;There are a few reasons you might want to
&lt;a href="https://www.raspberrypi.org/documentation/linux/filesystem/backup.md"&gt;duplicate (clone/copy) your Raspberry Pi’s SD Card&lt;/a&gt;.
One reason is to create a backup.
Another reason maybe is that you just spent untold hours installing and configuring
software on your Raspberry Pi,
and you want to set up a second Raspberry Pi,
but didn’t want to spend the time to duplicate the previous efforts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; If the two device have different firmware, you could have problems.
Firmware is stored within the hardware and not transferable via the SD Card.
Make sure all your devices are at the same firmware level or you could have unpredictable results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To clone your SD Card:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove the original SD Card from Raspberry Pi and insert it into a card reader on your computer.&lt;/li&gt;
&lt;li&gt;Locate where the SD Card is mounted on your computer.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;dd&lt;/code&gt; (convert and copy a file) command to duplicate the contents of the SD Card to your computer.&lt;/li&gt;
&lt;li&gt;Unmount original SD Card. Mount the new SD Card.&lt;/li&gt;
&lt;li&gt;Reverse the process by copying the duplicate file (i.e. the backup file) to the new SD Card.&lt;/li&gt;
&lt;li&gt;Unmount the newly created duplicate SD Card.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# go to a directory where you can store the copied SD Card&lt;/span&gt;
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; /home/jeff/tmp

&lt;span style="color: #0099FF; font-style: italic"&gt;# we&amp;#39;ll assume&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     sdj: this is the primary hard drive&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     sdj1: this is the boot partition on the SD card&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     sdj2: this is the / partition on the SD card&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# unmount the sd card reader&lt;/span&gt;
sudo umount /dev/sdj1
sudo umount /dev/sdj2

&lt;span style="color: #0099FF; font-style: italic"&gt;# write the sd card copy to the file system&lt;/span&gt;
sudo dd &lt;span style="color: #003333"&gt;bs&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;4M &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/dev/sdj &lt;span style="color: #003333"&gt;of&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;~/tmp/sd-card-backup.img

&lt;span style="color: #0099FF; font-style: italic"&gt;# ensure the write cache is flushed&lt;/span&gt;
sudo sync
sudo umount /dev/sdj
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you have an image of the Raspberry Pi on you desktop computerr hard drive.
When it comes time to create another Raspberry Pi with this same image,
use the following procedure:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;umount /dev/sdj

&lt;span style="color: #0099FF; font-style: italic"&gt;# take sd card image you just created and writes it to the device&lt;/span&gt;
sudo dd &lt;span style="color: #003333"&gt;bs&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;4M &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;~/tmp/sd-card-backup.img &lt;span style="color: #003333"&gt;of&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/dev/sdj

&lt;span style="color: #0099FF; font-style: italic"&gt;# ensure the write cache is flushed and unmount&lt;/span&gt;
sudo sync
sudo umount /dev/sdj
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should now be able to insert the cloned SD Card into a brand new Raspberry Pi and boot it up,
but you will want to make some adjustments.
There are some things you want to change on the cloned Raspberry Pi SC Card.
For one thing, you should change the cloned Raspberry Pi’s host name
so it doesn’t conflict with the original Raspberry Pi on the network.
This is easily done:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# modify the host name&lt;/span&gt;
sudo vi /etc/hostname

&lt;span style="color: #0099FF; font-style: italic"&gt;# restart the advertised host name&lt;/span&gt;
sudo /etc/init.d/hostname.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another thing concerns the password-less login via SSH keys your might have established.
The credentials on the cloned SC Card will not allow you to login
and if you set &lt;code&gt;PasswordAuthentication&lt;/code&gt; to "no" with the &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file,
then you can't use SSH to login via a password either.
(see &lt;a href="http://jeffskinnerbox.me/posts/2016/Apr/27/howto-configure-ssh-public-key-authentication/"&gt;"HowTo: Configure SSH Public Key Authentication"&lt;/a&gt;).
You'll need to set this to "yes".&lt;/p&gt;
&lt;p&gt;You may also find that firmware could be an issue.
Your cloned software may not be compatible with the firmware on the hardware
(firmware is stored within the hardware and not transferable via the SD Card).
This can cause mysterious problems (like WiFi adapter not working, just to name one).&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="How To"></category><category term="Raspberry Pi"></category><category term="WiFi"></category><category term="Linux"></category><category term="Public Key Authentication"></category><category term="Security"></category></entry><entry><title>My Exploration of Hard Cider Brewing</title><link href="/posts/2016/Apr/13/my-exploration-of-hard-cider-brewing/" rel="alternate"></link><published>2016-04-13T21:55:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-04-13:posts/2016/Apr/13/my-exploration-of-hard-cider-brewing/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.hardciderproject.com/"&gt;
    &lt;img class="img-rounded" style="image-orientation: 90deg; margin: 0px 8px; float: left" title="My one gallon fermenter and airlock brewing my very first batch of hard cider." alt="hard cider" src="/images/hard-cider-fermenter.jpg" width=20% height=20% /&gt;
&lt;/a&gt;
Hard apple cider is the kindest of the do-it-yourself homemade alcoholic beverages.
Beer must be cumbersomely boiled, wine is expensive and temperamental,
and poorly distilled spirits can blow up your house.
They all take so much equipment, so much research, and give all the beer, wine, and spirits
on the market, why bother.
On the other hand, hard cider is a relative cakewalk to make at home.&lt;/p&gt;
&lt;p&gt;For me, its is a worth while endeavor to pick up the &lt;a href="https://www.mainbrew.com/fermenting_hard_cider-ExtraPages.html"&gt;art of fermenting cider&lt;/a&gt;.
I have purchased a few good hard apple cider where I live,
only to find  out later that where I purchase it no longer carries it.
Also, I have developed a longing for a specific style of hard cider.
I crave a hard cider that isn't clear
(I think the yeast apple particulates can add something to the taste),
high alcohol level (ABV of 8% or more),
slightly sweet,
and a crisp apple taste.
Frankly, I have yet to purchase my ideal hard apple cider.&lt;/p&gt;
&lt;p&gt;There may be some regulatory reasons for my disappointment in the hard cider I purchase.
The web site, &lt;a href="http://www.hardciderproject.com/hcp/"&gt;The Hard Cider Project&lt;/a&gt;, posted a article titled
"&lt;a href="http://www.hardciderproject.com/federal-regulations-completely-restricted-hard-cider-making/"&gt;Why Federal Regulations Have Completely Restricted Hard Cider Making&lt;/a&gt;".
The basic thesis is that
&lt;a href="http://www.ecfr.gov/cgi-bin/text-idx?rgn=div5&amp;amp;node=27:1.0.1.1.19#se27.1.24_110"&gt;Title 27: Alcohol, Tobacco and Firearms, Part 24 Wine, §24.10 Meaning of terms&lt;/a&gt;
of the Federal Regulations defines hard cider into a narrow category.
It restricts both its alcohol content (&amp;lt; 7% ABV) and things that can be added
(can't add anything that imparts a fruit flavor other than apple).
The result is not a very exciting hard cider, otherwise your subject to
higher taxes because the Feds call it wine or champagne.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.rinkerorchards.com/index.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="A local farmer produces Rinker's Apple Cider and its the brand I prefer." alt="rinkers label" src="/images/rinkers-cider-label.jpg" width="165" height="197" /&gt;
&lt;/a&gt;
So in October of &lt;a href="http://jeffskinnerbox-wiki.herokuapp.com/#Hard%20Apple%20Cider%20-%20Batch%20%231:%5B%5BHard%20Apple%20Cider%20-%20Batch%20%231%5D%5D"&gt;2014&lt;/a&gt; and &lt;a href="http://jeffskinnerbox-wiki.herokuapp.com/#Hard%20Apple%20Cider%20-%20Batch%20%239:%5B%5BHard%20Apple%20Cider%20-%20Batch%20%239%5D%5D"&gt;2015&lt;/a&gt;,
I took the plunge and brewed several batches of hard cider and &lt;a href="https://www.geocaching.com/geocache/GC5CKAM_applejack?guid=41d5bad9-2f30-4be4-8819-c775c64e5da1"&gt;applejack&lt;/a&gt;
(aka &lt;a href="http://www.urbandictionary.com/define.php?term=Jersey+Lightning"&gt;Jersey Lightning&lt;/a&gt;)
using locally &lt;a href="https://en.wikipedia.org/wiki/Fruit_press"&gt;pressed&lt;/a&gt;, &lt;a href="http://www.foodsafetysite.com/educators/competencies/general/foodprocessing/processing2.html"&gt;heat pasteurized&lt;/a&gt; sweet apple cider.
After several rounds of experimentation,
I settled on a process and receipt that is getting close to my ideal hard cider.
A hard cider with a high ABV, as I crave, can be tricky.
Higher ABV may make it more harsh and less apple-tasting.
Also, a fully fermented cider is very, very dry.
It will still having some apply flavor,
it is a long way for the refreshing taste of sweet apply cider.&lt;/p&gt;
&lt;p&gt;My solution to this, in an effort to create my ideal hard apple cider,
was to do two things.
First, to get the high ABV,
I took a portion of the hard cider, made it into &lt;a href="https://www.geocaching.com/geocache/GC5CKAM_applejack?guid=41d5bad9-2f30-4be4-8819-c775c64e5da1"&gt;applejack&lt;/a&gt;,
and then mixed it back into the hard cider.
Second, to get the sweet apple taste I wanted,
I &lt;a href="http://jeffskinnerbox-wiki.herokuapp.com/#back-sweetening:back-sweetening"&gt;back-sweeten&lt;/a&gt; the hard cider with a combination of brown sugar and sweet apple cider.
I used the traditional method of making applejack
&lt;a href="http://www.distillingliquor.com/2015/02/13/how-to-make-applejack-freeze-distillation/"&gt;freeze distillation&lt;/a&gt;, as opposed to &lt;a href="https://en.wikipedia.org/wiki/Steam_distillation"&gt;steam distillation&lt;/a&gt;.
I also age it for at least 3 months before carbonating and then drinking it.
I got to say, its dam good!&lt;/p&gt;
&lt;p&gt;After much research on the Internet,
I concluded my mixing of hard cider with applejack is a unique receipt,
so it deserves a name.
Using the fact that the word "applejack" is derives from "jacking"
(an American colonial term for freeze distillation),
I choose to call it "&lt;strong&gt;Jeff's Jacked Hard Cider&lt;/strong&gt;",
or "&lt;strong&gt;Jeff's Jacked&lt;/strong&gt;",
or sometimes more lovingly called "&lt;strong&gt;My &lt;a href="http://www.dictionary.com/browse/hooch"&gt;Hooch&lt;/a&gt;&lt;/strong&gt;".&lt;/p&gt;
&lt;p&gt;You can find my receipt &lt;a href="http://jeffskinnerbox-wiki.herokuapp.com/#:%5B%5BHard%20Apple%20Cider%20-%20Batch%20%2310%5D%5D"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My next brewing adventure will be some variation of &lt;a href="http://www.thedrunkpirate.com/how-to-make-sweet-apple-pie-moonshine/"&gt;Apple Pie Moonshine&lt;/a&gt;!&lt;/p&gt;</summary><category term="Hard Cider"></category><category term="Applejack"></category></entry><entry><title>HowTo: Coping With a Changing External IP Address</title><link href="/posts/2016/Feb/07/howto-coping-with-a-changing-external-ip-address/" rel="alternate"></link><published>2016-02-07T13:14:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-02-07:posts/2016/Feb/07/howto-coping-with-a-changing-external-ip-address/</id><summary type="html">&lt;p&gt;&lt;a href="http://whatismyipaddress.com/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Since I'm not using a static IP for my home router, my ISP can change my IP address as they sees fit. But in order for me to SSH into my home server from outside my local network, I need my home’s router current IP address." alt="internet connection picture" src="/images/internet-connection.png" width="128" height="128" /&gt;
&lt;/a&gt;
Some ISPs frequently change the IP address they provide you,
while others provide it on a long lease but may still change it.
Most ISPs allocate their range of IP addresses dynamically (using DHCP),
and the “lease” is often until you reboot the router or set to 24 hours,
which is why your address might change frequently.
For most users, changing IP doesn’t matter,
but in my case, I need a known address so I can login remotely.
To do this easily, you could have your ISP give you a fixed address
(aka a static IP address),
but if they offer this service at all, they will charge you for it.&lt;/p&gt;
&lt;p&gt;I don't want to pay for the static IP address, so I need an alternative.
One alternative is to make use of a &lt;a href="https://en.wikipedia.org/wiki/Dynamic_DNS"&gt;Dynamic DNS (DDNS)&lt;/a&gt; address service.
These services associate your actual address (in its numerical form)
with a fixed mnemonic address in real time,
so as long as you have  mnemonic form, it will point you to  your server.
This service can also cost you money.
(e.g. &lt;a href="http://dyn.com/dns/"&gt;Dyn&lt;/a&gt; has stopped their free plans
but &lt;a href="http://www.noip.com/"&gt;No-IP&lt;/a&gt; provides a quasi-free service).
Your home router will also need to support the DDNS client.
Not all routes support DDNS,
but &lt;a href="https://wiki.openwrt.org/doc/howto/ddns.client"&gt;OpenWrt does&lt;/a&gt; and is &lt;a href="http://www.pebra.net/blog/2014/02/07/installing-openwrt-on-wd-mynet-n600/"&gt;fairly easy to install&lt;/a&gt;
if you want to go in this direction.&lt;/p&gt;
&lt;p&gt;The cheapskate alternative is to create a service on your server
that email or other wish notifies you, when the IP address changes.
This is practical if the IP address isn't changing too frequently,
which happens to be my case.
My choose is to use a  simple service for periodically looking up my IP address,
specifically using the website &lt;a href="http://ifconfig.co/"&gt;ifconfig.co&lt;/a&gt;.
The design is to execute the command &lt;code&gt;curl ifconfig.co&lt;/code&gt; periodically,
check if the IP address has changes, and if so, email or text the change to myself.&lt;/p&gt;
&lt;p&gt;To do this, I placed the shell program listed below, which I call &lt;code&gt;ip_check&lt;/code&gt;,
in &lt;code&gt;cron&lt;/code&gt; to run every hour.&lt;/p&gt;
&lt;!-- -------- Start: Gist Code Snippet --------- --&gt;

&lt;p&gt;&lt;style="padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: rgb(0, 0, 0); background-color: rgb(238, 238, 238); font-size: 12px; line-height: 14px; width: 90%;"&gt;
    &lt;script src="https://gist.github.com/jeffskinnerbox/fd4c1ea2f22a361f4164.js"&gt;&lt;/script&gt;
&lt;/style&gt;
&lt;!-- --------- End: Gist Code Snippet ---------- --&gt;&lt;/p&gt;
&lt;p&gt;To run the script in &lt;a href="https://en.wikipedia.org/wiki/Cron"&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/a&gt; every hour,
I &lt;a href="http://man7.org/linux/man-pages/man5/crontab.5.html"&gt;edited the cron table&lt;/a&gt; via the command &lt;code&gt;crontab -e&lt;/code&gt;
and place the following in the table: &lt;code&gt;@hourly  /home/jeff/bin/ip_check -x&lt;/code&gt;.
Also note that &lt;code&gt;cron&lt;/code&gt; can be temperamental,
so check out the post "&lt;a href="http://askubuntu.com/questions/23009/reasons-why-crontab-does-not-work"&gt;Reasons why crontab does not work&lt;/a&gt;"
if you have problems getting it working.&lt;/p&gt;
&lt;p&gt;The above shell program makes use of the utility &lt;code&gt;apprise&lt;/code&gt;,
a push notification tool for the &lt;a href="https://pushover.net/"&gt;Pushover&lt;/a&gt; service.
This will notify me on my cell phone of any changes to the external IP address.&lt;/p&gt;
&lt;!-- -------- Start: Gist Code Snippet --------- --&gt;

&lt;p&gt;&lt;style="padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: rgb(0, 0, 0); background-color: rgb(238, 238, 238); font-size: 12px; line-height: 14px; width: 90%;"&gt;
    &lt;script src="https://gist.github.com/jeffskinnerbox/13cd61e4d99feb0dcbca.js"&gt;&lt;/script&gt;
&lt;/style&gt;
&lt;!-- --------- End: Gist Code Snippet ---------- --&gt;&lt;/p&gt;</summary><category term="How To"></category><category term="DDNS"></category></entry><entry><title>HowTo: Connecting to Remote X11 Host from a Mac</title><link href="/posts/2016/Jan/29/howto-connecting-to-remote-x11-host-from-a-mac/" rel="alternate"></link><published>2016-01-29T19:55:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2016-01-29:posts/2016/Jan/29/howto-connecting-to-remote-x11-host-from-a-mac/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.xquartz.org/index.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="The XQuartz project is an open-source effort to develop a version of the X.Org X Window System that runs on OS X." alt="XQuartz Logo" src="/images/xquartz-logo.jpg" width="90" height="90" /&gt;
&lt;/a&gt;
I want to &lt;a href="http://docstore.mik.ua/orelly/unix3/upt/ch06_10.htm"&gt;run a remote X client&lt;/a&gt; on my Linux desktop (with Ubuntu and X Window System)
and display that client application my Apple MacBook Pro laptop running
OS X Yosemite (version 10.10.5).
I was hoping that, since Mac originated from parts of the Linux / X Window world,
I could simply run &lt;code&gt;ssh -X user@server&lt;/code&gt;,
but this doesn't do the trick.&lt;/p&gt;
&lt;h2&gt;Installation of XQuartz&lt;/h2&gt;
&lt;p&gt;After multiple attempts to get things working,
I &lt;a href="http://www.cyberciti.biz/faq/apple-osx-mountain-lion-mavericks-install-xquartz-server/"&gt;discovered&lt;/a&gt; that to use ssh with X11 Forwarding,
you need to install XQuartz&lt;sup id="fnref:A"&gt;&lt;a class="footnote-ref" href="#fn:A" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; on OS X v10.8 or above.
The &lt;a href="http://www.xquartz.org/"&gt;XQuartz project&lt;/a&gt; is an open-source effort to develop
a version of the &lt;a href="http://www.x.org/wiki/"&gt;X.Org&lt;/a&gt; X Window System that runs on OS X.
This is Apple's version of the X server.
You need to download and install the server before using ssh with X11 forwarding.
Just follow the instructions given &lt;a href="http://www.cyberciti.biz/faq/apple-osx-mountain-lion-mavericks-install-xquartz-server/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once the install is completed,
clicking on the XQuartz logo gives you a XTerm.
Within the XTerm,
you can run an application on the remote system using the following commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# execute a XTerm on the remove system and display on you local Mac&lt;/span&gt;
ssh -X -C user@server-ip

&lt;span style="color: #0099FF; font-style: italic"&gt;# execute an app on the remote system, go to background, and display on your local Mac&lt;/span&gt;
ssh -f -X -C user@server-ip /path/to/app-name
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;user@server-ip&lt;/strong&gt;: remote login username and password&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-f&lt;/strong&gt;: Requests ssh to go to background just before command execution. This is useful if ssh is going to ask for passwords or passphrases, but the user wants it in the background. This is the recommended way to start X11 programs at a remote site/host.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-X&lt;/strong&gt;: Enables X11 forwarding.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-C&lt;/strong&gt;: Requests compression of all data (including stdin, stdout, stderr, and data for forwarded X11 and TCP connections).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-c cipher&lt;/strong&gt;: Selects the cipher specification for encrypting the session.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-T&lt;/strong&gt;: Disable pseudo-tty allocation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use compression, &lt;strong&gt;-C&lt;/strong&gt;,
if you think that programs are running slowly because of a lack of bandwidth or network congestion.&lt;/p&gt;
&lt;h2&gt;.Xresources or .Xdefaults?&lt;/h2&gt;
&lt;p&gt;Many X programs have user-level configuration options that can be set in the &lt;a href="https://en.wikipedia.org/wiki/X_resources"&gt;X server resource database&lt;/a&gt;.
Depending on your version of X.Org,
the most common ways to achieve persistent configuration for your X programs are to store them in either
the &lt;code&gt;.Xresources&lt;/code&gt; or &lt;code&gt;.Xdefaults&lt;/code&gt; files which are read when X starts or when the X client starts, respectively.
Both are user configurable dotfiles located in &lt;code&gt;$HOME&lt;/code&gt; used to set X resources.
These are configuration parameters for X client applications, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;defining terminal colours&lt;/li&gt;
&lt;li&gt;configuring terminal preferences&lt;/li&gt;
&lt;li&gt;setting dots-per-inch (DPI), anti-aliasing, hinting and other X font settings&lt;/li&gt;
&lt;li&gt;changing the Xcursor theme&lt;/li&gt;
&lt;li&gt;theming xscreensaver&lt;/li&gt;
&lt;li&gt;altering preferences on low-level X applications (e.g. xclock, xeyes)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Consider the X program &lt;code&gt;xterm&lt;/code&gt;.
You want to make the background black and the foreground white.
This can be achieved by passing some command line arguments to xterm:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# xterm with background black and foreground white&lt;/span&gt;
xterm -bg black -fg white
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is fine if you want this for only one time,
but if you want it to be the default, you put it in a configuration file
&lt;code&gt;.Xresources&lt;/code&gt; or &lt;code&gt;.Xdefaults&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;XTerm*background: black
XTerm*foreground: white
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The difference between these two files are the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.Xdefaults&lt;/code&gt; is the older method of storing X resources.
This file is re-read every time an Xlib program is started.
If X11 is used over the network, the file must be present on the same filesystem as the programs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.Xresources&lt;/code&gt; is newer. It is loaded with &lt;a href="http://docstore.mik.ua/orelly/unix3/upt/ch06_08.htm"&gt;&lt;code&gt;xrdb&lt;/code&gt;&lt;/a&gt; into the &lt;a href="https://tronche.com/gui/x/xlib/resource-manager/"&gt;resource manager&lt;/a&gt;
property of the X11 root window.
Whenever any program looks up a resource, it is read straight from resource manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If &lt;code&gt;.Xresources&lt;/code&gt; does not exist,
Xlib falls back to the old method of reading &lt;code&gt;.Xdefaults&lt;/code&gt; on every program startup.
Note that most distributions will load &lt;code&gt;.Xresources&lt;/code&gt; automatically if it is present,
causing &lt;code&gt;.Xdefaults&lt;/code&gt; to be ignored even if you have never run &lt;code&gt;xrdb&lt;/code&gt; manually.&lt;/p&gt;
&lt;p&gt;The advantage of the new method is that it's enough to call &lt;code&gt;xrdb&lt;/code&gt; once,
and the resources will be available to any program running on this display,
whether local or remote.
Use of &lt;code&gt;.Xdefaults&lt;/code&gt; comes at the cost that basically
all X programs needs to parse this file every time you run one.
A better way is to put the configuration options in &lt;code&gt;.Xresources&lt;/code&gt;
and store the configuration in the X server’s resource database by using the &lt;code&gt;xrdb&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# intialize user configurable resources using the X server resource database utility, xrdb&lt;/span&gt;
xrdb -merge &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.Xresources
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This execution of &lt;code&gt;xrdb&lt;/code&gt; is done automatically when you login on most Linux distributions.
Also, the name &lt;code&gt;.Xresources&lt;/code&gt; is only a convention –
you can use &lt;code&gt;xrdb&lt;/code&gt; to load any file, even &lt;code&gt;.Xdefaults&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Short Digression Concerning gVim and MacVim&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vi&lt;/code&gt; / &lt;code&gt;vim&lt;/code&gt; / &lt;code&gt;gvim&lt;/code&gt; has long been my standard text editor on Linux.
Assuming you have the editors configured properly on the remote system,
and you're using Xterm to login in,
you should have no difficulty using it with XQuartz.&lt;/p&gt;
&lt;p&gt;This easy of use made me ponder why I could never get &lt;code&gt;gvim&lt;/code&gt;
to work properly with my &lt;code&gt;.vimrc&lt;/code&gt; resource file on my Mac,
even when working within the XQuartz XTerm.
A small amount of research taught me that &lt;code&gt;gvim&lt;/code&gt; requires
X.Org and I must use &lt;a href="http://macvim-dev.github.io/macvim/"&gt;MacVim&lt;/a&gt; instead.
If you’re on a Mac, you just have to use &lt;code&gt;MacVim&lt;/code&gt; as the &lt;code&gt;gvim&lt;/code&gt; alternative,
there seems to be no way out of it.
It’s basically like &lt;code&gt;gvim&lt;/code&gt;, except for Mac OS.&lt;/p&gt;
&lt;p&gt;To help get MacVim working, use the following articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://awebfactory.com/node/541"&gt;Getting MacVim to run properly on Yosemite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/21012203/gvim-or-macvim-in-mac-os-x"&gt;Gvim or MacVim in Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://effectif.com/vim/running-vim-with-ruby-support-in-terminal"&gt;Running MacVim in your terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://renesd.blogspot.com/2009/08/gvim-cmdline-osx-macvim-from-terminal.html"&gt;gvim cmdline OSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:A"&gt;
&lt;p&gt;On your Mac, check out this directory &lt;code&gt;/Applications/Utilities/&lt;/code&gt; and you will find the file &lt;code&gt;X11.app&lt;/code&gt;.
It will give give you some instructions on how to support X11.
The latest version of Apple OS X no longer ships with X11.app, i.e. XQuartz server.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="How To"></category><category term="Mac"></category><category term="Vim"></category><category term="MacVim"></category><category term="XQuartz"></category><category term="X Window System"></category></entry><entry><title>Two-Factor Authentication via Google Authenticator</title><link href="/posts/2015/Nov/28/two-factor-authentication-via-google-authenticator/" rel="alternate"></link><published>2015-11-28T10:16:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2015-11-28:posts/2015/Nov/28/two-factor-authentication-via-google-authenticator/</id><summary type="html">&lt;h1&gt;Two-Factor Authentication&lt;/h1&gt;
&lt;p&gt;&lt;div style="float: left"&gt;
    &lt;a href="http://security.stackexchange.com/questions/41939/two-step-vs-two-factor-authentication-is-there-a-difference"&gt;
        &lt;img class="img-rounded" style="margin: 0px 8px; width: 247px; height: 111px" title="Strictly speaking, Google Authenticator is a Two STEP Authentication methodology. Never the less, it is close too it.  This implementation pragmatically require the phone, the 2nd factor." alt="2FA-Picture" src="/images/two-factor-authentication.png" /&gt;
    &lt;/a&gt;
&lt;/div&gt;
I want additional security for my SSH login exposed to the Internet,
specifically &lt;a href="http://www.cnet.com/news/two-factor-authentication-what-you-need-to-know-faq/"&gt;Two-Factor Authentication (2FA)&lt;/a&gt;.
&lt;a href="https://twofactorauth.org/"&gt;Increasingly, websites are being built to support 2FA natively&lt;/a&gt;
and you can &lt;a href="http://lifehacker.com/5938565/heres-everywhere-you-should-enable-two-factor-authentication-right-now?disableinsets=on&amp;amp;utm_expid=66866090-49.VYy4WCNHSyuP6EmjnM93MQ.2&amp;amp;utm_referrer=https%3A%2F%2Fwww.google.com%2F"&gt;take advantage of 2FA at these sites&lt;/a&gt;,
but it &lt;a href="http://www.cnet.com/how-to/how-to-enable-two-factor-authentication-on-popular-sites/"&gt;typically requires you to enable 2FA&lt;/a&gt; for those sites only.
I want to &lt;a href="http://www.howtogeek.com/121650/how-to-secure-ssh-with-google-authenticators-two-factor-authentication/"&gt;implement 2FA on my Ubuntu SSH connections&lt;/a&gt;
use an offering called &lt;a href="http://www.google.com/landing/2step/"&gt;Google Authenticator&lt;/a&gt;.
This Google &lt;a href="https://github.com/google/google-authenticator"&gt;web service is open sources&lt;/a&gt; and can be used with a companion smart phone app.&lt;/p&gt;
&lt;p&gt;Google Authenticator implements &lt;a href="https://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm"&gt;Time-based One-time Password Algorithm (TOTP)&lt;/a&gt;
security tokens from &lt;a href="https://tools.ietf.org/html/rfc6238"&gt;RFC6238&lt;/a&gt; in mobile apps made by Google.
The Authenticator provides a six digit one-time password users must provide
in addition to their username and password to log into Google services or other sites.
Google Authenticator doesn’t call Google — all the work happens on your SSH server and your phone.
See "&lt;a href="https://medium.com/@n.moretto/two-factor-authentication-with-totp-ccc5f828b6df"&gt;Two-factor authentication with TOTP&lt;/a&gt;" for a gentle introduction.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; There are alternatives to Google Authenticator.
Check out &lt;a href="https://www.makeuseof.com/tag/5-best-alternatives-google-authenticator/"&gt;"The 5 Best Alternatives to Google Authenticator"&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Step 1&lt;/h3&gt;
&lt;p&gt;To access my home PC from out side my home via SSH,
I need to configure port forwarding on your router (external interface)
to my home PC's SSH server.
I can either use the standard port (22) or any alternative port (something above 1024).
(&lt;strong&gt;NOTE:&lt;/strong&gt; For the webserver you will need to set the port forwarding from port 80
on the external interface to your server and maybe port 443 if you want to include SSL/TLS connections.)
I did this via the router's configuration page.
Many modern routers have presets for configuring several applications, including SSH.
If you need to forward the port manually, though,
set it so that any incoming connections through port 22
will be routed to the local IP of your home computer.&lt;/p&gt;
&lt;p&gt;Also, on some routers,
you'll need to configure you home PC with a static IP address,
otherwise DHCP could move your assigned IP address around,
effectively disabling the forwarding.&lt;/p&gt;
&lt;h3&gt;Step 2&lt;/h3&gt;
&lt;p&gt;Download the Google Authenticator app for your Apple or Android device.
In my case, I used the &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2"&gt;Android App&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 3&lt;/h3&gt;
&lt;p&gt;Next you need to install the Google Authenticator&lt;a href="http://tldp.org/HOWTO/User-Authentication-HOWTO/x115.html"&gt;PAM module&lt;/a&gt;.
To install the package on Ubuntu, run the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libpam-google-authenticator
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now log in as the user you’ll be logging in with remotely
and run the comand &lt;code&gt;google-authenticator&lt;/code&gt; to create a secret key.&lt;/p&gt;
&lt;p&gt;Allow the command to update your Google Authenticator file by typing &lt;code&gt;y&lt;/code&gt;.
You’ll then be prompted with several questions that will allow you to
restrict uses of the same temporary security token,
increase the time window that tokens can be used for,
and limit allowed acces attempts to hinder brute-force cracking attempts.&lt;/p&gt;
&lt;p&gt;Finally, Google Authenticator will present you with a secret key
and several “emergency scratch codes.”
Write down the emergency scratch codes somewhere safe,
they can only be used one time each,
and they’re intended for use if you lose your phone.&lt;/p&gt;
&lt;h3&gt;Step 4&lt;/h3&gt;
&lt;p&gt;Enter the secret key in the Google Authenticator app on your phone,
or you can also use the scan barcode feature (i.e. scan a QR code with your phone’s camera).&lt;/p&gt;
&lt;p&gt;Now you’ll now have a constantly changing verification code on your phone.
(&lt;strong&gt;NOTE:&lt;/strong&gt; If you want to log in remotely as multiple users,
run this command for each user.
Each user will have their own secret key and their own codes.)&lt;/p&gt;
&lt;h3&gt;Step 5&lt;/h3&gt;
&lt;p&gt;Next you need to activate Google Authenticator on the home PC
and require Google Authenticator for SSH logins.
You's do this by making modification to the &lt;a href="http://tldp.org/HOWTO/User-Authentication-HOWTO/x115.html"&gt;Pluggable Authentication Modules (PAM)&lt;/a&gt;
for Linux.
To do so, open the &lt;code&gt;/etc/pam.d/sshd&lt;/code&gt; file on your system
and add the following line to the file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;auth required pam_google_authenticator.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, open the &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file,
locate the &lt;code&gt;ChallengeResponseAuthentication&lt;/code&gt; line,
and change it to read as follows:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;ChallengeResponseAuthentication yes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(&lt;strong&gt;NOTE:&lt;/strong&gt; If the &lt;code&gt;ChallengeResponseAuthentication&lt;/code&gt; line doesn’t already exist,
add the above line to the file.)&lt;/p&gt;
&lt;p&gt;Finally, restart the SSH server, so your changes will take effect, via ths command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo service ssh restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 6&lt;/h3&gt;
&lt;p&gt;At this point, when using SSH from my local network,
I would need to provide the verification code.
I don’t want to enter the verification code on my local network,
because I trust my local network.
When I SSH from remote, a verification code is required.
One way to avoid this is to always login with certificates.&lt;/p&gt;
&lt;p&gt;Luckily, there is another way to arrange this using the &lt;code&gt;pam_access.so&lt;/code&gt; module
This modification will allow skipping two-factor authentication
when the connection originates from certain sources.
This is natively already supported by PAM.
The &lt;code&gt;pam_access.so&lt;/code&gt; module can be used to check the source against local subnets:&lt;/p&gt;
&lt;p&gt;make sure you have the following in &lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# use Google Authenticator&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# The ‘nullok’ option tells PAM whenever no config for 2-factor authentication is found,&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# it should just ignore it. This will prevent you from being locked out.&lt;/span&gt;
auth &lt;span style="color: #555555"&gt;[&lt;/span&gt;&lt;span style="color: #003333"&gt;success&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &lt;span style="color: #003333"&gt;default&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;ignore&lt;span style="color: #555555"&gt;]&lt;/span&gt; pam_access.so &lt;span style="color: #003333"&gt;accessfile&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/etc/security/access-local.conf
auth required pam_google_authenticator.so nullok
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add create the file &lt;code&gt;/etc/security/access-local.conf&lt;/code&gt; with the following contents:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# skip one-time password if logging in from the local network&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# only allow from local IP range&lt;/span&gt;
+ : ALL : 192.168.1.0/24
+ : ALL : LOCAL
- : ALL : ALL
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 7&lt;/h3&gt;
&lt;p&gt;Test it out.
You’ll be prompted for both your password and
Google Authenticator code whenever you attempt to log in via SSH externally.
On the other hand, when using SSH on your local network,
you should not be required to enter the Google Authenticator code.&lt;/p&gt;
&lt;h1&gt;Sources&lt;/h1&gt;
&lt;p&gt;Key articles that I found helpful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.blogdot.tv/setting-up-two-factor-authentication-on-your-raspberry-pi/"&gt;Setting up two-factor authentication on your Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kb.mailchimp.com/integrations/other-integrations/set-up-google-authenticator"&gt;Set Up Google Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-two-factor-authentication"&gt;How To Protect SSH With Two-Factor Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linux.com/community/blogs/133-general-linux/783135-securing-ssh-with-two-factor-authentication-using-google-authenticator"&gt;Securing SSH with two factor authentication using Google Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.vps.net/vps-net-features/cloud-servers/configuring-two-factor-authentication-in-ubuntu-14-04-using-google-authenticator/"&gt;Configuring two-factor authentication in Ubuntu 14.04 using Google Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.remibergsma.com/2013/06/08/playing-with-two-facor-authentication-in-linux-using-google-authenticator/"&gt;Playing with two-factor authentication in Linux using Google Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/518802/two-factor-ssh-authentication-on-external-address-only"&gt;Two Factor SSH Authentication on external address only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.nowherelan.com/2014/01/04/two-step-authentication-for-ssh-on-centos-6-using-google-authenticator/"&gt;Two Step Authentication for SSH on Centos 6 Using Google Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Security"></category><category term="Two-Factor Authentication"></category><category term="Google Authenticator"></category></entry><entry><title>Repurposing a Vintage Laptop to Create a X Terminal</title><link href="/posts/2014/Dec/19/repurposing-a-vintage-laptop-to-create-a-x-terminal/" rel="alternate"></link><published>2014-12-19T22:24:00-05:00</published><author><name>"Jeff Irland"</name></author><id>tag:,2014-12-19:posts/2014/Dec/19/repurposing-a-vintage-laptop-to-create-a-x-terminal/</id><summary type="html">&lt;p&gt;&lt;a href="http://television.cosmicbooknews.com/content/wayback-machine-wabac-machine"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="WABAC (pronounced “wayback”) machine of Peabody's Improbable History, an ongoing feature of the 1960s cartoon series The Rocky and Bullwinkle Show" alt="WABAC Pic" src="https://upload.wikimedia.org/wikipedia/en/3/3f/Waybackmachine3.png" width="200" height="200" /&gt;
&lt;/a&gt;
On a whim, I visited a web auction site dealing in surplus government property.
I spotted two very old laptops, which claimed to be still operational,
and I placed a bid of $40.
A few days later, I received an email saying I was the proud owner of two
HP Omni Book XE3 loaded with a Celeron&lt;sup id="fnref:A"&gt;&lt;a class="footnote-ref" href="#fn:A" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 32bit processor!&lt;/p&gt;
&lt;p&gt;By todays standards, the HP Omni Book XE3 isn't exactly a race horse with its
1066 MHz clock, 128M of RAM running at 100 MHz, and 10/100 Ethernet LAN communications.
These laptops&lt;sup id="fnref:B"&gt;&lt;a class="footnote-ref" href="#fn:B" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; date back to 2000, the early days of the Internet,
and are unashamedly equipped with a built in phone jack / modem, &lt;a href="http://en.wikipedia.org/wiki/PC_Card"&gt;PCMCIA card slots&lt;/a&gt;,
a 1.44-MB floppy disk drive, and proudly hosting Microsoft Windows 98 Second Edition!&lt;/p&gt;
&lt;p&gt;The installed 10G drive was wiped clean but the laptops did come with the ordinal recovery disk.
Using the recovery disk, I quickly got the Microsoft Windows 98 operating system installed.
There was no login prompt or password required ... wow, not much security here.&lt;/p&gt;
&lt;p&gt;I activated the browser, that being Microsoft Internet Explorer 6.0.
During the activation, it asked if I wished to access the Internet via a modem
&lt;em&gt;... Ahhhh, nooo!  It's the ghost of Internet past!&lt;/em&gt;
Initially, this old browser only partly worked.
I then set it to accept all cookies and it behave much better and was usable,
but it would hang sometime and it wasn't at all pretty.&lt;/p&gt;
&lt;p&gt;With the browser and the slow Internet connection,
I figured that I could then down load the Linux distribution that I needed, and boot it from the disk.
My plan is to get a light-weight Linux distro installed and use it as X Server with my desktop
Linux system as its X Client, that is, turn the laptop into a X Terminal&lt;sup id="fnref:C"&gt;&lt;a class="footnote-ref" href="#fn:C" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;.
I was hoping to use &lt;a href="http://lubuntu.net/"&gt;Lubuntu&lt;/a&gt; as my Linux distro.
This &lt;a href="https://help.ubuntu.com/community/Lubuntu/Alternate_ISO"&gt;alternate version of Ubuntu&lt;/a&gt; is for computers with less than 700 MB of RAM,
so I'm hoping it will do the job.&lt;/p&gt;
&lt;p&gt;What I shortly discovered is that the antique hardware and OS (Microsoft Windows 98)
got in the way.
All the method I tried to install Lubuntu ran into walls.
First, the &lt;a href="http://en.wikipedia.org/wiki/ISO_image"&gt;ISO image&lt;/a&gt; was to large to burn to a CD-ROM, it required a DVD,
but this old laptop isn't DVD equipped.
Booting the ISO from a USB thumb drive wasn't possible with the old laptop BIOS.
When I attempted to load the ISO image from the hard disk using methods found at
&lt;a href="https://help.ubuntu.com/community/Lubuntu/GetLubuntu"&gt;Downloading Lubuntu 13.10&lt;/a&gt;, &lt;a href="https://help.ubuntu.com/community/Lubuntu/InstallingLubuntu"&gt;Installing Lubuntu&lt;/a&gt;, and &lt;a href="https://help.ubuntu.com/community/Installation/FromWindows"&gt;Installation/FromWindows&lt;/a&gt;,
I found that these tools and methods wouldn't work within Windows 98.&lt;/p&gt;
&lt;h1&gt;Testing Light-Weight Linux Distributions&lt;/h1&gt;
&lt;p&gt;I concluded that it would be best to burn the Linux distro onto a CD-ROM using
my current desktop computer and boot the laptop with the CD-ROM as a &lt;a href="http://en.wikipedia.org/wiki/Live_CD"&gt;live system&lt;/a&gt;.
It was still my desire is to use Lubuntu, but give the limitations of this laptop,
I'll also try out Damn Small Linux (DSL), Puppy Linux, and Tiny Core Linux
(other options can be found &lt;a href="https://opensource.com/article/19/6/linux-distros-to-try"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;Damn Small Linux (DSL)&lt;/h3&gt;
&lt;p&gt;For my first trial, I choose to install &lt;a href="http://www.damnsmalllinux.org/"&gt;Damn Small Linux (DSL)&lt;/a&gt;.
DSL (based on the Debian distro)&lt;sup id="fnref:D"&gt;&lt;a class="footnote-ref" href="#fn:D" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; was released in 2003 to specifically create a
Linux operating system for &lt;a href="http://www.osnews.com/story/24936/Damn_Small_Linux_Still_Damn_Fun"&gt;older hardware&lt;/a&gt;.
DSL supports older machines with minimal memory by disabling all unnecessary daemons or services.
DSL gives you a tool to individually load and manage daemons,
and you can load bundled applications designed with stingy resource use.
DSL was designed, tested, and runs on old computers by retains support for many old devices.&lt;/p&gt;
&lt;p&gt;The installation of DSL on the laptop happened without any difficulties.
I followed the excellent instructions give in the article
&lt;a href="http://voices.yahoo.com/how-download-install-dsl-linux-5947706.html?cat=15"&gt;How to Download and Install DSL Linux&lt;/a&gt;.
Every thing came up nicely.&lt;/p&gt;
&lt;p&gt;But there are problems.
A major short coming of this distro is that
DSL development seemed to be at a &lt;a href="http://en.wikipedia.org/wiki/Damn_Small_Linux"&gt;standstill for a long time&lt;/a&gt;.
This, and the fact that I can't find much documentation on how to support WiFi with DSL,
gives me major concerns about using it.
Never the less, the good news is that
I now know I can get some version of Linux operational on this old laptop.&lt;/p&gt;
&lt;h3&gt;Lubuntu&lt;/h3&gt;
&lt;p&gt;My next test install was &lt;a href="http://lubuntu.net/"&gt;Lubuntu&lt;/a&gt;.
The article "&lt;a href="http://www.osnews.com/story/24476/Lubuntu_Finally_a_Lightweight_Ubuntu_"&gt;Lubuntu: Finally, a Lightweight Ubuntu&lt;/a&gt;"
claims that Lubuntu has snappy responsiveness on older computers.
This seems to be dependent on having a Pentium III processor
and 128M or more of memory.
This laptop seems to just meet this criteria and so I pushed forward.&lt;/p&gt;
&lt;p&gt;I down loaded the Alternate version of Lubuntu from the site
&lt;a href="https://help.ubuntu.com/community/Lubuntu/Alternate_ISO"&gt;Lubuntu Alternate ISOs for low-RAM PCs&lt;/a&gt;, created the CD-ROM, and booted the laptop with the CD-ROM.
The install started smoothly but slowed down and took several hours ... bad sign.
Once installed, it hung during boot up.
Looks like Lubuntu is out of the running.
It appears the 128M of RAM is just too small for Lubuntu.&lt;/p&gt;
&lt;h3&gt;Puppy Linux&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://puppylinux.org/main/Overview%20and%20Getting%20Started.htm"&gt;Puppy Linux&lt;/a&gt; is a popular light-weight Linux distro.
I successfully installed Puppy Linux, but once installed,
it performed badly when I fired up applications like a browser.
A closer reading of the Puppy Linux documentation informed me that
the Linux Kernel is going to require 100M of RAM.
So any reasonable size application will cause performance problems.&lt;/p&gt;
&lt;h3&gt;Tiny Core Linux (TCL)&lt;/h3&gt;
&lt;p&gt;My final attempt was &lt;a href="http://tinycorelinux.net/"&gt;Tiny Core Linux (TCL)&lt;/a&gt;, which comes in three ISO images,
include CorePlus which is the installation image I required.
I download the CorePlus, image, burned it to a CD-ROM, booted it,
and selected "&lt;code&gt;Boot Core with X/GUI (TineCore) + Installation Extentions&lt;/code&gt;" from the boot menu.
This will enable you to perform a hard drive install of TCL.
See the &lt;a href="http://tinycorelinux.net/install.html"&gt;Tiny Core Linux installation documentation for procedures&lt;/a&gt;.
(You can also do a &lt;a href="http://tinycorelinux.net/install_manual.html"&gt;manual install&lt;/a&gt;,
with a reformating of the disk, if you boot directory is screwed up form previous installs.)&lt;/p&gt;
&lt;p&gt;TCL install without a hitch and ran very nicely.
It has a very smaller RAM footprint like DSL but is actively supported,
well documented, including a book call &lt;a href="http://www.tinycorelinux.net/corebook.pdf"&gt;Into the Core: A look at Tiny Core Linux&lt;/a&gt;.
Given all this, TCL seems like a good choose for my X Terminal plans.&lt;/p&gt;
&lt;h1&gt;Getting to Know Your X Environment&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/X_Window_System"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="The X Window System (X11, X, and sometimes informally X-Windows) is a windowing system for bitmap displays, common on UNIX-like operating systems. X provides the basic framework for a GUI environment: drawing and moving windows on the display device and interacting with a mouse and keyboard. X does not mandate the user interface, this is handled by individual programs." alt="X Logo" src="/images/x-logo.png" width="100" height="100" /&gt;
&lt;/a&gt;
As stated earlier, my objective is to use the TCL laptop as a
&lt;a href="http://en.wikipedia.org/wiki/X_terminal"&gt;X Terminal&lt;/a&gt; with my desktop Linux as the remote system.
To do this successfully, you need to understand the X Window System as it will operate
on the X Terminal and the remote system.
The beauty of X is the flexibility it gives you in creating a graphics applications
and distribute them across a network.
On the other hand, this flexibility creates its own complexity
and makes it challenging to understand how X operates.&lt;/p&gt;
&lt;p&gt;To clarify this, a typical X Window System consists of the following components:
&lt;a href="http://en.wikipedia.org/wiki/X_Window_System_protocols_and_architecture"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" title="X Window Client Server Architecture" alt="X Architecture" src="/images/x-windows-client-server-architecture.png" width="210" height="356" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;X Window System (aka X, X11, X-Windows)&lt;/strong&gt; - &lt;a href="http://en.wikipedia.org/wiki/X11"&gt;X Window System&lt;/a&gt; provides the basic &lt;a href="http://en.wikipedia.org/wiki/X_Window_System_protocols_and_architecture"&gt;framework, primitives, and protocals&lt;/a&gt; for a graphical user interface (GUI) environment.  X does not mandate the user interface — this is handled by individual programs.  As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.  There are several implementation of X, including &lt;a href="http://www.x.org/wiki/"&gt;X.Org&lt;/a&gt;, &lt;a href="http://xfree86.sourceforge.net/"&gt;XFree86&lt;/a&gt;, &lt;a href="http://x.cygwin.com/"&gt; Cygwin/X&lt;/a&gt;, and many more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X Server (aka X Display Server)&lt;/strong&gt; - This creates the graphical environment on a graphical display device using the X Display Protocol.  An X Server program runs on a computer with a graphical display and communicates with various X client programs, along with peripherals like the keyboard and mice. Examples of X servers are &lt;a href="http://www.straightrunning.com/XmingNotes/"&gt;Xming&lt;/a&gt; and &lt;a href="http://www.x.org/wiki/XServer/"&gt;XServer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X Client (aka X Application)&lt;/strong&gt; - An X client is an application program that displays on an X Server but which is otherwise independent of that server.  X Clients are built using software libraries that support the X Window System framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X Window Manager&lt;/strong&gt; - The Window Manager perfroms the tasks of managing how you interact with your application windows. Window Manager's are often designed to be highly customizable via configuration files.  The Window Manager takes care of deciding the position of windows, placing the decorative border around them, handling icons, handling mouse clicks outside windows (on the “background”), handling certain keystrokes, etc.  Examples are &lt;a href="http://en.wikipedia.org/wiki/Window_Maker"&gt;WindowMaker&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Sawfish_(window_manager)"&gt;sawfish&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/FVWM"&gt;fvwm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X Session Manager&lt;/strong&gt; - The session Manager automatically starts a set of applications, setting up, and restoring a working desktop environment.  More precisely, it is the set of applications managing these windows and the information that allow these applications to restore the condition of their managed windows if required.  The X session manager saves and restores the state of sessions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X Display Manager (aka Login Manager)&lt;/strong&gt; - This program shows the graphical login prompt in the X Window System.  This is the first X program run by the system if the system (not the user) is starting X and allows you to log on to the local system, or network systems.  More generally, a Display Manager runs one or more X Servers on the local computer and accepts incoming connections from X Servers running on remote computers.  The local servers are started by the Display Manager, which then connects to them to present the user the login screen.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Desktop Environment&lt;/strong&gt; - A desktop environment such as &lt;a href="http://lxde.org/"&gt;LXDE&lt;/a&gt;, &lt;a href="http://www.xfce.org/"&gt;XFCE&lt;/a&gt;, &lt;a href="http://www.kde.org/"&gt;KDE&lt;/a&gt;, &lt;a href="http://www.gnome.org/"&gt;GNOME&lt;/a&gt;, or Ubuntu's &lt;a href="https://unity.ubuntu.com/about/"&gt;Unity&lt;/a&gt; are a suite of applications, fonts, icons, configuration files, and design patterns used to integrate all the above X Window System components to provide a consistent user experience. Display Environments typically provide a handful of applications bundled together to accomplish tasks in a graphical manner as opposed to using the command line. They often come with a desktop shell, which is a place to hold your fancy shortcut icons, as well as other tools such as file managers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given all this, starting an X session is typically done in one of two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The X session is started via a &lt;a href="http://en.wikipedia.org/wiki/X_display_manager_(program_type)"&gt;X Display Manager&lt;/a&gt;, which provides the user login prompts on a GUI screen. In this case, the &lt;a href="http://www.x.org/wiki/"&gt;Xorg&lt;/a&gt; process is started at boot time along with the X Display Manager.&lt;/li&gt;
&lt;li&gt;If Xorg wasn't started at boot time, the user starts X manually after logging in to a text console. This is typically done with the &lt;a href="http://www.xfree86.org/current/startx.1.html"&gt;&lt;code&gt;startx&lt;/code&gt;&lt;/a&gt;command, which is a simple shell script wrapper for &lt;a href="http://www.x.org/archive/X11R6.8.1/doc/xinit.1.html"&gt;&lt;code&gt;xinit&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/X_display_manager_(program_type)"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" title="In the X Window System, the X server runs on the computer in front of the user. The X server may connect to a display manager running on another computer, starting a session which may comprise a variety of programs running on that other computer." alt="X Display Manager Pic" src="http://upload.wikimedia.org/wikipedia/commons/1/16/Xserver_and_display_manager.svg" width=25% height=25% /&gt;
&lt;/a&gt;
In either case, X runs with root privileges since it needs raw access to hardware devices.
In the X Window System,
the X Display Manager runs as a program that allows the starting of a session
on an X Server from the same or another computer.
A Display Manager presents the user with a login screen which prompts for a username and password.
A session starts when the user successfully enters a valid combination of username and password.
The X Display Manager function was established, in part, to support standalone X Terminals.&lt;/p&gt;
&lt;p&gt;A Display Manager can run on the local computer where the user sits or on a remote one.
When local, the Display Manager starts one or more X Servers,
displaying the login screen.
When the Display Manager is remote, the Display Manager works according to the
&lt;a href="http://www.x.org/releases/X11R7.7/doc/libXdmcp/xdmcp.html"&gt;X Display Manager Control Protocol (XDMCP)&lt;/a&gt;&lt;sup id="fnref:E"&gt;&lt;a class="footnote-ref" href="#fn:E" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The XDMCP protocol mandates that the X Server starts autonomously and connects to the Display Manager.
You configure an XDMCP Chooser program running on the local computer (or X Terminal)
to connect to a specific remote X Display Manager
or to display a list of suitable hosts (if configured to do so) that the user can choose from.
When the user selects a host from the list,
the XDMCP Chooser running on the local machine will send a message
to the selected remote computer's Display Manager
and instruct it to connect the X Server on the local computer or terminal.&lt;/p&gt;
&lt;p&gt;Note that unlike &lt;a href="http://blog.worldlabel.com/2009/turn-your-old-laptop-into-a-powerful-linux-workhorse.html"&gt;vncviewer&lt;/a&gt;, which just duplicates a hosts current screen on a remote system,
XDMCP allows several different users to login and run different X sessions at the same time.
Your not sharing a desktop screen image, your starting seperate X Window session on the remote machine.&lt;/p&gt;
&lt;p&gt;If your Linux box boots into a graphical login screen, like my Ubuntu desktop system,
you are already running a Display Manager.
Specifically, my desktop Linux box is using &lt;a href="http://www.freedesktop.org/wiki/Software/LightDM/"&gt;&lt;code&gt;lightdm&lt;/code&gt;&lt;/a&gt; as its X Display Manager.
You can determine this by running &lt;code&gt;cat /etc/X11/default-display-manager&lt;/code&gt;
or &lt;code&gt;ps -A | grep dm&lt;/code&gt;.
On the other hand, when I install TCL on the vintage laptop, you see no graphical login screen.
So you know that TCL isn't using a X Display Manager.&lt;/p&gt;
&lt;p&gt;For my &lt;a href="http://en.wikipedia.org/wiki/Desktop_environment"&gt;desktop Linux environment&lt;/a&gt;, I'm using Ubuntu's default environment.
That is the &lt;a href="http://lxde.org/"&gt;Unity Lightweight X11 Desktop Environment (LXDE)&lt;/a&gt;.
It consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Window Manager&lt;/strong&gt; - &lt;a href="http://openbox.org/"&gt;Openbox&lt;/a&gt;, the default window manager of LXDE&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Manager&lt;/strong&gt; - &lt;a href="http://wiki.lxde.org/en/LXDM"&gt;LXDM&lt;/a&gt; is the Display Manager for LXDE&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Session Manager&lt;/strong&gt; - &lt;a href="http://wiki.lxde.org/en/LXSession"&gt;LXSession&lt;/a&gt; is the standard session manager used by LXDE and it's desktop-independent and can be used with any Window Manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What is happening when you start up Unity on the desktop system and &lt;a href="http://www.tldp.org/HOWTO/XWindow-User-HOWTO/runningx.html"&gt;run X&lt;/a&gt;?
The following is an abbreviated &lt;a href="http://askubuntu.com/questions/150487/what-happens-under-the-covers-to-log-me-in-and-start-up-the-unity-graphics-user?r"&gt;summary of startup activites&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The kernel starts the &lt;code&gt;init&lt;/code&gt; process as process number 1, and it is responsible for starting all other processes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt; starts the LXDE Display Manager &lt;code&gt;/usr/sbin/lightdm&lt;/code&gt; fairly late in the init process (the system dbus, filesystem and the graphics display system all must be ready).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lightdm&lt;/code&gt; creates an xauthority file and then starts X, starting it on virtual terminal 7&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;unity-greeter&lt;/code&gt; get's the names of potential Window Managers, and in my case that would be &lt;code&gt;ubnutu&lt;/code&gt; and so it uses  &lt;code&gt;/usr/share/xsessions/ubuntu.desktop&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Once logged in, the files from &lt;code&gt;/usr/share/xsessions/ubunutu.desktop&lt;/code&gt; now determine the rest of the startup sequence.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;/usr/sbin/lightdm-session&lt;/code&gt; shell script is run with the arguments &lt;code&gt;gnome-session --session=ubuntu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/sbin/lightdm-session&lt;/code&gt; then runs &lt;code&gt;$HOME/.profile&lt;/code&gt;, loads &lt;code&gt;$HOME/.Xresources&lt;/code&gt;, &lt;code&gt;$HOME/.Xmodmap&lt;/code&gt;, runs scripts in &lt;code&gt;/etc/X11/xinit/xinitrc.d&lt;/code&gt;, runs the Xsession scripts in &lt;code&gt;/etc/X11/Xsession.d/*&lt;/code&gt;, using the options in &lt;code&gt;/etc/X11/Xsession&lt;/code&gt;.options.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lightdm-session&lt;/code&gt; starts a Window Manager, or for Unity, starts the &lt;code&gt;gnome-session&lt;/code&gt; Session Manager. The Window Manager uses the Unity &lt;code&gt;/usr/share/xsessions/ubuntu.desktop&lt;/code&gt; configuration file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gnome-session&lt;/code&gt; starts the specified program from &lt;code&gt;/usr/share/gnome-session/sessions/&lt;/code&gt; and starts applications from &lt;code&gt;~/.config/autostart/&lt;/code&gt; and &lt;code&gt;/etc/xdg/autostart&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So now you have some small insight into what the X Window System is doing,
but what are the important things one should take away from all this?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The remote, that is my Linux desktop system, must use a Display Manager and it needs to be configured to accept logins from network terminals. This means configuration files must be set to accept the login request and the XDMCP protocol must be operational. That is, &lt;a href="http://zweije.home.xs4all.nl/xauth-9.html"&gt;configuring X Display Manager as an XDMCP Server&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The X Server on the local system, that is the vintage PC, must be configured to use the XDMCP protocol, be directed to log into the remote system, and not establish its own local desktop environment. That is, &lt;a href="http://zweije.home.xs4all.nl/xauth-9.html"&gt;configuring X Server as an XDMCP Client&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As to the mechanics of making this happen, the following articles do a good job of explaining what needs to be done
(and I'll provide the detail steps later):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tldp.org/HOWTO/XDMCP-HOWTO/"&gt;Linux XDMCP HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxdoc.org/HOWTO/XDM-Xterm/index.html"&gt;XDM and X Terminal mini-HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.joseluisperezdiaz.com/linux-based-x-terminals-with-xdmcp/"&gt;Linux-Based X Terminals with XDMCP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What is My Window Manager&lt;/h3&gt;
&lt;p&gt;You can configure Ubuntu to run different Window Managers within any given Desktop Environment.
This makes it a bit of a challenge in knowing what window manager your using.
Detecting which Window Manager your using require you to sort of know what to look for.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# detect the window manager you are using&lt;/span&gt;
ps -ef | egrep &lt;span style="color: #CC3300"&gt;&amp;quot;xfwm|twm|metacity|beryl|compiz&amp;quot;&lt;/span&gt; | grep -v egrep
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What is the Display Manager being used?
The Display Manager runs before you log in, and as such, it's by the system is configured.
On a Ubuntu system, you can find the Display Manager being used via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# print our the Display Manager being used&lt;/span&gt;
cat /etc/X11/default-display-manager
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Compositing Window Manager Compiz&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Compositing_window_manager"&gt;Compositing Window Managers&lt;/a&gt; process the on-screen rendering of application windows
by using a special off-screen buffer to handle sweet effects and eye candy.
Basically, you can stack your application windows with added effects
like drop shadows, transparencies, and 2D / 3D animated effects.
The Window Manager composites the window buffers into an image representing
the screen and writes the result into the display memory.
The Ubuntu default Window Manger, &lt;a href="http://www.compiz.org/"&gt;Compiz&lt;/a&gt;, is just such a solution.
In fact, the Unity interface, is written as a &lt;a href="http://askubuntu.com/questions/13073/is-unity-just-a-plugin-of-compiz"&gt;plugin for Compiz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As I experimented with TCL running as a X Terminal
and my Linux desktop as my Display Manager connected via XDMCP,
but I had significant Window Manager problems.
Basically, it would not start when I logged in.
I discovered this via this script:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# detect the window manager you are using&lt;/span&gt;
ps -ef | egrep &lt;span style="color: #CC3300"&gt;&amp;quot;xfwm|twm|metacity|beryl|compiz|fluxbox&amp;quot;&lt;/span&gt; | grep -v egrep
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Given the age of this vintage laptop (around year 2000)
and the fact that Compiz's inital release was in 2006,
I concluding that Compiz would never run on this hardware.
Time to try another Window Manager.&lt;/p&gt;
&lt;h3&gt;X Window Remote Application&lt;/h3&gt;
&lt;p&gt;There are a few ways to run X windows applications remotely
(i.e. running an X Windows application on a remote computer and having the graphical part show up on your local computer).
For something quick, use the &lt;a href="https://help.ubuntu.com/community/SSH/OpenSSH/Configuring"&gt;SSH method&lt;/a&gt; in an &lt;code&gt;xterm&lt;/code&gt; window:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;ssh -X login@remote-computer
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will give a terminal session within the &lt;code&gt;xterm&lt;/code&gt; window on the remote computer.
The &lt;code&gt;-X&lt;/code&gt; switch says to export graphics from the remote computer (remote-computer)
to the computer you at actually sitting on (i.e. the local-computer).
For many uses, this works fine, but it doesn't give you the full login experience on the remote computer.
Specifically, the desktop is still the local computer,
so picking any desktop icon or menu will result in a local X client.
This isn't what I want ... I want access to the remote desktop.&lt;/p&gt;
&lt;p&gt;To do this, you could leverage the &lt;a href="http://www.ltsp.org/"&gt;Linux Terminal Server Project (LTSP)&lt;/a&gt;
&lt;a href="http://www.spencerstirling.com/computergeek/xterminal.html"&gt;Sterminal&lt;/a&gt;, or even consider &lt;a href="http://blog.worldlabel.com/2009/turn-your-old-laptop-into-a-powerful-linux-workhorse.html"&gt;Virtual Network Computing (VNC)&lt;/a&gt;,
but these have too heavy a memory footprint for the vintage laptop I'm using.
And in the case of VNC, your really sharing an existing screen, not creating a new session.
I'll need to use the less secure classical method of using XDMCP.
Basically, on the remote computer (remote-computer)
I need to be running a special daemon that answers requests to login from a X Server.
To establish this, I'll need to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;On the remote computer&lt;/strong&gt; - Configure the Display Manager to accept logins from a remote X Server&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;On the local computer&lt;/strong&gt; - Configure the local Display Manager to use the remote Display Manager. This amounts to configuring the Display Manager to run "XDMCP Chooser".  An alternative is to establish a X session and then log into the remote via &lt;a href="http://en.wikipedia.org/wiki/Xnest"&gt;&lt;code&gt;Xnest&lt;/code&gt;&lt;/a&gt;. Xnest can be used to locally display the desktop of a remote computer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Getting to Know Ubuntu Unity&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://unity.ubuntu.com/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Unity is the Desktop Environment that is shippped as the default Ubuntu installation, and claims it's focus is on simplicity and consistency across multiple devices (e.g. across TV, mobile, tablet, and desktop)" alt="Ubuntu Unity Logo" src="/images/ubuntu-unity-logo.png" width="100" height="100" /&gt;
&lt;/a&gt;
&lt;a href="https://unity.ubuntu.com/"&gt;Unity&lt;/a&gt; is the Desktop Environment that is shipped as the default Ubuntu installation,
and claims it's focus is on simplicity and consistency across multiple devices
(e.g. across TV, mobile, tablet, and desktop).
Several years ago, Ubuntu moved from &lt;a href="http://www.gnome.org/"&gt;GNOME&lt;/a&gt; to Unity, never the less,
the Unity interface should run all GNOME-based applications without modification.
I guess that is why Unity is often introduced as a desktop shell for GNOME.
This is not the same as a totally new desktop environment.
A desktop shell is the interface that you use.
Unity will still use the same GNOME apps and libraries that the any GNOME desktop does.
In this way, GNOME can be thought as an example of another shell for GNOME.
The &lt;a href="https://www.youtube.com/watch?v=SZU9XzJBgVc"&gt;debate concerning GNOME vs Unity&lt;/a&gt; inciting a lot of reactions from users.&lt;/p&gt;
&lt;p&gt;Although Unity is a single graphical experience, you can think of it in three broad buckets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Design –&lt;/strong&gt; the visual design and interaction experience&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Platform –&lt;/strong&gt; the core Unity platform software&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Services –&lt;/strong&gt; a set of functions that Unity makes available to applications for integration and for content to be viewed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href="http://www.howtoforge.com/introduction-to-the-ubuntu-unity-desktop"&gt;Unity user interface consists of several components&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Top Menu Bar –&lt;/strong&gt; is a global application menus not located in the application’s windows, they’re located on the top menu bar. You see the application’s menu when you mouse over the top  of a window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Launcher –&lt;/strong&gt; is at the left side of the screen is where you’ll launch frequently used applications and switch between running applications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dash –&lt;/strong&gt; an overlay that allows the user to search quickly for information both locally (installed applications, recent files, bookmarks, etc.) and remotely (Twitter, Google Docs, etc.) and displays previews of results. Open the Dash by clicking the Ubuntu icon at the top left corner of the screen. You can also press the Super key to open the launcher (the Super key is also known as the Windows key).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quicklist –&lt;/strong&gt; the accessible menu of launcher items&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Head-Up Display (HUD) –&lt;/strong&gt; allows hotkey searching for top menu bar items from the keyboard, without the need for using the mouse, by pressing and releasing the Alt key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Indicators –&lt;/strong&gt; a notification area containing displays for the clock, network and battery status, sound volume, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Just notes&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# make sure the last entry of the .xsessionrc file is run in the background&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# to restart Unity&lt;/span&gt;
setsid unity
&lt;span style="color: #0099FF; font-style: italic"&gt;# or should you use&lt;/span&gt;
setsid unity --replace

&lt;span style="color: #0099FF; font-style: italic"&gt;# to logout via the terminal&lt;/span&gt;
gnome-session-quit

&lt;span style="color: #0099FF; font-style: italic"&gt;# restart X without rebooting&lt;/span&gt;
/etc/init.d/gdm restart         &lt;span style="color: #0099FF; font-style: italic"&gt;# kill your graphical interface using&lt;/span&gt;
sudo service lightdm restart    &lt;span style="color: #0099FF; font-style: italic"&gt;# restart your session manager&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# see this&lt;/span&gt;
http://manpages.ubuntu.com/manpages/lucid/en/man1/gnome-wm.1.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Like many desktop envirnments, Ubuntu Unity can change its look &amp;amp; feel by changing the &lt;a href="http://itsfoss.com/best-themes-ubuntu-1310/"&gt;themes&lt;/a&gt;.
These alternative theme files are extracted to &lt;code&gt;~/.themes&lt;/code&gt; or &lt;code&gt;/user/share/themes&lt;/code&gt; directores.
Once a theme is established, it can udergo additional tuning via the
&lt;a href="http://www.techrepublic.com/blog/linux-and-open-source/six-must-have-ubuntu-unity-tweaks/"&gt;Unity Tweak Tool&lt;/a&gt;, which is a settings manager for the Unity desktop.
This configuration tool provides users access to features and configuration options,
and brings them all together in a polished &amp;amp; easy-to-use interface.
To install this tool, use&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install unity-tweak-tool
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The most transparent and precise way to configure the Unity envirnment is to modify the file
&lt;code&gt;/etc/lightdm/lightdm.conf&lt;/code&gt;.
The post "&lt;a href="http://www.mattfischer.com/blog/?p=343"&gt;Understanding lightdm.conf&lt;/a&gt;" is a good read to better understand &lt;code&gt;lightdm.conf&lt;/code&gt;
but keep in mind that some utilities it suggest are no more.
As of Ubuntu Trusy 14.04,
the command line utility &lt;code&gt;lightdm-set-defaults&lt;/code&gt; is &lt;a href="http://askubuntu.com/questions/251041/how-to-install-lightdm-set-defaults"&gt;no longer available&lt;/a&gt;.
This is because &lt;code&gt;lightdm&lt;/code&gt; now using a configuration directory &lt;code&gt;/etc/lightdm/lightdm.conf.d/&lt;/code&gt;
rather than a single configuration file.
The files in this directory can be edited by hand, new files can be added, or files can be removed.
There is no manpage for &lt;code&gt;lighdm.conf&lt;/code&gt;, but there is an example that lists all the options
and a bit about what they do, just look in &lt;code&gt;/usr/share/doc/lightdm/lightdm.conf.gz&lt;/code&gt;
(If you use vim, you can just edit the file and it will be automagically ungzipped for you).&lt;/p&gt;
&lt;p&gt;While there are many things you can set within &lt;code&gt;lightdm.conf&lt;/code&gt;,
running a command When X starts, when the greeter starts, or when the user session starts
may be the more useful for our purposes.
For example, when &lt;code&gt;lightdm&lt;/code&gt; starts X you can run a command or script, like &lt;code&gt;xset&lt;/code&gt; perhaps.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;display-setup-script=[script|command]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can do something similar when the greeter starts:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;greeter-setup-script=[script|command]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or when the user session starts:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;session-setup-script=[script|command]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A potentially even more granular way to configure the Unity envirnment is via
minimpulating the &lt;a href="https://developer.gnome.org/gio/2.39/GSettings.html"&gt;&lt;code&gt;GSettings&lt;/code&gt;&lt;/a&gt; classes, which is a API for application settings.
To support this, there is &lt;a href="https://developer.gnome.org/gio/2.39/gsettings-tool.html"&gt;&lt;code&gt;gsettings&lt;/code&gt;&lt;/a&gt; which offers a simple command line interface to &lt;code&gt;GSettings&lt;/code&gt;.
&lt;code&gt;GSettings&lt;/code&gt; is a GLib implementation of the &lt;a href="http://en.wikipedia.org/wiki/Dconf"&gt;DConf spec&lt;/a&gt;, which stores its data in a binary database.
The &lt;code&gt;gsettings&lt;/code&gt; command line tool is simply a tool to access or modify settings via the &lt;code&gt;GSettings&lt;/code&gt; API.&lt;/p&gt;
&lt;p&gt;Applications using &lt;code&gt;GSettings&lt;/code&gt;/DConf install allication configuration data or schemas.
A schema is basically is a list of the available settings for that application.
There are two types of schemas, standard and relocatable schemas.
Important to understand that for relocatable schemas we need to provide a
path on top of the normal schema name like &lt;code&gt;org.gnome.login-screen&lt;/code&gt;.
An application does not need to know where or how the data is stored,
just how to access that data and recieve a notification if and when the data changes.&lt;/p&gt;
&lt;p&gt;To list all the available schemas&lt;sup id="fnref:F"&gt;&lt;a class="footnote-ref" href="#fn:F" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt;, enter&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gsettings list-schemas
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that we have a list of the schemas we can look at what keys they provide.
Keys are the actual settings we manipulate.
We can list them with &lt;code&gt;gsettings list-keys &amp;lt;schema name&amp;gt;&lt;/code&gt;.
For example,&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gsettings list-keys org.gnome.login-screen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also list both the keys and their current values by running &lt;code&gt;gsettings list-recursively &amp;lt;schema&amp;gt;&lt;/code&gt;.
For example,&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gsettings list-recursively org.gnome.login-screen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As mentioned before relocatable schemas need an aditional path before we can list and manipulate the keys.
Other than the path we treat the the two types of schemas the same way from the command line.
The location of the relocatable schemas are within the path and not in the default location.
For example we added a colon followed by the path:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gsettings list-recursively org.gnome.login-screen:/org/mate/panel/objects/object_0/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You'll find other uses for &lt;code&gt;gsettings&lt;/code&gt; on &lt;a href="http://manpages.ubuntu.com/manpages/trusty/en/man1/gsettings.1.html"&gt;its manual page&lt;/a&gt;.
For example,
Unity desktop comes with overlay scrollbars enabled by default.
You can disable overlay scroll-bars, if you don't like them.
Enter the following command in a terminal to disable overlay scrollbar:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gsettings set com.canonical.desktop.interface scrollbar-mode normal
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to get back overlay bars, enter following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gsettings reset com.canonical.desktop.interface scrollbar-mode
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With all these oppertunities to reconfigure Unity, the possibilities of screwing thing up are very high.
In case some settings are messed up and you want to &lt;a href="http://www.webupd8.org/2012/10/how-to-reset-compiz-and-unity-in-ubuntu.html"&gt;reset Unity and Compiz&lt;/a&gt; to their default settings,
the standard way is to use&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Careful ... this will reset all Unity &amp;amp; Compiz to their default options&lt;/span&gt;
unity-reset
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To restart Unity after running the above command (or restart it any time), use the command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;setsid unity
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find more examples of configuring Unity via &lt;code&gt;gsettings&lt;/code&gt; and other tools in the postings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.noobslab.com/2013/10/tweaksthings-to-do-after-install-of.html"&gt;Tweaks/Things to do after install of Ubuntu 13.10 Saucy Salamander&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.noobslab.com/2014/04/thingstweaks-to-do-after-install-of.html"&gt;Things/Tweaks To Do After Install Of Ubuntu 14.04 Trusty Tahr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Getting to Know the TCL Operating System&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://tinycorelinux.net/"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Tiny Core Linux is a 12 MB graphical Linux desktop. It is based on a recent Linux kernel, BusyBox, Tiny X, Fltk, and Flwm." alt="Tiny Core Linux Logo" src="/images/tiny-core-linux.jpg" width="118" height="45" /&gt;
&lt;/a&gt;
As stated earlier, it appears that Tiny Core Linux (TCL) will be my best choose
for this vintage laptop conversion into a X Terminal.
Like Damn Small Linux, &lt;a href="http://tinycorelinux.net/"&gt;Tiny Core Linux (TCL)&lt;/a&gt; is a minimal Linux operating system
initially using &lt;a href="http://www.busybox.net/"&gt;BusyBox&lt;/a&gt; as its core system,
but latter replace with &lt;a href="http://en.wikipedia.org/wiki/GNU_Core_Utilities"&gt;GNU's Coreutils&lt;/a&gt;.
Tiny Core is exactly what the name suggests,
a tiny core of an operating system which boots to a fully functional graphics desktop
called &lt;a href="http://www.fltk.org/index.php"&gt;Fast Light Toolkit (FLTK)&lt;/a&gt;, pronounced "fulltick",
which includes the &lt;a href="http://flwm.sourceforge.net/"&gt;Fast Light Window Manager (flwm)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tiny core can be run on new, high performance computers.
It can also be run on older, slower computers.
Minimum performance requirements depend on which programs you install in Tiny Core.
Most programs will run on a computer with 256 mb of ram.
Tiny core can be run on a computer with 128 mb of ram, with selected programs.
It may not be worthwhile for most people to run Tiny Core on a computer with less than 128 mb of ram,
as even less programs will run.
The absolute minimum to run Tiny Core is 48 mb of ram.&lt;/p&gt;
&lt;p&gt;Tiny Core is designed to run entirely from a RAM copy created at boot time.
While you can do a traditional hard drvie install,
Tiny Core is designed to
run from a RAM copy created at boot time. Besides being fast, this
protects system files from changes and ensures a pristine system on
every reboot.
Easy, fast, and simple renew-ability and stability is a principle goal of Tiny Core.
The core system provides most of what you need for a working environment,
which they can then tweak from there via loadable applications.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tinycorelinux.net/install_manual.html"&gt;Frugal&lt;/a&gt; is the typical installation method for Tiny Core.
That is, it is not a traditional hard drive installation,
which we call "scatter mode",
because all the files of the system are scattered all about the disk.
With frugal, you basically have the system in two files,
vmlinuz and core.gz, whose location is specified by the boot loader.
Therefore, the TCL Live CD ISO image consists of four components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bootloader (&lt;code&gt;/boot/extlinux&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Linux Kernel (&lt;code&gt;/boot/vmlinuz&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Core initrd (&lt;code&gt;/boot/core.gz&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Extensions (&lt;code&gt;/tce/onboot.lst&lt;/code&gt;, &lt;code&gt;/tce/optional&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The default bootloader used by TCL is &lt;a href="http://www.syslinux.org/wiki/index.php/EXTLINUX"&gt;&lt;code&gt;extlinux&lt;/code&gt;&lt;/a&gt; but others can be installed (such as grub).
You find extlinux's configuration file in &lt;code&gt;/mnt/sda1/tce/boot/extlinux/extlinux.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Tiny Core consists of a small kernel and initial RAM disk,
which ultimately boots into a basic FLTK graphical environment.
The computer’s hardware is configured on boot and should mostly work out of the box.
TCL is RAM based - the "core" utilities are packed into the &lt;code&gt;core.gz&lt;/code&gt; file
which is then unpacked into RAM when the system boots and forms our primary filing system.
After that TCL searches any attached storage for the directory &lt;code&gt;tce&lt;/code&gt;.
This directory holds optional extensions to the operating system such as the graphical desktop
and anything else we care to add.
The extension files are actually compressed filing systems,
read-only &lt;code&gt;tgz&lt;/code&gt; files,
and Tiny Core mounts these individually under &lt;code&gt;/tmp/tcloop/&amp;lt;application_name&amp;gt;&lt;/code&gt;
and then merges them with the main filing system.&lt;/p&gt;
&lt;p&gt;Given that applications are load freash on each boot,
how do we handle application's configuration file that need to be preserved?
This is where Tiny Core's user editable &lt;code&gt;/opt/.filetool.lst&lt;/code&gt; file comes into play.
This contains a list of all (potentially changed) RAM-based files
or directories that we want to persist across reboots (which logically has to include itself).
Tiny Core handles this with the &lt;code&gt;filetool.sh&lt;/code&gt; script.
When run with the &lt;code&gt;-b&lt;/code&gt; option this packages up all these files into a single compressed file (&lt;code&gt;mydata.tgz&lt;/code&gt;)
that it saves in the &lt;code&gt;tce&lt;/code&gt; directory.
When the script is run with the &lt;code&gt;-r&lt;/code&gt; option it does the reverse and restores the saved files.
The restore happens automatically as the system boots.
By default the &lt;code&gt;/opt/filetool.lst&lt;/code&gt; file includes the &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;/opt&lt;/code&gt; directories.
Remove this entries if you wish (e.g. when backup take a long time).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You can do backups from GUI or on command line via &lt;code&gt;filetool.sh -b&lt;/code&gt;.  This will backup files to the &lt;code&gt;/etc/sysconfig/tcedir/mydata.tcz&lt;/code&gt;. This way, a poweroff or reboot will not undo your work.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Many options, such as a choice of either an ALSA or OSS sound server, are left up to the user.
Once inside the environment, the user is then able to connect to the online repositories
in order to install the applications they desire and configure their system.
TCL has a very simple package manager that provides a list of available packages to install.
The user need only select a package and the manager will download it with all
required dependencies and install them to the system.&lt;/p&gt;
&lt;p&gt;TLC's package manager, the &lt;code&gt;Apps&lt;/code&gt; tool, has several methods of installing applications
Tiny Core uses the &lt;code&gt;Apps&lt;/code&gt; tool to place application extensions in the
tce/ directory and to flag them as either "OnBoot" (mount at boot)
or "On Demand" (do not mount at boot, but create a special menu
section for easy access and display an icon if available).
(For my purposes of creating a X Terminal, I see no for any of these options other than OnBoot).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OnBoot -&lt;/strong&gt; This is the default method. This extension will be installed, and added to the onboot list, to be mounted on the following boots.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OnDemand -&lt;/strong&gt; A loading script will be generated for this extension.  Instead of being loaded on boot, the icon/menu entry for this extension will load the extension when you first need it.  This option speeds up your boot time, at the cost of making the first start of the application slower.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Download + Load -&lt;/strong&gt; The extension will be downloaded and installed for this session only.  It will reside within the directory sytem, but since it is not added to the onboot list, it will not be loaded after a reboot.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Download Only -&lt;/strong&gt; The extension will only be downloaded, nothing more will be done.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the default configuration of TCL, anything written to &lt;code&gt;/opt&lt;/code&gt; and &lt;code&gt;/home&lt;/code&gt;
directory trees will be written to the hard disk and so are persistent.
Any files created elsewhere are volatile and need to be added to the file &lt;code&gt;/opt/.filetool.lst&lt;/code&gt;
if we want them to persist across reboots.&lt;/p&gt;
&lt;p&gt;Tiny Core doesn’t actually install anything onto the system in a traditional way.
Instead it stores the binary packages in memory which are then laid over the top of the existing system.
These packages are actually called extensions and when the system boots each and every time it will load these extensions from a location you specify.&lt;/p&gt;
&lt;p&gt;Tiny Core provides two different types of extensions: TCE and TCZ.
The former is a compressed tarball which is extracted into RAM over the booted system environment.
The disadvantage of this method is that it uses up more RAM the more programs you have installed.
The latter is more efficient as it actually &lt;a href="http://en.wikipedia.org/wiki/Loop_device"&gt;loop mounts&lt;/a&gt; the packages onto the system,
rather than extracting them into RAM.
This means that they are only loaded into memory when you actually use them,
similar to that of a more traditional install where they sit on a hard drive.
If you’re going to have many applications installed, this is the better option.&lt;/p&gt;
&lt;p&gt;TCL has the ability to save your data and restore it on boot.
You can also change system files and on boot these will also be restored,
just after the extensions are loaded.
So if you do want to customise a package, you can do so and have it stay that way each time you boot.
The system also takes mount point arguments at boot time,
so users can specify a partition to use as their &lt;code&gt;/home&lt;/code&gt; directory, for instance.&lt;/p&gt;
&lt;p&gt;To investigate futher on the interworkings of TCL,
the article "&lt;a href="http://www.linux-mag.com/id/7457/"&gt;Tiny Core: The Little Distro That Could&lt;/a&gt;"
gives a good, quick introduction to Tiny Core,
and this &lt;a href="https://www.youtube.com/watch?v=lFxXeDKgymM"&gt;video&lt;/a&gt; provides an excellent introduction to
&lt;a href="https://www.youtube.com/watch?v=lFxXeDKgymM"&gt;Tiny Core Linux File Architecture and Boot Process&lt;/a&gt;.
The &lt;a href="http://www.parkytowers.me.uk/thin/Linux/Tinycore.shtml"&gt;Thin Client&lt;/a&gt; website has a section on Tiny Core Linux.
And of course, if your really ambitious, you can read the book "&lt;a href="http://www.tinycorelinux.net/corebook.pdf"&gt;Into the Core: A look at Tiny Core Linux&lt;/a&gt;".&lt;/p&gt;
&lt;h1&gt;Getting to Know Your Network Security Options&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://www.wi-fi.org/discover-wi-fi/security"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="It is common networking knowledge that there really is no excuse to not use any encryption method other than WPA2. In all but the oldest wireless devices, just about all modern wireless clients support it." alt="Wireless Security Logo" src="/images/wifi-security.png" width="100" height="100" /&gt;
&lt;/a&gt;
As stated earlier, the XDMCP protocol used to support the X Terminal isn't encrypted&lt;sup id="fnref:G"&gt;&lt;a class="footnote-ref" href="#fn:G" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt;.
So using the X Terminal outside of ones secure LAN or WAN, say across the internet, is risky business.
Any passwords or credit cards will be passed as plan text.
But in my case, I'll be using this only on my home network.
So the key here is making sure you have good firewall protection on your router and
strong encryption on you wireless network.
I'm using a router supplied by my internet provider,
and by default, &lt;a href="http://www.howtogeek.com/howto/38858/how-to-make-your-verizon-fios-router-1000-more-secure/"&gt;its configured for old encryption standards&lt;/a&gt; and not the more secure WPA2.&lt;/p&gt;
&lt;p&gt;I have to admit that, up until this project,
I haven't been thinking much about the latest WAN encryption recommendations.
My concern was, amid the alphabet soup of what security standards,
how do you merge support for a mix of client devices that support the range of WiFi security protocols?
The solution was to get myself the strongest available security by using a
wireless access point (AP) equipment that supports all the &lt;a href="http://www.howtogeek.com/167783/htg-explains-the-difference-between-wep-wpa-and-wpa2-wireless-encryption-and-why-it-matters/"&gt;802.11i-standards&lt;/a&gt;:
Wired Equivalent Privacy (WEP), Wireless Protected Access (WPA), and Wireless Protected Access-2 (WPA2).
Like many people, I have some devices that don’t yet support WPA2 or WPA and,
at best, might support WEP.
WPA2, the strongest security, is not backward-compatible with WPA or WEP,
but you can support all three security mechanisms on a single physical Wi-Fi network.
However, client devices must find a protocol match on the APs to which they associate.
In other words, WEP has to talk to WEP; it can’t talk to WPA or WPA2.&lt;/p&gt;
&lt;p&gt;In the end, I bit the bullet and converted my home WiFi to WPA2.
I followed the proceedures outlined here:
&lt;a href="http://www.splashofstyle.com/archives/2010/12/03/how-to-change-verizon-fios-router-from-wep-to-wpa2-plus-other-security-adjustments/"&gt;How to Change Verizon Fios Router from WEP to WPA2, Plus Other Security Adjustments&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Establishing the X Terminal Solution&lt;/h1&gt;
&lt;p&gt;&lt;div style="float: left"&gt;
    &lt;a href="http://farm8.staticflickr.com/7524/15871118402_2996fc7d79_b.jpg"&gt;
        &lt;img class="img-rounded" style="margin: 0px 8px" title="HP Omni Book XE3 being used as a X Terminal using Tiny Core Linux" alt="Laptop X Terminal" src="http://farm8.staticflickr.com/7524/15871118402_2996fc7d79_b.jpg" width="70" height="70"&gt;
    &lt;/a&gt;
&lt;/div&gt;
To create the X Terminal solution, and therefore install the Tiny Core Linux (TCL),
its good to have a firm undersatanding of TCL and how its differes from an typical Linux install.
Reading the &lt;a href="http://www.tinycorelinux.net/corebook.pdf"&gt;TCL book&lt;/a&gt; is a good idea and so is watching
&lt;a href="https://www.youtube.com/channel/UCZuZ4D4WGmyCLlWkgXvqqEg"&gt;JoeNobody010101&lt;/a&gt; (your going to love this guy)
who provides a series of videos titled "How to install and configure TinyCore Linux".&lt;/p&gt;
&lt;h3&gt;Installing Tiny Core Linux on Local Computer&lt;/h3&gt;
&lt;p&gt;Before starting the step-by-step installation procedures,
here are some important things to know.&lt;/p&gt;
&lt;h4&gt;Mount Mode Install&lt;/h4&gt;
&lt;p&gt;This TCL install will be in Mount Mode.
This means applications are stored locally in a directory named tce on a persistent store,
e.g. a supported disk partition (ext2, ext3, ext4, vfat).
Applications are mounted on reboot when present in &lt;code&gt;/mnt/sda1/tce/onboot.lst&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Persistent File Storage&lt;/h4&gt;
&lt;p&gt;Tiny Core also supports persistent/permanent file storage.
You will back-up at power down and restored at reboot the directories
or files listed in the file &lt;code&gt;/opt/.filetool.lst&lt;/code&gt;.
By default, this file contains the &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;/opt&lt;/code&gt; directories.
The list may be changed manually (using vi or other text editor) to include other files or directories.
Also, you can do the exclusion of particular files by listing them in &lt;code&gt;/opt/.xfiletool.lst&lt;/code&gt;.
You can also backup and restore of these files anytime by using the utility &lt;code&gt;filetools.sh&lt;/code&gt;.
Specifically, files are backed up by &lt;code&gt;filetool.sh -b&lt;/code&gt; to persistent disk.&lt;/p&gt;
&lt;h4&gt;Boot Time Processes&lt;/h4&gt;
&lt;p&gt;To start processes at boot time,
&lt;code&gt;/opt/bootsync.sh&lt;/code&gt; is the file where you should list the shell script.
The boot process will waits for them to complete.
If you need network access later, this might be a good place to wait for the network to come up.
&lt;code&gt;/opt/bootlocal.sh&lt;/code&gt; is the is the file for all items that don’t need to be waited for.
This may include loading some non-essential module
(ISA sound cards, for example), or starting some server.&lt;/p&gt;
&lt;p&gt;Once &lt;code&gt;/opt/bootsync.sh&lt;/code&gt; is complete (and while &lt;code&gt;/opt/bootlocal.sh&lt;/code&gt;  runs in the background)
&lt;code&gt;init&lt;/code&gt; regains control.
As the boot is now complete from &lt;code&gt;init&lt;/code&gt; point of view,
it launches a terminal configured to do an automatic login to root and runs a script.
Root’s login script is setup to do one of two things:
it passes the control up to our regular user, named &lt;code&gt;tc&lt;/code&gt; by default.
The &lt;code&gt;tc&lt;/code&gt; login script does nothing out of the ordinary.
If an X server is available, and a text-only boot was not requested, X is started.&lt;/p&gt;
&lt;h4&gt;TCL Install Steps&lt;/h4&gt;
&lt;p&gt;To do the install, you need to follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Boot TCL Image from CD-ROM&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to the &lt;a href="http://tinycorelinux.net/"&gt;Tiny Core Linux (TCL) website&lt;/a&gt; and find the IOS image that includes CorePlus.  I download the CorePlus, image, burned it to a CD-ROM booting it on the Laptop.
&lt;br/&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configure the TCL Image for Installation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put the CD-ROM in the Laptop's drive, connect it via Ethernet to the Internet, and turn on the power.&lt;/li&gt;
&lt;li&gt;When it boots up, selected “Boot Core with X/GUI (TineCore) + Installation Extensions” from the boot menu. This will automatically install the &lt;code&gt;TC_Install&lt;/code&gt; program for installing apps.&lt;/li&gt;
&lt;li&gt;Select "Apps" icon on the bottom and install the following application packages to "OnBoot"&lt;ul&gt;
&lt;li&gt;cfdisk.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now open a terminal and enter "cfdisk".  This will be used to format and partition the hard drive. I created a &lt;code&gt;sda1&lt;/code&gt; bootable drive with 9500Mb and a &lt;code&gt;sda2&lt;/code&gt; swap drive with 555.94Mb. Write to the disk and quit.&lt;/li&gt;
&lt;li&gt;Now run &lt;code&gt;TC_Install&lt;/code&gt;. Select Frugal, Whole Disk, Install boot loader, and high-light &lt;code&gt;sda&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Still in &lt;code&gt;TC_Install&lt;/code&gt;, click the next arrow at the bottom and then select &lt;code&gt;ext4&lt;/code&gt; file format.&lt;/li&gt;
&lt;li&gt;Still in &lt;code&gt;TC_Install&lt;/code&gt;, click the next arrow at the bottom and the boot options list will appear.  You'll select from this list by writing what you want on entry line.  Enter the following: &lt;code&gt;tce=sda1 swapfile=sda2 restore=sda1 home=sda1 opt=sda1 local=sda1 vga=792 host=XT xvera=1024x768x32&lt;/code&gt;. (NOTE: These parameters are placed within the file &lt;code&gt;/mnt/sda1/tce/boot/extlinux/extlinux.conf&lt;/code&gt; if you wish to exit them later.)&lt;/li&gt;
&lt;li&gt;Still in &lt;code&gt;TC_Install&lt;/code&gt;, click the next arrow at the bottom and select&lt;ul&gt;
&lt;li&gt;Core and X/GUI Desktop&lt;/li&gt;
&lt;li&gt;WiFi Support&lt;/li&gt;
&lt;li&gt;Wireless Firmware&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Still in &lt;code&gt;TC_Install&lt;/code&gt;, click the next arrow at the bottom and select Proceed.  The disk will now be formated, partitioned, and software loaded as specified.
&lt;br/&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Boot TCL Image from Hard Disk&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now its time to reboot the system, making sure to remove the CD.  To do this, go to a terminal window and execute these commands&lt;ul&gt;
&lt;li&gt;&lt;code&gt;umount /mnt/hdc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eject /dev/hdc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reboot&lt;/code&gt;
&lt;br/&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Activate Filewall, File Manager, and Sound&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Once you booted up from the disk, click on Apps and install&lt;ul&gt;
&lt;li&gt;fluff.tcz&lt;/li&gt;
&lt;li&gt;iptables.tcz&lt;/li&gt;
&lt;li&gt;alsa.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Activate the firewall (now and on all subsequent reboots) and sound by running the following commands in a terminal&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo /usr/local/sbin/basic-firewall&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using fluff file manager, open &lt;code&gt;/opt/bootlocal.sh&lt;/code&gt; and place in it&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/local/sbin/basic-firewall noprompt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using fluff file manager, open &lt;code&gt;/opt/bootlocal.sh&lt;/code&gt; and place in it&lt;ul&gt;
&lt;li&gt;&lt;code&gt;opt/alas&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;etc/modprobe.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;usr/local/etc/asound.state&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To permanently save changes to the hard drive, execute &lt;code&gt;filetool.sh -b&lt;/code&gt; in a terminal window.
&lt;br/&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install and Activate SSH&lt;/strong&gt;
&lt;br/&gt;
I used "&lt;a href="http://firewallengineer.wordpress.com/2012/04/01/how-to-install-and-configure-openssh-ssh-server-in-tiny-core-linux/"&gt;How to install and configure OpenSSH (SSH Server) in Tiny Core Linux&lt;/a&gt;" as my guide for this work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on Apps and install&lt;ul&gt;
&lt;li&gt;openssh.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Go to the ssh configuration files with &lt;code&gt;cd /usr/local/etc/ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo cp sshd_config.example sshd_config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;vi&lt;/code&gt;, place the line &lt;code&gt;usr/local/etc/ssh&lt;/code&gt; in the &lt;code&gt;/opt/.xfiletool.lst&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Start the OpenSSH service via &lt;code&gt;sudo /usr/local/etc/init.d/openssh start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;vi&lt;/code&gt;, place the line &lt;code&gt;/usr/local/etc/init.d/openssh start&lt;/code&gt; in the &lt;code&gt;/opt/bootlocal.sh&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Establish a password on the &lt;code&gt;tc&lt;/code&gt; account by using the command &lt;code&gt;passwd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make the password permininate by putting the following lines in the &lt;code&gt;/opt/.xfiletool.lst&lt;/code&gt; file.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;etc/passwd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;etc/shadow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;etc/group&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test the installation by using ssh to login TCL from another system using &lt;code&gt;ssh tc@XT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To permanently save changes to the hard drive, execute &lt;code&gt;filetool.sh -b&lt;/code&gt; in a terminal window.
&lt;br/&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Activate WiFi&lt;/strong&gt;
&lt;br/&gt;
Getting clear and up to date information on TCL WiFi isn't easy,
but &lt;a href="ttp://wiki.tinycorelinux.net/wiki:setting_up_wifi"&gt;Easy Way: wicd&lt;/a&gt; and &lt;a href="http://distro.ibiblio.org/tinycorelinux/5.x/armv7/GK802/README-wifi.txt"&gt;How to get wireless working&lt;/a&gt; proved to be the best sources.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the following extensions via TCL &lt;code&gt;Apps&lt;/code&gt; application (OnBoot):&lt;ul&gt;
&lt;li&gt;usb-utils.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To download the latest USB device information by executing &lt;code&gt;sudo update-usbids.sh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now lets detect the type of WiFi USB adapter that is plugged into the Laptop.  In my case, this WiFi adapter is detected via &lt;code&gt;lsusb&lt;/code&gt; as&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;USB ID&lt;/strong&gt; = &lt;code&gt;0bda:8176&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt; = &lt;code&gt;Realtek Semiconductor RTL8188CUS 802.11n WLAN Adapter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The USB ID is listed as one of the &lt;a href="http://wiki.tinycorelinux.net/wiki:list_of_supported_wifi_devices"&gt;Tiny Core Linux supported WiFi chips&lt;/a&gt;.  Knowing this, we can install the suite of applications and firmware required to get the WiFi adapter operational.  I install the following extensions via TCL &lt;code&gt;Apps&lt;/code&gt; application (OnBoot):&lt;ul&gt;
&lt;li&gt;NOT SURE YOU NEED THIS: wifi.tcz&lt;/li&gt;
&lt;li&gt;firmware-rtlwifi.tcz&lt;/li&gt;
&lt;li&gt;wpa_supplicant.tcz&lt;/li&gt;
&lt;li&gt;wireless_tools.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now pull the Ethernet connection and reboot (TCL seems to get confused when you try to operate with both Ethernet and WiFi connections).&lt;/li&gt;
&lt;li&gt;At this point you may verify the WiFi device with &lt;a href="http://www.linuxcommand.org/man_pages/iwconfig8.html"&gt;&lt;code&gt;iwconfig&lt;/code&gt;&lt;/a&gt;.  You should see that &lt;code&gt;wlan0&lt;/code&gt; is operational.&lt;/li&gt;
&lt;li&gt;Execute the program &lt;code&gt;sudo wpa_passphrase &amp;lt;YourSSID&amp;gt; &amp;lt;YourPassword&amp;gt; &amp;gt; /opt/wpa_supplicant.conf&lt;/code&gt;.  This will place the network credentials in a file.&lt;/li&gt;
&lt;li&gt;On the command line, execute the WPA2 utility&lt;sup id="fnref:I"&gt;&lt;a class="footnote-ref" href="#fn:I" rel="footnote"&gt;8&lt;/a&gt;&lt;/sup&gt; &lt;code&gt;sudo wpa_supplicant -Dwext -iwlan0 -c/opt/wpa_supplicant.conf -B&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;On the command line, execute DHCP client program&lt;sup id="fnref:J"&gt;&lt;a class="footnote-ref" href="#fn:J" rel="footnote"&gt;9&lt;/a&gt;&lt;/sup&gt; &lt;code&gt;sudo udhcpc -iwlan0 -p/var/run/udcpc.wlan0.pid&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now see if you can &lt;a href="http://linux.about.com/od/commands/l/blcmdl8_ping.htm"&gt;&lt;code&gt;ping&lt;/code&gt;&lt;/a&gt; from and to the laptop.&lt;/li&gt;
&lt;li&gt;To permanently save changes to the hard drive, execute &lt;code&gt;filetool.sh -b&lt;/code&gt; in a terminal window.&lt;/li&gt;
&lt;li&gt;As a final test, reboot and try out the WiFi.&lt;ul&gt;
&lt;li&gt;After a reboot, I found that WiFi wouldn't work (i.e. &lt;code&gt;iwconfig&lt;/code&gt; didn't detect the WiFi adapter). I had to pull the WiFi adapter and reinstall it into the USB.  I then executed &lt;code&gt;sudo wpa_supplicant -Dwext -iwlan0 -c/opt/wpa_supplicant.conf -B&lt;/code&gt; and &lt;code&gt;sudo udhcpc -iwlan0 -p/var/run/udcpc.wlan0.pid&lt;/code&gt;.
&lt;br/&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Tiny Core Linux Files&lt;/h3&gt;
&lt;p&gt;Once successfully installed, the Tiny Core Linux (TCL) files should be look like this:&lt;/p&gt;
&lt;p&gt;The backup is controlled by two files &lt;code&gt;/opt/.filetool.lst&lt;/code&gt; lists
everything to include,
and &lt;code&gt;/opt/.xfiletool.lst&lt;/code&gt; lists everything to exclude.
Exclusions will override inclusions.
My &lt;code&gt;/opt/.filetool.lst&lt;/code&gt; file looks like this&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;opt
home
usr/local/etc/ssh
etc/passwd
etc/shadow
etc/group
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;My &lt;code&gt;/opt/.xfiletool.lst&lt;/code&gt; file looks like this&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Cache
cache
.cache
XUL.mfasl
XPC.mfasl
mnt
.adobe/Flash_Player/AssetCache
.macromedia/Flash_Player
.opera/opcache
.opera/cache4
.Xauthority
.wmx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;bootsync.sh&lt;/code&gt; is the entry point for all items you need to run on boot,
while the boot waits for them to complete.
My &lt;code&gt;/opt/bootsync.sh&lt;/code&gt; file looks like this&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/bin/sh&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# put other system startup commands here, the boot process will wait until they complete.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Use bootlocal.sh for system startup commands that can run in the background&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and therefore not slow down the boot process.&lt;/span&gt;
/usr/bin/sethostname box
/opt/bootlocal.sh &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;bootlocal.sh&lt;/code&gt; is the entry point for all items that don’t need to be waited for.
This may include loading some non-essential module or starting some server.
My &lt;code&gt;/opt/bootlocal.sh&lt;/code&gt; file looks like this&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/bin/sh&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# put other system startup commands here&lt;/span&gt;
/usr/local/sbin/basic-firewall noprompt
/usr/local/etc/init.d/openssh start
/usr/local/sbin/basic-firewall noprompt
opt/alas
etc/modprobe.conf
usr/local/etc/asound.state
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The program &lt;code&gt;sudo wpa_passphrase &amp;lt;YourSSID&amp;gt; &amp;lt;YourPassword&amp;gt;&lt;/code&gt; was used to
created the network WPA2 WiFi credentials and placed in the file
&lt;code&gt;/opt/wpa_supplicant.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #003333"&gt;network&lt;/span&gt;&lt;span style="color: #555555"&gt;={&lt;/span&gt;
    &lt;span style="color: #003333"&gt;ssid&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;74LL5&amp;quot;&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;#psk=&amp;quot;dfjgrigreiodjdeghry&amp;quot;&lt;/span&gt;
    &lt;span style="color: #003333"&gt;psk&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;8477c7110cf5edex3e07aa82345fxefc4f2da4sd9x8fcc4ad3x83fef6d2416df
&lt;span style="color: #555555"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;.xsession&lt;/code&gt; file sets up the default background,
starts any X-dependant programs you’ve configured,
and starts up the configured window manager.
My &lt;code&gt;/home/tc/.xsession&lt;/code&gt; file looks like this&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# This script will start a local X Window envirnment or use a remote Display Manager&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Set to 1 if your wish to use remote Display Manager&lt;/span&gt;
&lt;span style="color: #003333"&gt;REMOTE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;1

&lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; &lt;span style="color: #555555"&gt;[&lt;/span&gt; &lt;span style="color: #003333"&gt;$REMOTE&lt;/span&gt; &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt;;
&lt;span style="color: #006699; font-weight: bold"&gt;then&lt;/span&gt;
    Xvesa -query desktop -br -screen 1024x768x32 -shadow -3button -mouse /dev/input/mice,5 -I &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &amp;amp;
    &lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;XPID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$!&lt;/span&gt;
    waitforX &lt;span style="color: #555555"&gt;||&lt;/span&gt; ! &lt;span style="color: #336666"&gt;echo&lt;/span&gt; failed in waitforX &lt;span style="color: #555555"&gt;||&lt;/span&gt; &lt;span style="color: #336666"&gt;exit&lt;/span&gt;
    &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$DESKTOP&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; 2&amp;gt;/tmp/wm_errors &amp;amp;
    &lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;WM_PID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$!&lt;/span&gt;
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; -x &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.setbackground &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.setbackground
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; -x &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.mouse_config &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.mouse_config &amp;amp;
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;which &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ICONS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;.sh&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;ICONS&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;.sh &amp;amp;
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; -d &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/.X.d&amp;quot;&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/.X.d&amp;quot;&lt;/span&gt; -type f -print | &lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;read&lt;/span&gt; F; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt; . &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$F&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;; &lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;else&lt;/span&gt;
    Xvesa -br -screen 1024x768x32 -shadow -3button -mouse /dev/input/mice,5 -nolisten tcp -I &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &amp;amp;
    &lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;XPID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$!&lt;/span&gt;
    waitforX &lt;span style="color: #555555"&gt;||&lt;/span&gt; ! &lt;span style="color: #336666"&gt;echo&lt;/span&gt; failed in waitforX &lt;span style="color: #555555"&gt;||&lt;/span&gt; &lt;span style="color: #336666"&gt;exit&lt;/span&gt;
    &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$DESKTOP&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; 2&amp;gt;/tmp/wm_errors &amp;amp;
    &lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;WM_PID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$!&lt;/span&gt;
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; -x &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.setbackground &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.setbackground
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; -x &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.mouse_config &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.mouse_config &amp;amp;
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;which &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ICONS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;.sh&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;ICONS&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;.sh &amp;amp;
    &lt;span style="color: #555555"&gt;[&lt;/span&gt; -d &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/.X.d&amp;quot;&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/.X.d&amp;quot;&lt;/span&gt; -type f -print | &lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;read&lt;/span&gt; F; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt; . &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$F&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;; &lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;My &lt;code&gt;/home/tc/.local/bin/localX.sh&lt;/code&gt; file looks like this&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# This script will start a local X Window envirnment&lt;/span&gt;

Xvesa -br -screen 1024x768x32 -shadow -3button -mouse /dev/input/mice,5 -nolisten tcp -I &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; &amp;amp;
&lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;XPID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$!&lt;/span&gt;
waitforX &lt;span style="color: #555555"&gt;||&lt;/span&gt; ! &lt;span style="color: #336666"&gt;echo&lt;/span&gt; failed in waitforX &lt;span style="color: #555555"&gt;||&lt;/span&gt; &lt;span style="color: #336666"&gt;exit&lt;/span&gt;
&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$DESKTOP&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; 2&amp;gt;/tmp/wm_errors &amp;amp;
&lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;WM_PID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$!&lt;/span&gt;
&lt;span style="color: #555555"&gt;[&lt;/span&gt; -x &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.setbackground &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.setbackground
&lt;span style="color: #555555"&gt;[&lt;/span&gt; -x &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.mouse_config &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.mouse_config &amp;amp;
&lt;span style="color: #555555"&gt;[&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;which &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ICONS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;.sh&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;ICONS&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;.sh &amp;amp;
&lt;span style="color: #555555"&gt;[&lt;/span&gt; -d &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/.X.d&amp;quot;&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt; &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/.X.d&amp;quot;&lt;/span&gt; -type f -print | &lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;read&lt;/span&gt; F; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt; . &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$F&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;; &lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Tiny Core Linux Commands&lt;/h3&gt;
&lt;p&gt;To find the linux kernel version for the TCL your runing &lt;code&gt;uname -or&lt;/code&gt;.
To check the running version of TCL, you can run the &lt;code&gt;version&lt;/code&gt; command.
For example:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;tc@XT:~$ uname -or
3.8.13-tinycore GNU/Linux
tc@XT:~$ version
5.2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Once Installed, How Do You Manage the X Terminal&lt;/h3&gt;
&lt;p&gt;To kill the Xvesa X Server on TCL, press the &lt;code&gt;Ctrl+Alt+Del&lt;/code&gt; key combination,
and you will get the TCL command line prompt.&lt;/p&gt;
&lt;p&gt;To start the X Winodw System, do the following&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# start the X Window System and brings up the Xvesa X Server using the remote Display Manager&lt;/span&gt;
. ./.xsession
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configuring Remote Computer (Ubuntu Desktop)&lt;/h3&gt;
&lt;p&gt;On the remote-computer (in my case, a Ubuntu desktop runing &lt;code&gt;lightdm&lt;/code&gt; Display Manager),
you need to tell the Display Manager to accept logins from a remote X Server.
This is easily done by configuring the file &lt;code&gt;/etc/lightdm/lightdm.conf&lt;/code&gt; so it contains&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;[SeatDefaults]
user-session=ubuntu
autologin-user=false
xserver-allow-tcp=true
greeter-session=unity-greeter

[xdmcp]
Enable=true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The key parameter to be added is &lt;code&gt;xserver-allow-tcp&lt;/code&gt;.
There is no manpage for &lt;code&gt;lighdm.conf&lt;/code&gt;, but there is an example that lists all the options
and a bit about what they do, just look in &lt;code&gt;/usr/share/doc/lightdm/lightdm.conf.gz&lt;/code&gt;
For a more complete list of configuration parameters for lightDM Display Manager,
see the article "&lt;a href="http://hmontoliu.blogspot.com/2011/10/disable-guest-sesson-in-ubuntu-1110.html"&gt;Disable guest session in Ubuntu 11.10&lt;/a&gt;" and
&lt;a href="http://www.mattfischer.com/blog/?p=343"&gt;Understanding lightdm.conf&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Picking a New Window Manager for Remote Computer (Ubuntu Desktop)&lt;/h3&gt;
&lt;p&gt;Given my problems with Compiz stated earlier, I want to pick a simpler,
lightweight Window Manger that could run on my ancient hardware.
I researched my options with the aid of the articles
"&lt;a href="http://www.engadget.com/2012/10/30/how-to-picking-a-window-manager-linux/"&gt;How-to: Picking a Window Manager in Linux&lt;/a&gt;" and
"&lt;a href="http://www.junauza.com/2008/08/20-most-nimble-and-simple-x-window.html"&gt;20 Most Nimble and Simple X Window Managers for Linux&lt;/a&gt;".
I choose &lt;a href="http://fluxbox.org/"&gt;Fluxbox&lt;/a&gt; as my replacement Window Manger because of its simplicity and it widely praised.
You &lt;a href="http://fluxbox.sourceforge.net/docbook/en/html/book1.html"&gt;Fluxbox Documentation&lt;/a&gt; will give most of what you need to configure this Window Manager.
To install Fluxbox, and a companion tool for supporting desktop icons called fbdesk, use the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install Fluxbox&lt;/span&gt;
sudo apt-get install fluxbox fbdesk
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Xvesa X Server&lt;/h3&gt;
&lt;p&gt;Xvesa X Server is NOT a normal &lt;a href="http://www.xfree86.org/"&gt;XFree86&lt;/a&gt; X Server.
It is part of the &lt;a href="http://www.xfree86.org/current/TinyX.1.html"&gt;TinyX series of X Servers&lt;/a&gt;.
Xvesa accepts all the &lt;a href="http://www.xfree86.org/current/Xserver.1.html"&gt;standard options accepted by all X Servers&lt;/a&gt;,
along with some specail options.
They are part of the XFree86 package, but they are very different.
They are designed for low memory use.
It also turns out that they work better for some video chips than the normal
XF86 xservers.&lt;/p&gt;
&lt;p&gt;But one very important thing is they do NOT use the XF86Config
file, like their bigger brothers.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Xvesa -query desktop -br -screen 1024x768x32 -shadow
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-nolisten trans-type&lt;/strong&gt; disables a transport type. For example, TCP/IP connections can be disabled with -nolisten tcp. This option may be issued multiple times to disable listening to different transport types.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-br&lt;/strong&gt; sets the default root window to solid black instead of the standard root weave pattern.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-shadow&lt;/strong&gt; use a shadow framebuffer even if it is not strictly necessary. This may dramatically improve performance on some hardware.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-I&lt;/strong&gt; ignore all remaining arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make this persistent, put &lt;code&gt;tc/.xsession&lt;/code&gt; in the &lt;code&gt;/opt/.filetool.lst&lt;/code&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:A"&gt;
&lt;p&gt;Celeron is a brand name given by Intel Corp. to a number of different microprocessor models
targeted at budget personal computers.
&lt;a href="http://en.wikipedia.org/wiki/Celeron"&gt;Introduced in April 1998&lt;/a&gt;, the first Celeron branded CPU was based on the Pentium II branded core.
Subsequent Celeron branded CPUs were based on the Pentium III, Pentium 4, Pentium M,
and Intel Core branded processors.
With Damn Small Linux loaded and running &lt;code&gt;cat /proc/cpuinfo&lt;/code&gt;,
it shows the processor is of Intel CPU family 6 and model 11.
This maps to Intel product code 80530, which &lt;a href="http://en.wikipedia.org/wiki/List_of_Intel_microprocessors"&gt;makes it a Pentium III (codename Tualatin)&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:B"&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Feature&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;CPU&lt;/td&gt;
&lt;td&gt;1066-MHz Intel Mobile Celeron processor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Cache&lt;/td&gt;
&lt;td&gt;128KB internal L2 cache, 32KB internal L1 cache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Memory&lt;/td&gt;
&lt;td&gt;128MB of 100MHz SDRAM standard (PC100), 512MB maximum system memory (two slots available only for memory modules)(144-pin/3.3V; 1.25-in slots)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Mass Storage&lt;/td&gt;
&lt;td&gt;10GB Enhanced-IDE hard drive, Built-in 3.5-inch 1.44-MB floppy disk drive, Built-in 24X maximum-speed CD-ROM drive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Display&lt;/td&gt;
&lt;td&gt;13.3-inch diagonal 1024 × 768 XGA TFT display with 16 million colors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Video&lt;/td&gt;
&lt;td&gt;S3 Savage/1X graphics controller, 2X AGP graphics, 128-bit single-cycle 3D architecture video graphics controller, 8MB of embedded video SGRAM, external video resolutions/maximum colors/refresh rates: 800 × 600/16M colors/85Hz, 1024 × 768/16M colors/85Hz, 1280 × 1024/16M colors/85Hz, 1600 × 1200/64K colors/85Hz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Audio&lt;/td&gt;
&lt;td&gt;16-bit Sound Blaster Pro–compatible stereo sound (ESS Allegra), Stereo sound via headphone-out, microphone-in port, Polk Audio speakers, 3D-enhanced PCI bus audio, Supports CD-play while system is off, Built-in microphone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Ports&lt;/td&gt;
&lt;td&gt;Two Universal Serial Bus (USB) ports, Serial port: 9-pin, 115,200 bps, Parallel port: 25-pin bi-directional ECP and EPP, 4-Mbps IrDA-compliant infrared port, PS/2 keyboard/mouse port, VGA: 15-pin, Composite TV-out, RJ-11 modem jack, RJ-45 jack, Headphone-out, microphone-in ports&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Communications&lt;/td&gt;
&lt;td&gt;Integrated 56Kbps, v.90-compatible, worldwide capable modem + 10/100 LAN combo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Power&lt;/td&gt;
&lt;td&gt;Universal AC adapter: 100 to 240 Vac input; 19-Vdc, 3.16-A output, Built-in rechargeable 9-cell Lithium-Ion battery (with up to 4-hour run time)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;PC Card Slots&lt;/td&gt;
&lt;td&gt;One Type III or two Type II PC Card slots, CardBus-enabled (TI 1420)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Weight&lt;/td&gt;
&lt;td&gt;7.2lb with 13.3-in display&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Dimensions&lt;/td&gt;
&lt;td&gt;13.03 × 10.76 × 1.59in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Operating System&lt;/td&gt;
&lt;td&gt;Microsoft Windows 98, Second Edition&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a class="footnote-backref" href="#fnref:B" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:C"&gt;
&lt;p&gt;Generally, a &lt;a href="http://en.wikipedia.org/wiki/X_terminal"&gt;X Terminal&lt;/a&gt;, a predecessor to todays &lt;a href="http://en.wikipedia.org/wiki/Thin_client"&gt;thin client&lt;/a&gt;, is a low-powered,
diskless, quieter, and more reliable than desktop computers
because they do not have any moving parts.
I can't say this about this vintage laptop.&amp;#160;&lt;a class="footnote-backref" href="#fnref:C" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:D"&gt;
&lt;p&gt;Damn Small Linux also uses by default &lt;a href="http://www.busybox.net/"&gt;Busybox&lt;/a&gt;.
BusyBox provides several stripped-down Unix tools in a single executable file.
Its originally aim was to provide a complete bootable system on a single floppy
that would serve both as a rescue disk and as an installer for the Debian distribution.
Busybox's use now is more focused on embedded operating systems with very limited resources.&amp;#160;&lt;a class="footnote-backref" href="#fnref:D" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:E"&gt;
&lt;p&gt;XDMCP is inherently insecure as it does not encrypt your traffic.
Therefore, only use XDMCP on a wired network that you you trust or a solidly secure wireless network.
Also, consider using alternatives that feature security (and often compression) such as &lt;a href="https://help.ubuntu.com/community/FreeNX"&gt;FreeNX&lt;/a&gt;.
XDMCP also uses a large amount of bandwidth because it uses no compression.
A 100Mb network may be necessary.
However, the lack of compression can make XDMCP provide very fast graphics when the bandwidth is available.&amp;#160;&lt;a class="footnote-backref" href="#fnref:E" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:F"&gt;
&lt;p&gt;An alternative is to use the graphics configuration editor &lt;code&gt;dconf-editor&lt;/code&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:F" rev="footnote" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:G"&gt;
&lt;p&gt;There appears to be some efforts to create a secure solution using a tool call &lt;a href="http://ayesha.phys.virginia.edu/~bryan/projects/knoppix/sterminal/"&gt;S-Terminal&lt;/a&gt;,
but since this would need to be supported on Tiny Core Linux (which it is not),
this will not help me.&amp;#160;&lt;a class="footnote-backref" href="#fnref:G" rev="footnote" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:I"&gt;
&lt;p&gt;&lt;code&gt;wpa_supplicant&lt;/code&gt; is a free software implementation of an IEEE 802.11i supplicant for Linux.
Included with the supplicant are a GUI and a command-line utility for interacting with the running supplicant.
From either of these interfaces it is possible to review a list of currently visible networks,
select one of them, provide any additional security information needed to authenticate with the network
(for example, a passphrase, or username and password).&amp;#160;&lt;a class="footnote-backref" href="#fnref:I" rev="footnote" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:J"&gt;
&lt;p&gt;Udhcpc is a very small DHCP client program geared towards embedded systems.
The letters are an abbreviation for Micro - DHCP - Client (µDHCPc).
The program tries to be fully functional and RFC 2131 compliant.&amp;#160;&lt;a class="footnote-backref" href="#fnref:J" rev="footnote" title="Jump back to footnote 9 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Tiny Core Linux"></category><category term="X Terminal"></category><category term="X Window System"></category><category term="Window Manager"></category></entry><entry><title>Conky for Ubuntu</title><link href="/posts/2014/May/12/conky-for-ubuntu/" rel="alternate"></link><published>2014-05-12T12:42:00-04:00</published><author><name>"Jeff Irland"</name></author><id>tag:,2014-05-12:posts/2014/May/12/conky-for-ubuntu/</id><summary type="html">&lt;p&gt;Over a Year ago, I created a &lt;a href="http://jeffskinnerbox.me/posts/2012/Nov/02/conky-for-the-raspberry-pi/"&gt;Conky configuration file for the Raspberry Pi&lt;/a&gt;.
I final got around to tailoring it for my desktop Linux box.
You find both version on &lt;a href="https://github.com/jeffskinnerbox/dotconky"&gt;GitHub&lt;/a&gt;.
Screen shot is at the bottom.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# --------------------------------------------------------------------- #&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# .conkyrc - derived from various examples across the &amp;#39;net&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#   Designed to support a 4 core processer running Ubunutu&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# You can restart conky by running&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#       killall -SIGUSR1 conky&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# --------------------------------------------------------------------- #&lt;/span&gt;


&lt;span style="color: #0099FF; font-style: italic"&gt;# -------------------- Conky&amp;#39;s Run Time Parameters -------------------- #&lt;/span&gt;

update_interval 2.0         &lt;span style="color: #0099FF; font-style: italic"&gt;# Conky update interval in seconds&lt;/span&gt;
total_run_times &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;           &lt;span style="color: #0099FF; font-style: italic"&gt;# Number of updates before quitting.  Set to zero to run forever.&lt;/span&gt;
no_buffers yes              &lt;span style="color: #0099FF; font-style: italic"&gt;# Subtract file system buffers from used memory?&lt;/span&gt;
cpu_avg_samples &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;           &lt;span style="color: #0099FF; font-style: italic"&gt;# Number of cpu samples to average. Set to 1 to disable averaging&lt;/span&gt;
net_avg_samples &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;           &lt;span style="color: #0099FF; font-style: italic"&gt;# Number of net samples to average. Set to 1 to disable averaging&lt;/span&gt;


&lt;span style="color: #0099FF; font-style: italic"&gt;# -------------------- Conky&amp;#39;s General Look &amp;amp; Feel -------------------- #&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# --- defualt values --- #&lt;/span&gt;
default_color grey          &lt;span style="color: #0099FF; font-style: italic"&gt;# Default color and border color&lt;/span&gt;
default_bar_size &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; &lt;span style="color: #FF6600"&gt;6&lt;/span&gt;        &lt;span style="color: #0099FF; font-style: italic"&gt;# Specify a default width and height for bars.&lt;/span&gt;
default_gauge_size &lt;span style="color: #FF6600"&gt;25&lt;/span&gt; &lt;span style="color: #FF6600"&gt;25&lt;/span&gt;    &lt;span style="color: #0099FF; font-style: italic"&gt;# Specify a default width and height for gauges.&lt;/span&gt;
default_graph_size &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; &lt;span style="color: #FF6600"&gt;25&lt;/span&gt;     &lt;span style="color: #0099FF; font-style: italic"&gt;# Specify a default width and height for graphs.&lt;/span&gt;
default_outline_color green &lt;span style="color: #0099FF; font-style: italic"&gt;# Default border and text outline color&lt;/span&gt;
default_shade_color yellow  &lt;span style="color: #0099FF; font-style: italic"&gt;# Default border and text shading color&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# --- predefined colors - http://www.kgym.jp/freesoft/xrgb.html --- #&lt;/span&gt;
color0 FFFFFF               &lt;span style="color: #0099FF; font-style: italic"&gt;# white&lt;/span&gt;
color1 FFA500               &lt;span style="color: #0099FF; font-style: italic"&gt;# orange&lt;/span&gt;
color2 B22222               &lt;span style="color: #0099FF; font-style: italic"&gt;# firebrick&lt;/span&gt;
color3 &lt;span style="color: #FF6600"&gt;696969&lt;/span&gt;               &lt;span style="color: #0099FF; font-style: italic"&gt;# dim gray&lt;/span&gt;
color4 D3D3D3               &lt;span style="color: #0099FF; font-style: italic"&gt;# light gray&lt;/span&gt;
color5 2F4F4F               &lt;span style="color: #0099FF; font-style: italic"&gt;# dark slate gray&lt;/span&gt;
color6 FFEC8B               &lt;span style="color: #0099FF; font-style: italic"&gt;# light golden rod&lt;/span&gt;
color7 54FF9F               &lt;span style="color: #0099FF; font-style: italic"&gt;# sea green&lt;/span&gt;
color8 FF8C69               &lt;span style="color: #0099FF; font-style: italic"&gt;# salmon&lt;/span&gt;
color9 FFE7BA               &lt;span style="color: #0099FF; font-style: italic"&gt;# wheat&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# --- window layout &amp;amp; options --- #&lt;/span&gt;
own_window yes              &lt;span style="color: #0099FF; font-style: italic"&gt;# Conky creates its own window instead of using desktop&lt;/span&gt;
own_window_type normal      &lt;span style="color: #0099FF; font-style: italic"&gt;# If own_window is yes, use type normal, desktop, or override&lt;/span&gt;
own_window_transparent yes  &lt;span style="color: #0099FF; font-style: italic"&gt;# Use pseudo transparency with own_window?&lt;/span&gt;
own_window_colour blue      &lt;span style="color: #0099FF; font-style: italic"&gt;# If own_window_transparent is no, set the background colour&lt;/span&gt;
double_buffer yes           &lt;span style="color: #0099FF; font-style: italic"&gt;# Use double buffering (reduces flicker)&lt;/span&gt;
use_spacer right            &lt;span style="color: #0099FF; font-style: italic"&gt;# Adds spaces to stop object from moving&lt;/span&gt;
maximum_width &lt;span style="color: #FF6600"&gt;600&lt;/span&gt;           &lt;span style="color: #0099FF; font-style: italic"&gt;# Maximum width of window in pixels&lt;/span&gt;
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager

&lt;span style="color: #0099FF; font-style: italic"&gt;# --- window placment --- #&lt;/span&gt;
alignment top_right         &lt;span style="color: #0099FF; font-style: italic"&gt;# window placement can be top_right, top_left, bottom_left, bottom_right&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# --- borders, margins, and outlines --- #&lt;/span&gt;
draw_graph_borders yes      &lt;span style="color: #0099FF; font-style: italic"&gt;# Do you want to draw borders around graphs&lt;/span&gt;
border_inner_margin &lt;span style="color: #FF6600"&gt;9&lt;/span&gt;       &lt;span style="color: #0099FF; font-style: italic"&gt;# Window&amp;#39;s inner border margin (in pixels)&lt;/span&gt;
border_outer_margin &lt;span style="color: #FF6600"&gt;5&lt;/span&gt;       &lt;span style="color: #0099FF; font-style: italic"&gt;# Window&amp;#39;s outer border margin (in pixels)&lt;/span&gt;
gap_x &lt;span style="color: #FF6600"&gt;10&lt;/span&gt;                    &lt;span style="color: #0099FF; font-style: italic"&gt;# Gap between borders of screen and text (on x-axis)&lt;/span&gt;
gap_y &lt;span style="color: #FF6600"&gt;40&lt;/span&gt;                    &lt;span style="color: #0099FF; font-style: italic"&gt;# Gap between borders of screen and text (on y-axis)&lt;/span&gt;
border_width &lt;span style="color: #FF6600"&gt;10&lt;/span&gt;             &lt;span style="color: #0099FF; font-style: italic"&gt;# Window&amp;#39;s border width (in pixels)&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# --- Text --- #&lt;/span&gt;
draw_outline no             &lt;span style="color: #0099FF; font-style: italic"&gt;# Do you want ot draw outlines&lt;/span&gt;
draw_shades no              &lt;span style="color: #0099FF; font-style: italic"&gt;# Do you want to draw shades&lt;/span&gt;
draw_borders no             &lt;span style="color: #0099FF; font-style: italic"&gt;# Do you want to draw borders around text&lt;/span&gt;
uppercase no                &lt;span style="color: #0099FF; font-style: italic"&gt;# set to yes if you want all text to be in uppercase&lt;/span&gt;
use_xft yes                 &lt;span style="color: #0099FF; font-style: italic"&gt;# use the X FreeType interface library (anti-aliased font)&lt;/span&gt;
xftfont Monospace:size&lt;span style="color: #555555"&gt;=&lt;/span&gt;8:weight&lt;span style="color: #555555"&gt;=&lt;/span&gt;bold    &lt;span style="color: #0099FF; font-style: italic"&gt;# Xft font to be used&lt;/span&gt;


&lt;span style="color: #0099FF; font-style: italic"&gt;# -------------------- Conky&amp;#39;s Displayed System Monitoring Parameters -------------------- #&lt;/span&gt;
TEXT
&lt;span style="color: #0099FF; font-style: italic"&gt;# General system information&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;SYSTEM INFORMATION &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;System: &lt;span style="color: #003333"&gt;$color$nodename&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Uptime: &lt;span style="color: #003333"&gt;$color$uptime&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Kernel: &lt;span style="color: #003333"&gt;$color$kernel&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Arch: &lt;span style="color: #003333"&gt;$color$machine&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Distribution: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;execi&lt;/span&gt; 99999 lsb_release --description | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $2&amp;quot; &amp;quot;$3 }&amp;#39;&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;CPU Type: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;execi&lt;/span&gt; 99999 grep &lt;span style="color: #CC3300"&gt;&amp;#39;model name&amp;#39;&lt;/span&gt; /proc/cpuinfo | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $6 }&amp;#39;&lt;/span&gt; | sed &lt;span style="color: #CC3300"&gt;&amp;#39;2,$d&amp;#39;&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; / &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;execi&lt;/span&gt; 99999 grep &lt;span style="color: #CC3300"&gt;&amp;#39;model name&amp;#39;&lt;/span&gt; /proc/cpuinfo | wc -l&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; Cores
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;CPU Speed: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;freq&lt;/span&gt; 0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; MHz Current / &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;execi&lt;/span&gt; 99999 grep &lt;span style="color: #CC3300"&gt;&amp;#39;model name&amp;#39;&lt;/span&gt; /proc/cpuinfo | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $9 }&amp;#39;&lt;/span&gt; | sed &lt;span style="color: #CC3300"&gt;&amp;#39;2,$d&amp;#39;&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; Max
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Processor Temperature: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;acpitemp&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;°C
&lt;span style="color: #0099FF; font-style: italic"&gt;#${color0}MAC Address (eth0): $color${execi 99999 cat /sys/class/net/eth0/address }&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#${color0}MAC Address (eth1): $color${execi 99999 cat /sys/class/net/eth1/address }&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#${color0}MAC Address (wlan0): $color${execi 99999 cat /sys/class/net/wlan0/address }&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# CPU information&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;CPU &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;CPU Usage:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpu&lt;/span&gt; cpu0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color7&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpubar&lt;/span&gt; cpu0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpugraph&lt;/span&gt; cpu0 0000ff 00ff00&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Core 1:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;freq&lt;/span&gt; 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; MHz &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpu&lt;/span&gt; cpu1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color5&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpubar&lt;/span&gt; cpu1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Core 2:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;freq&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; MHz &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpu&lt;/span&gt; cpu2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color5&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpubar&lt;/span&gt; cpu2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Core 3:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;freq&lt;/span&gt; 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; MHz &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpu&lt;/span&gt; cpu3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color5&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpubar&lt;/span&gt; cpu3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Core 4:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;freq&lt;/span&gt; 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; MHz &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpu&lt;/span&gt; cpu4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color5&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;cpubar&lt;/span&gt; cpu4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Top running processes&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;TOP &lt;span style="color: #FF6600"&gt;5&lt;/span&gt; PROCESSES &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Processes:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #003333"&gt;$processes&lt;/span&gt;  &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Running:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #003333"&gt;$running_processes&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Threads:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #003333"&gt;$threads&lt;/span&gt;  &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Running:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #003333"&gt;$running_threads&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;stippled_hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;CPU Usage&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color3&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; NAME              PID    CPU %   MEM&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color2&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; name 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; pid 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; cpu 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; mem 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; name 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; pid 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; cpu 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; mem 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; name 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; pid 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; cpu 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; mem 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; name 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; pid 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; cpu 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; mem 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; name 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; pid 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; cpu 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top&lt;/span&gt; mem 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;stippled_hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Mem Usage&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color3&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; NAME              PID    CPU %   MEM&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color2&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; name 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; pid 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; cpu 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; mem 1&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; name 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; pid 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; cpu 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; mem 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; name 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; pid 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; cpu 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; mem 3&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; name 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; pid 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; cpu 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; mem 4&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
 &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; name 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; pid 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; cpu 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;top_mem&lt;/span&gt; mem 5&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Memory and swap space untilization&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;MEMORY &amp;amp; SWAP &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;RAM Usage: &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$mem&lt;/span&gt; / &lt;span style="color: #003333"&gt;$memmax&lt;/span&gt;
&lt;span style="color: #003333"&gt;$memperc&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color6&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;membar&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Swap Usage: &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$swap&lt;/span&gt; / &lt;span style="color: #003333"&gt;$swapmax&lt;/span&gt;
&lt;span style="color: #003333"&gt;$swapperc&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color6&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;swapbar&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# File System utilization&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;FILE SYSTEM &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;root:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used&lt;/span&gt; /&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; / &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_size&lt;/span&gt; /&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used_perc&lt;/span&gt; /&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_bar&lt;/span&gt; /&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;boot:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used&lt;/span&gt; /boot&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; / &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_size&lt;/span&gt; /boot&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used_perc&lt;/span&gt; /boot&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_bar&lt;/span&gt; /boot&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;home:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used&lt;/span&gt; /home&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; / &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_size&lt;/span&gt; /home&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used_perc&lt;/span&gt; /home&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_bar&lt;/span&gt; /home&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;backup:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used&lt;/span&gt; /mnt/backup&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; / &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_size&lt;/span&gt; /mnt/backup&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_used_perc&lt;/span&gt; /mnt/backup&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;% &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;fs_bar&lt;/span&gt; /mnt/backup&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Hard Drive Utilization&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;HARD DRIVE I/O &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Device:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; /dev/sda
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Reads: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskio_read&lt;/span&gt; /dev/sda&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Writes: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskio_write&lt;/span&gt; /dev/sda&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskiograph_read&lt;/span&gt; /dev/sda 20,100 33FF00 FF3333 scale -t&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskiograph_write&lt;/span&gt; /dev/sda 20,100 33FF00 FF3333 scale -t&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Device:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; /dev/md0
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Reads: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskio_read&lt;/span&gt; /dev/md0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Writes: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskio_write&lt;/span&gt; /dev/md0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskiograph_read&lt;/span&gt; /dev/md0 20,100 33FF00 FF3333 scale -t&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color8&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;diskiograph_write&lt;/span&gt; /dev/md0 20,100 33FF00 FF3333 scale -t&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Ethernet utilization&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;NETWORKING &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Wired &lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;addr&lt;/span&gt; eth0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #555555"&gt;)&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Down:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;downspeed&lt;/span&gt; eth0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Up:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;upspeed&lt;/span&gt; eth0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Total:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;totaldown&lt;/span&gt; eth0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Total: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;totalup&lt;/span&gt; eth0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;downspeedgraph&lt;/span&gt; eth0 25,120 000000 00ff00&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;upspeedgraph&lt;/span&gt; eth0 25,120 000000 ff0000&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;stippled_hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Wireless &lt;span style="color: #555555"&gt;(&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;addr&lt;/span&gt; wlan0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #555555"&gt;)&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Down:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;downspeed&lt;/span&gt; wlan0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Up:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;upspeed&lt;/span&gt; wlan0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;/s
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Total:&lt;span style="color: #003333"&gt;$color&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;totaldown&lt;/span&gt; wlan0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;Total: &lt;span style="color: #003333"&gt;$color&lt;/span&gt;&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;totalup&lt;/span&gt; wlan0&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;downspeedgraph&lt;/span&gt; wlan0 25,120 000000 00ff00&lt;span style="color: #AA0000"&gt;}&lt;/span&gt; &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;alignr&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;upspeedgraph&lt;/span&gt; wlan0 25,120 000000 ff0000&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Print the tail of the Linux system log&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color1&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;LOG FILES &lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;hr&lt;/span&gt; 2&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color0&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;SysLog Messages&lt;span style="color: #003333"&gt;$color&lt;/span&gt;
&lt;span style="color: #AA0000"&gt;${&lt;/span&gt;&lt;span style="color: #003333"&gt;color4&lt;/span&gt;&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;font&lt;/span&gt; Arial:&lt;span style="color: #003333"&gt;size&lt;/span&gt;=7&lt;span style="color: #AA0000"&gt;}${&lt;/span&gt;&lt;span style="color: #003333"&gt;execi&lt;/span&gt; 30 tail -n3 /var/log/syslog | fold -w50&lt;span style="color: #AA0000"&gt;}&lt;/span&gt;&lt;span style="color: #003333"&gt;$color$font&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Screen shot is below with Corky instance on the right side:&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/corky-screen-shot.jpg"&gt;&lt;img alt="Corky Screen Shot" src="/images/corky-screen-shot.jpg" title="Corky for Ubuntu on right of the desktop" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Conky"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>HowTo: Using Xephyr to Create a New Display in a Window</title><link href="/posts/2014/Apr/29/howto-using-xephyr-to-create-a-new-display-in-a-window/" rel="alternate"></link><published>2014-04-29T22:54:00-04:00</published><author><name>"Jeff Irland"</name></author><id>tag:,2014-04-29:posts/2014/Apr/29/howto-using-xephyr-to-create-a-new-display-in-a-window/</id><summary type="html">&lt;p&gt;You might want to run one X Window System desktop environment on your local computer while accessing second computer,
including its own desktop environment,
all the while using the first computer’s screen and keyboard.
This sounds like multiple X Servers running.
One for the monitor and the other managing a graphics window as if it were a second monitor.
Fortunately, X Window System provides tools to do exactly this.
This has been done by designing a X Client to emulate an X Server that then provides display services to other clients.
The open-source clients that do this are called &lt;code&gt;Xnest&lt;/code&gt; and &lt;code&gt;Xephyr&lt;/code&gt;.
And this display within a window concept is known as "X nesting".&lt;/p&gt;
&lt;h1&gt;My Native Desktop Environment&lt;/h1&gt;
&lt;p&gt;For my X Window System, I'm running Lightweight X11 Desktop Environment (LXDE)
which has &lt;code&gt;lxdm&lt;/code&gt; as its X Display Manager (aka GUI Login Manager),
nd uses &lt;code&gt;lxsession&lt;/code&gt; as it X Session Manager,
and the &lt;code&gt;Metacity&lt;/code&gt; X Window Manager.
In the examples below, I sometimes use other components to demonstrate the robustness of the approach.
Specifically, I'm using the &lt;a href="http://awesome.naquadah.org/"&gt;Awesome X Windows Manager&lt;/a&gt;
This can be load with the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install awesome awesome-extra
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Xnest&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Xnest&lt;/code&gt; is a Display Server implementing the X11 display server protocol that outputs to a window,
as apposed to a X display.
&lt;code&gt;Xnest&lt;/code&gt; is a standard part of the XFree86 and X.org X Servers,
and provides an X Server that runs inside a standard X Window.
In other words, &lt;code&gt;Xnest&lt;/code&gt; opens a window that works like another screen in which the user can open windows, etc.
At the X Protocol level, &lt;code&gt;Xnest&lt;/code&gt; works like a X Client of the X Server hosting the window,
and as a X Server with respect to the X Window Manager
(i.e. applications that opens windows) within the &lt;code&gt;Xnest&lt;/code&gt; session.
Therefore, &lt;code&gt;Xnest&lt;/code&gt; can be used to run a virtual desktop of another computer
(which is running X Window) within a window.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Xnest&lt;/code&gt; might come pre-installed in the Ubuntu X Window System
but it's easy to install and is &lt;a href="http://box.matto.nl/xnest.html"&gt;easy to use&lt;/a&gt;.
Simply install the package.  No special configuration is require.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install xnest
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Simple Test of Xnest&lt;/h3&gt;
&lt;p&gt;To open a window containing a new X Display (i.e. display :3) and running xclock,
execute the following commands in an &lt;code&gt;xterm&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Xnest :3 -geometry 1280x1024+200+200 -name &amp;quot;Xnest Test Window&amp;quot; 2&amp;gt; /dev/null &amp;amp;
xclock -display :3 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The options have the following purpose:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:3&lt;/strong&gt; is your display (displays are numbered starting with 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-geometry 1280x1024+200+200&lt;/strong&gt; sets the window size and position&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-name "Xnest Test Window"&lt;/strong&gt; is the title of the Xnest window&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2&amp;gt; /dev/null&lt;/strong&gt; redirects trace and error messages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the above, there isn't a window manager.
To include a window manager, you simple need to start one up, but again, within display :3.
And you can tile on a &lt;code&gt;xterm&lt;/code&gt; and the &lt;code&gt;xeye&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;DISPLAY=:3 awesome &amp;amp;
DISPLAY=:3 xterm &amp;amp;
DISPLAY=:3 xeyes &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Xephyr&lt;/h1&gt;
&lt;p&gt;For this discussion, you can think of &lt;a href="http://nims11.wordpress.com/2012/06/24/nested-x-servers-with-xephyr/"&gt;&lt;code&gt;Xephyr&lt;/code&gt;&lt;/a&gt; as an improved &lt;code&gt;Xnest&lt;/code&gt;.
Also, the use of the &lt;code&gt;Xephyr&lt;/code&gt; X Server instead of &lt;code&gt;Xnest&lt;/code&gt; is generally recommended.
You can install &lt;code&gt;Xephyr&lt;/code&gt; with the following.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install xserver-xephyr
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Simple Test of Xephyr&lt;/h3&gt;
&lt;p&gt;To open a &lt;code&gt;Xephyr&lt;/code&gt; window with a specific size and suppress trace / error messaging,
do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Xephyr -ac -screen 1280x1024 -br -reset -terminate 2&amp;gt; /dev/null :3 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The options have the following purpose:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:3&lt;/strong&gt; is your display (displays are numbered starting with 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-ac&lt;/strong&gt; disable access control restrictions (allow you to forward X)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-screen 1280x1024&lt;/strong&gt; sets the window size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-br&lt;/strong&gt; set the background to black&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-reset&lt;/strong&gt; reset after last client exists&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-terminate&lt;/strong&gt; terminate &lt;code&gt;Xephyr&lt;/code&gt; at server reset (does not always work)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2&amp;gt; /dev/null&lt;/strong&gt; redirects trace and error messages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add a &lt;code&gt;xterm&lt;/code&gt; into another account and the GNOME Window Manager, you could do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Xephyr -ac -screen 1280x1024 -br -reset -terminate 2&amp;gt; /dev/null :3 &amp;amp;
DISPLAY=:3.0 gnome-wm &amp;amp;
DISPLAY=:3.0 ssh -X jennie@desktop xterm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or you could start a GNOME Desktop session, and this will being with it its display manager&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Xephyr -ac -screen 1280x1024 -br -reset -terminate 2&amp;gt; /dev/null :3 &amp;amp;
DISPLAY=:3 gnome-session &amp;amp;
DISPLAY=:3.0 ssh -XfC jennie@desktop xterm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This doesn't give you the full desktop environment.
The best way to do this is to go thought the X Display Manager (aka GUI Login Manager).
This is shown below in the next section.&lt;/p&gt;
&lt;h3&gt;Remote Login&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Xephyr&lt;/code&gt; and &lt;code&gt;Xnest&lt;/code&gt; can also be used to &lt;a href="http://techpad.co.uk/content.php?sid=72"&gt;remotely login to a desktop session&lt;/a&gt;.
When remotely starting a X Window System desktop,
&lt;a href="http://www.x.org/releases/X11R7.7/doc/libXdmcp/xdmcp.html"&gt;XDMCP (X Display Manager Control Protocol)&lt;/a&gt; is typically used to establish
the connection between the remote X Display Manager (XDM) daemon
and the local X Server.
Once the connection has been established, and the user has successfully authenticated,
the XDM daemon launches the X client session, which is displayed on the user's workstation.&lt;/p&gt;
&lt;p&gt;XDMCP suffers from some of the same security problem as all the X Protocols,
but unfortunately, cannot be tunnelled over SSH due to it's use of UDP.
Attempts to use XDMCP to connect to a remote system
via SSH will fail and an error message will be displayed.&lt;/p&gt;
&lt;p&gt;For security reasons,
XDMCP is not enabled by default on most modern UNIX distributions.
You will have to enable remote logins to your X Display Manager.
To enable XDMCP on my LXDE based system,
I configuring the file &lt;code&gt;/etc/lightdm/lightdm.conf&lt;/code&gt; so it contains&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;[SeatDefaults]
user-session=ubuntu
autologin-user=false
xserver-allow-tcp=true
greeter-session=unity-greeter

[XDMCPServer]
enabled=true
port=177
#key=
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The key enabler here is the term &lt;code&gt;enabled=true&lt;/code&gt;
(this is generally set to &lt;code&gt;false&lt;/code&gt; for security purposes).&lt;/p&gt;
&lt;p&gt;Now get out of X Window and restart the lightdm with &lt;code&gt;sudo restart lightdm&lt;/code&gt;
(make sure to exit any running applications first)
or reboot your system so the changes take effect.
To log into into my Linux system (aka &lt;code&gt;desktop&lt;/code&gt;),
from the same system as if they are remote to each other,
I used the following command works well.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Xephyr :3 -ac -screen 1280x1024 -br -reset -terminate -query desktop 2&amp;gt; /dev/null &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The new option &lt;strong&gt;-query desktop&lt;/strong&gt; cause &lt;code&gt;Xephyr&lt;/code&gt; to contact the host computer &lt;code&gt;desktop&lt;/code&gt; via XDMCP.
A screen shot is shown below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Xephyr Screen Shot" src="/images/desktop-using-xephyr.jpg" title="Desktop image with login screen shown in a window" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; When I attempted to do the same login screen (i.e. Display Manager) with &lt;code&gt;Xnest&lt;/code&gt; via the command
&lt;code&gt;Xnest :3 -geometry 1280x1024+200+200 -query desktop &amp;amp;&lt;/code&gt;
and found that it didn't fully work.
Appears &lt;code&gt;Xephyr&lt;/code&gt; is the way to go.&lt;/p&gt;
&lt;h3&gt;Sources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/20385/windows-managers-vs-login-managers-vs-display-managers-vs-desktop-environment"&gt;Windows Managers vs Login Managers vs Display Managers vs Session Manager vs Desktop Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/60364/can-i-run-a-remote-x-session-in-windowed-mode"&gt;Can I run a remote X session in windowed mode?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://x.cygwin.com/docs/ug/using-remote-session.html"&gt;Remote sessions via XDMCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.answeredubuntu.com/175902/remote_x_server_with_ssh_x#sthash.ifsk3uxx.dpbs"&gt;Remote x-server with ssh -X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ptspts.blogspot.com/2010/02/how-to-try-gdm-login-screen-in-many.html"&gt;How to try the GDM login screen in many resolutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.centos.org/docs/5/html/5.2/Installation_Guide/s2-trouble-remotex.html"&gt;Remote Graphical Desktops and XDMCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forums.opensuse.org/showthread.php/466709-Starting-a-Remote-X-session-using-XDMCP"&gt;Starting a Remote X session using XDMCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/11189/how-to-use-xdmcpgdm-and-xnest"&gt;How to use XDMCP+GDM and Xnest?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.ubuntu.com/xdmcp"&gt;xdmcp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="How To"></category><category term="X Window System"></category><category term="Window Manager"></category><category term="Xnest"></category><category term="Xephyr"></category></entry><entry><title>HowTo: Linux Maintenance and Filesystem Hygiene</title><link href="/posts/2014/Mar/31/howto-linux-maintenance-and-filesystem-hygiene/" rel="alternate"></link><published>2014-03-31T21:23:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2014-03-31:posts/2014/Mar/31/howto-linux-maintenance-and-filesystem-hygiene/</id><summary type="html">&lt;p&gt;What kind of maintenance does one need to do on an Ubuntu / Debian / Raspberry Pi Linux distributions?
Defrag the drive, clean your registry, update antivirus, etc. just like you need to in Windows?
None of this is needed in Linux but there is some recommend filesystem hygiene you should be doing.&lt;/p&gt;
&lt;h2&gt;Gather Information&lt;/h2&gt;
&lt;p&gt;For starters, lets gather some information.
Some of the maintenance activities listed here, you're going to need some basic information.
This next section shows you how to get that information.&lt;/p&gt;
&lt;h4&gt;Distribution Name and Version&lt;/h4&gt;
&lt;p&gt;To determine which Linux version / build / release / distribution you are running:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# kernel name and release&lt;/span&gt;
uname -sr

&lt;span style="color: #0099FF; font-style: italic"&gt;# kernel version&lt;/span&gt;
uname -v

&lt;span style="color: #0099FF; font-style: italic"&gt;# Linux distribution&lt;/span&gt;
cat /etc/*-release
lsb_release -a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use one of the following command to get a listing of all the physical hard drives
(and virutal drives) on the system:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# terminal commandline utilities to list disk drives&lt;/span&gt;
hwinfo --disk --short
sudo lshw -class disk -class storage -short

&lt;span style="color: #0099FF; font-style: italic"&gt;# GTK+ graphical user interface version of lshw&lt;/span&gt;
sudo lshw-gtk &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For the Raspberry Pi, you can list the installed firmware version via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list the Raspberry Pi&amp;#39;s firmware version&lt;/span&gt;
/opt/vc/bin/vcgencmd version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get a broader, and potentially more detailed look at your system,
consider the commands &lt;a href="http://www.thegeekstuff.com/2008/12/how-to-get-hardware-specs-of-your-system-using-lshw-hardware-lister/"&gt;&lt;code&gt;lshw&lt;/code&gt;&lt;/a&gt;
and the graphical tools &lt;a href="http://www.webupd8.org/2011/07/how-to-get-hardware-information-in.html"&gt;&lt;code&gt;lshw-gtk&lt;/code&gt;&lt;/a&gt; and &lt;a href="http://www.webupd8.org/2011/07/how-to-get-hardware-information-in.html"&gt;&lt;code&gt;sysinfo&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;OS and Application Maintenance&lt;/h2&gt;
&lt;p&gt;You should periodically update your Linux operating system (OS)
and its applications.&lt;/p&gt;
&lt;h4&gt;Install Operating System and Application Patches/Updates&lt;/h4&gt;
&lt;p&gt;This will patch the Linux operating system and all its GPL applications&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# commandline utility for applications upgrade&lt;/span&gt;
sudo apt-get update; sudo apt-get dist-upgrade

&lt;span style="color: #0099FF; font-style: italic"&gt;# graphics utility for applications upgrade&lt;/span&gt;
update-manager -c
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Updating Firmware for Raspberry Pi&lt;/h4&gt;
&lt;p&gt;In the case of the Raspberry Pi (RPi), you will want to also upgrade the firmware regularly.
&lt;a href="http://www.raspbian.org/"&gt;Raspbian&lt;/a&gt; is the standard Linux operating system distribution for the RPi,
but it doesn't include firmware.
Never the less, tools for updating the firmware are included in the Raspbian distribution of Linux.
That tool is &lt;code&gt;sudo apt-get install rpi-update&lt;/code&gt;.
I'm using the &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Adafruit's Occidentalis distribution&lt;/a&gt;, so this requires a
&lt;a href="https://github.com/Hexxeh/rpi-update"&gt;slightly different update tool&lt;/a&gt; (&lt;code&gt;git&lt;/code&gt; needs to be installed):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install tools to upgrade Raspberry Pi&amp;#39;s firmware&lt;/span&gt;
sudo wget https://raw.github.com/Hexxeh/rpi-update/master/rpi-update -O /usr/bin/rpi-update
sudo chmod +x /usr/bin/rpi-update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once the tool has been installed, periodically you can update the firmware via these commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# check for and install any required Raspberry Pi firmware upgrades&lt;/span&gt;
sudo &lt;span style="color: #003333"&gt;BRANCH&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;next rpi-update
sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that once the firmware has been successfully updated,
you'll need to reboot to load the new firmware.&lt;/p&gt;
&lt;h2&gt;Filesystem Maintenance&lt;/h2&gt;
&lt;p&gt;Filesystems and disks should be check to make sure they are not running low on resources
and are not showing any signs of pending failure.&lt;/p&gt;
&lt;h4&gt;Check Storage and Inode Usage&lt;/h4&gt;
&lt;p&gt;If you let some directories get really full, like above 95% full, you will see some serious system problems.
Check on the status of directory systems storage space and inode usage:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;df
df -i
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Disk and Filesystems Integrity&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/apps/trac/smartmontools/wiki"&gt;Smartmontools&lt;/a&gt; is a set of applications that can test hard drives
and read their hardware SMART statistics (install with &lt;code&gt;sudo apt-get install smartmontools&lt;/code&gt;).
To ensure that your drive supports &lt;a href="http://en.wikipedia.org/wiki/S.M.A.R.T."&gt;SMART&lt;/a&gt;, type the following for each physical drive:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo smartctl -i /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If &lt;code&gt;smartctl&lt;/code&gt; can access the drive, you should turn on some SMART features.
I ran the following command on my three drives (example for the &lt;code&gt;/dev/sda&lt;/code&gt; drive):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo smartctl -s on -o on -S on /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check the disk's overall health:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo smartctl -H /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If it doesn’t return PASSED, you should immediately backup all your data.
A short, but more extensive test is&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo smartctl -t short /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can do a long self-test, but this can take a significant amount of time.
You might want to run it overnight and check for the results in the morning.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo smartctl -t long /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check results, run the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo smartctl -l selftest /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately, there’s no way to check progress, so just keep running that command until the results show up.
 If either test fails, you should immediately backup all your data.
Depending on the error, your drive might be close to death or it may still have a long life ahead.
Consult the &lt;a href="http://sourceforge.net/apps/trac/smartmontools/wiki/FAQ"&gt;smartmontools FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We’ve now enabled some features and run the basic tests.
Instead of repeating the previous section daily, we can setup &lt;code&gt;smartd&lt;/code&gt; to do it all automatically.
Via the demon, you can run Smartmontools in the background,
have it check drives, and email you when there are issues.
See the Sources below to figure out what needs to be done to setup the &lt;code&gt;smartd&lt;/code&gt; demon.&lt;/p&gt;
&lt;h4&gt;Filesystem Checks and Repair&lt;/h4&gt;
&lt;p&gt;The Linux filesystem can be damaged under various circumstances, e.g., system crash,
power loss, disconnected disk, accidentally overwritten i-node, etc.
Thus it is a good idea to check the integrity of the filesystem regularly
to minimize the risk of filesystem corruption.
The tool used to &lt;a href="https://www.tecmint.com/fsck-repair-file-system-errors-in-linux/"&gt;do filesystem checks and repairs is &lt;code&gt;fsck&lt;/code&gt;&lt;/a&gt;.
You can check out the article to understand
"&lt;a href="https://linuxconfig.org/how-to-force-fsck-to-check-filesystem-after-system-reboot-on-linux"&gt;How to force fsck to check filesystem after system reboot on Linux&lt;/a&gt;"&lt;/p&gt;
&lt;p&gt;Typically, you should run &lt;code&gt;fsck&lt;/code&gt; periodically,
but there are scenarios when you will immediately want to run &lt;code&gt;fsck&lt;/code&gt;.
Typical examples are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The system fails to boot&lt;/li&gt;
&lt;li&gt;Files on the system become corrupt (often you may see input/output error)&lt;/li&gt;
&lt;li&gt;Attached drive (including flash drives/SD cards) is not working as expected&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; A filesystem check can run for many minutes, if not hours,
depending on the size of the filesystem.
You'll want to schedule the check for an appropriate time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Using the utility &lt;code&gt;tune2fs&lt;/code&gt; we can get information
related to filesystem health and status.
The example below for the filesystem &lt;code&gt;/dev/sda&lt;/code&gt;,
you get the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;number of times the filesystem has been mounted since the last &lt;code&gt;fsck&lt;/code&gt; checkup,&lt;/li&gt;
&lt;li&gt;number of mounts before a filesystem check is forced to happen,&lt;/li&gt;
&lt;li&gt;and the date/time of the last &lt;code&gt;fsck&lt;/code&gt; check:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# what is the status of the /dev/sda filesystem&lt;/span&gt;
$ sudo tune2fs -l /dev/md0 | grep -e &lt;span style="color: #CC3300"&gt;&amp;quot;Last checked&amp;quot;&lt;/span&gt; -e Max -e Mount
Mount count:              490
Maximum mount count:      -1
Last checked:             Mon May &lt;span style="color: #FF6600"&gt;27&lt;/span&gt; 14:57:13 2013
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Generally, your going to want &lt;code&gt;fsck&lt;/code&gt; to automatically attempt to correct errors it finds.
This can be done with &lt;code&gt;sudo umount /dev/sdb &amp;amp;&amp;amp; sudo fsck -y /dev/sdb&lt;/code&gt;.
The &lt;code&gt;-y&lt;/code&gt; flag, automatically “yes” to any prompts from &lt;code&gt;fsck&lt;/code&gt; to correct an error.&lt;/p&gt;
&lt;h5&gt;Forced Root Filesystem Check&lt;/h5&gt;
&lt;p&gt;You can do force a one-time filesystem check on the root file system
(aka &lt;code&gt;/&lt;/code&gt;) on the next reboot by doing the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo touch /forcefsck
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you create an empty file named &lt;code&gt;forcefsck&lt;/code&gt; in the root directory,
it will force filesystem check the next time you boot up (only on the root filesystem).
After successful booting, &lt;code&gt;/forcefsck&lt;/code&gt; will automatically be removed.&lt;/p&gt;
&lt;h5&gt;Forced Non-Root Filesystem Check&lt;/h5&gt;
&lt;p&gt;Unlike the root filesystem,
there is no equivalent to &lt;code&gt;/forcefsck&lt;/code&gt; file for non-root filesystems.
The only way to force &lt;code&gt;fsck&lt;/code&gt; on all other non-root partitions
is to manipulate the filesystem's "Maximum mount count" parameter
within the &lt;code&gt;/etc/fstab&lt;/code&gt; configuration file.
To force filesystem &lt;code&gt;fsck&lt;/code&gt; check on non-root partition's to every 10th mount:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# force a filesystem check with fsck every 10 mount&lt;/span&gt;
sudo tune2fs -c &lt;span style="color: #FF6600"&gt;10&lt;/span&gt; /dev/sdb

&lt;span style="color: #0099FF; font-style: italic"&gt;# to disable this automatic check&lt;/span&gt;
sudo tune2fs -c &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; /dev/sdb
&lt;span style="color: #0099FF; font-style: italic"&gt;# or&lt;/span&gt;
sudo tune2fs -c -1 /dev/sdb
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Periodic Filesystem Hygiene&lt;/h2&gt;
&lt;p&gt;Linux will leave some clutter around in the filesystem.
While generally not a problem, it can eat-up disk space,
and can become a problem for the &lt;code&gt;/boot&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;Clean-Up Temporary Files&lt;/h4&gt;
&lt;p&gt;Some editors (like vim) may leave files ending with a ‘~' character laying around.
You can clean them up under your &lt;code&gt;$HOME&lt;/code&gt; as a normal user
(You can do it for the entire system as root, but that can be extremely dangerous.)
Use the command below to get a list of candidates:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;find $HOME -type f -name &amp;quot;*~&amp;quot; -print
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that appears to do what you want, add the -exec part.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;find $HOME -type f -name &amp;quot;*~&amp;quot; -print -exec rm {} \;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kernel crashes, when they happen, write the core dump files under &lt;code&gt;/var&lt;/code&gt;.
Assuming you aren't saving them for debugging, you can do this to get a listing:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo find /var -type f -name &amp;quot;core&amp;quot; -print
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some applications create temporary files in their own directories:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;rm -rf ${HOME}/.macromedia/* ${HOME}/.adobe/*
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Clean-Up Old Log Files&lt;/h4&gt;
&lt;p&gt;You can also remove old compress log files from the system with&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rm -v /var/log/*.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Clean-Up Installation Packages&lt;/h4&gt;
&lt;p&gt;To remove partial packages, clean the cache, remove unused dependencies use:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# For software packages remove partial packages, clean the cache, remove unused dependencies&lt;/span&gt;
sudo apt-get autoclean
sudo apt-get clean
sudo apt-get autoremove
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Clean-Up Old Kernel Packages&lt;/h4&gt;
&lt;p&gt;You also need to do something similar for kernel installations.
You'll find the amount of space being used by the current kernel
and old kernel installation packages in &lt;code&gt;/boot&lt;/code&gt; by running:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;df -h /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The current Linux kernel installation (and the one you most definitely must keep)
can be identified via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;uname -r
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run the following command to list all packages that you no longer need:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list all the kernel packages installed on the system&lt;/span&gt;
dpkg -l &lt;span style="color: #CC3300"&gt;&amp;#39;linux-*&amp;#39;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# print the currently active kernel version&lt;/span&gt;
uname -r | sed &lt;span style="color: #CC3300"&gt;&amp;quot;s/\(.*\)-\([^0-9]\+\)/\1/&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# list all the currently loaded old kernel packages, that is other than the active one&lt;/span&gt;
dpkg -l &lt;span style="color: #CC3300"&gt;&amp;#39;linux-*&amp;#39;&lt;/span&gt; | sed &lt;span style="color: #CC3300"&gt;&amp;#39;/^ii/!d;/&amp;#39;&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;uname -r | sed &lt;span style="color: #CC3300"&gt;&amp;quot;s/\(.*\)-\([^0-9]\+\)/\1/&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;#39;/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use the above command to permanently delete &lt;strong&gt;ALL&lt;/strong&gt; older kernels:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# USE WITH CAUTION: perminately delete old kernel packages&lt;/span&gt;
sudo apt-get remove --purge &lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;dpkg -l &lt;span style="color: #CC3300"&gt;&amp;#39;linux-*&amp;#39;&lt;/span&gt; | sed &lt;span style="color: #CC3300"&gt;&amp;#39;/^ii/!d;/&amp;#39;&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;uname -r | sed &lt;span style="color: #CC3300"&gt;&amp;quot;s/\(.*\)-\([^0-9]\+\)/\1/&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;#39;/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d&amp;#39;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However this &lt;strong&gt;may not be wise&lt;/strong&gt;, as you should &lt;strong&gt;always&lt;/strong&gt;
have an old kernel or two to fall back to
(just in case the new one doesn't work with your system).
At the very least, if you've just upgraded the kernel,
reboot before deleting the older versions.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# USE WITH CAUTION: to remove a specific kernel package, in this case 3.13.0-49&lt;/span&gt;
sudo apt-get remove --purge &lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;dpkg -l &lt;span style="color: #CC3300"&gt;&amp;#39;linux-*&amp;#39;&lt;/span&gt; | sed &lt;span style="color: #CC3300"&gt;&amp;#39;/^ii/!d;/&amp;#39;&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt;uname -r | sed &lt;span style="color: #CC3300"&gt;&amp;quot;s/\(.*\)-\([^0-9]\+\)/\1/&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;#39;/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d&amp;#39;&lt;/span&gt; | grep 3.13.0-49&lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And if you happen to blow away all the kernel images (as I have done more than once),
get your current kernel version back by executing &lt;code&gt;uname -r&lt;/code&gt; and then reinstall it with:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install linux-image-x.x.x-xx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;x.x.x-xx&lt;/code&gt; is the kernel version number give by the &lt;code&gt;uname -r&lt;/code&gt; command.&lt;/p&gt;
&lt;h4&gt;SSD TRIM&lt;/h4&gt;
&lt;p&gt;Solid-state drives (SSD) have brought about a new way of managing storage.
SSDs have benefits like silent and cooler operation and a faster interface spec,
compared to hard drives but brings with it new methods of maintenance and management.
SSDs have a feature called TRIM.
This is essentially a method for reclaiming unused blocks on the device,
which may have been previously written, but no longer contain valid data and therefore,
can be returned to the general storage pool for reuse.&lt;/p&gt;
&lt;p&gt;Ubuntu Linux executes TRIM services via systemd timer service.
To check the existence and current status,
run &lt;code&gt;sudo systemctl list-timers --all&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# verify TRIM services are enabled&lt;/span&gt;
$ sudo systemctl list-timers --all
NEXT                         LEFT                LAST                         PASSED             UNIT
Sat 2020-03-21 22:33:01 EDT  3min 10s left       Sat 2020-03-21 21:33:27 EDT  56min ago          anacron.timer
Sun 2020-03-22 00:00:00 EDT  1h 30min left       Sat 2020-03-21 00:00:01 EDT  22h ago            logrotate.timer
Sun 2020-03-22 00:00:00 EDT  1h 30min left       Sat 2020-03-21 00:00:01 EDT  22h ago            man-db.timer
Sun 2020-03-22 00:10:05 EDT  1h 40min left       Sat 2020-03-21 12:40:56 EDT  9h ago             apt-daily.timer
Sun 2020-03-22 03:10:22 EDT  4h 40min left       Sun 2020-03-15 03:10:28 EDT  &lt;span style="color: #FF6600"&gt;6&lt;/span&gt; days ago         e2scrub_all.timer
Sun 2020-03-22 06:35:01 EDT  8h left             Sat 2020-03-21 06:19:49 EDT  16h ago            apt-daily-upgrade.timer
Sun 2020-03-22 08:23:14 EDT  9h left             Sat 2020-03-21 14:38:27 EDT  7h ago             motd-news.timer
Sun 2020-03-22 08:35:00 EDT  10h left            Sat 2020-03-21 20:09:27 EDT  2h 20min ago       mdmonitor-oneshot.timer
Sun 2020-03-22 18:07:19 EDT  19h left            Sat 2020-03-21 18:07:19 EDT  4h 22min ago       systemd-tmpfiles-clean.
Mon 2020-03-23 00:00:00 EDT  &lt;span style="color: #FF6600"&gt;1&lt;/span&gt; day 1h left       Mon 2020-03-16 00:00:01 EDT  &lt;span style="color: #FF6600"&gt;5&lt;/span&gt; days ago         fstrim.timer
Sun 2020-04-05 11:39:18 EDT  &lt;span style="color: #FF6600"&gt;2&lt;/span&gt; weeks &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; days left Sun 2020-03-01 11:52:26 EST  &lt;span style="color: #FF6600"&gt;2&lt;/span&gt; weeks &lt;span style="color: #FF6600"&gt;6&lt;/span&gt; days ago mdcheck_start.timer
n/a                          n/a                 n/a                          n/a                mdcheck_continue.timer
n/a                          n/a                 n/a                          n/a                snap-repair.timer
n/a                          n/a                 n/a                          n/a                snapd.refresh.timer
n/a                          n/a                 n/a                          n/a                snapd.snap-repair.timer

&lt;span style="color: #FF6600"&gt;15&lt;/span&gt; timers listed.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For additional information, check out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/17/1/solid-state-drives-linux-enabling-trim-ssds"&gt;Solid state drives in Linux: Enabling TRIM for SSDs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/20/2/trim-solid-state-storage-linux"&gt;Extend the life of your SSD drive with fstrim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;When the Hard Disk Goes South&lt;/h2&gt;
&lt;p&gt;For basic disk errors, you could try letting Linux heal itself with &lt;code&gt;fsck&lt;/code&gt; at boot up.
To do this, shut down the system with the -F option like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo shutdown -r -F now
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Linux reboots immediately and looks for disk errors with the &lt;a href="http://linux.die.net/man/8/fsck"&gt;&lt;code&gt;fsck&lt;/code&gt;&lt;/a&gt; command.
Confirm fixing disk errors by pressing "y" and "Enter" if prompted.&lt;/p&gt;
&lt;p&gt;If this fails, read these articles "&lt;a href="http://www.linuxjournal.com/article/193?page=0,0"&gt;Disk Maintenance under Linux (Disk Recovery&lt;/a&gt;",
&lt;a href="http://www.dedoimedo.com/computers/linux-data-recovery.html"&gt;How to recover partitions and data using Linux - Tutorial&lt;/a&gt;,
and then follow the instructions carefully!&lt;/p&gt;
&lt;h2&gt;Cleaning Up After a System Crash&lt;/h2&gt;
&lt;p&gt;At some point your system will crash and
you'll need to perform a manual repair of your filesystem.
When this happens, you'll reboot, the system stops, and
then indicates you must perform a manual repair of the filesystem.&lt;/p&gt;
&lt;h3&gt;Check &amp;amp; Repair Filesystem&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fsck&lt;/code&gt; (filesystem consistency check) is a command used to check filesystem
for consistency errors and repair them on Linux filesystems.
This tool is important for maintaining data integrity.
It should be run regularly,
especially after an unforeseen reboot (e.g. crash, power-outage).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You need to be "root" to use &lt;code&gt;fsck&lt;/code&gt; and
it is very important to unmount the filesystem before running it.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First take the system to &lt;a href="http://www.cyberciti.biz/tips/linux-changing-run-levels.html"&gt;runlevel one (single user mode)&lt;/a&gt;.
Unmount the filesystem, and then run &lt;code&gt;fsck&lt;/code&gt;.
For example, if the filesystem in question is &lt;code&gt;/home&lt;/code&gt; (or its device named &lt;code&gt;/dev/sdh&lt;/code&gt;) then type command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;umount /home
&lt;span style="color: #0099FF; font-style: italic"&gt;# or&lt;/span&gt;
umount /dev/sdh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once &lt;code&gt;fsck&lt;/code&gt; finished, remount the filesystem:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mount /home
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now start the check/repair via the command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;fsck -y /dev/sdh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;fsck&lt;/code&gt; will check the filesystem and ask which problems should be
fixed or corrected you don not use the &lt;code&gt;-y&lt;/code&gt; option.
Any files that are recovered are placed in
the &lt;code&gt;/home/lost+found&lt;/code&gt; directory by &lt;code&gt;fsck&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Once fsck finished, remount the filesystem:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mount /home
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Superblock Corruption&lt;/h3&gt;
&lt;p&gt;It is possible that &lt;code&gt;fsck&lt;/code&gt; will fail with a message telling you that
your filesystem has a bad &lt;a href="http://www.cyberciti.biz/tips/understanding-unixlinux-filesystem-superblock.html"&gt;superblock&lt;/a&gt;.
The filesystem's superblock contains information about the filesystems type, size, structure, etc.
This very important information, and if totally lost, its catastrophic.
Luckily, redundant superblock information is maintained,
and therefore, &lt;a href="http://linuxexpresso.wordpress.com/2010/03/31/repair-a-broken-ext4-superblock-in-ubuntu/"&gt;this too can be repaired&lt;/a&gt;.
You can find the location of the superblocks via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# find the location of superblocks&lt;/span&gt;
sudo umount /dev/sdh
sudo dumpe2fs /dev/sdh | grep -i superblock
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The superblock labeled as "Primary" is the culprit, so you choose another to take its place.
Pick another superblock number and use it as the &lt;code&gt;-b&lt;/code&gt; options parameter.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo e2fsck -y -b 32768 /dev/sdh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Effectively, your running a filesystem check but using an alternate superblock.
This could run for a very long time (like hours).
After it completes, corruption should be removed and the primary superblock restored.&lt;/p&gt;
&lt;h2&gt;When the Filesystem is Full&lt;/h2&gt;
&lt;p&gt;Sometimes after a system crash,
you'll get a message like "The volume filesystem root has only 0 bytes disk space remaining".
If you run the &lt;code&gt;df -h&lt;/code&gt; command, you will in fact see it.
This is almost certainly due to being actually out of space on the root filesystem,
and not some erroneous message by Linux, so you must dig to find the source of the problem.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; A deceptive source of filling your root filesystem
is when there is a failure/corruption of a disk drive mount on &lt;a href="http://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/html/mnt.html"&gt;&lt;code&gt;/mnt&lt;/code&gt;&lt;/a&gt;.
The disk maybe unmounted, but never the less,
programs can still successfully write to &lt;code&gt;/mnt&lt;/code&gt; directory structure.
In my case, I had my backup system using &lt;code&gt;/mnt/backup&lt;/code&gt; and it appear everything was find,
but in reality, data wasn't going to the external drive
but instead to the root filesystem under &lt;code&gt;/mnt&lt;/code&gt;, filling up the root filesystem.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To check for this, &lt;code&gt;umount&lt;/code&gt; any hard drives mounted to &lt;code&gt;/mnt&lt;/code&gt;.
This should remove the filesystem.
Now look for the filesystem, and if parts of it are still there,
this could very well be the source of your file space problem.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A useful command for finding what's eating up all the space is the &lt;a href="http://linoxide.com/linux-command/linux-du-command/"&gt;"disk usage" command, &lt;code&gt;du&lt;/code&gt;&lt;/a&gt;.
Running the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# 20 largest contributors to storage consumption&lt;/span&gt;
$ sudo du -ahx / | sort -rh | head -n 20

103G    /
73G /var
48G /var/log
46G /var/log/uvcdynctrl-udev.log
21G /usr
13G /var/lib
11G /var/var
11G /var/lib/mlocate
9.2G    /var/var/lib
9.1G    /usr/usr
8.7G    /var/var/lib/mlocate
5.1G    /usr/lib
4.0G    /Dropbox
3.9G    /Dropbox/Dropbox
3.7G    /usr/usr/lib
3.6G    /opt
3.0G    /var/var/lib/mlocate/mlocate.db
2.9G    /usr/usr/local
2.9G    /usr/local
2.8G    /usr/usr/local/lib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will give you the total amount of space used (&lt;code&gt;-a&lt;/code&gt;)
for all files not just directories,
without looking at other filesystems (&lt;code&gt;-x&lt;/code&gt;),
in human-readable numbers like "124M" (&lt;code&gt;-h&lt;/code&gt;),
and sort with the largest contributors.
Don't worry if it takes a while to complete, it could take on the order of minutes.&lt;/p&gt;
&lt;p&gt;Don't delete files without first knowing what they are, of course.
But, in general, you won't break your system if you delete files in the following directories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/tmp&lt;/code&gt; &amp;ensp;&amp;ensp;user temp data -- these are commonly all deleted every reboot anyway&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/tmp&lt;/code&gt; &amp;ensp;&amp;ensp;print spools, and other system temporary data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/cache/*&lt;/code&gt; &amp;ensp;&amp;ensp;this one can be dangerous, research first!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/root&lt;/code&gt; &amp;ensp;&amp;ensp;the root user's home directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to the locations above, the following locations are common culprits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/opt&lt;/code&gt; &amp;ensp;&amp;ensp;many third-party apps install here, and don't clean up after themselves&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/log&lt;/code&gt; &amp;ensp;&amp;ensp;log files can eat up a lot of space if there are repetitive errors&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Very Large Log Files&lt;/h4&gt;
&lt;p&gt;Linux log files found in &lt;code&gt;/var/log&lt;/code&gt; can be a source of your filesystem full.
These log files will quickly fill if there are problems within the system.&lt;/p&gt;
&lt;p&gt;To investigate further what may be the source your filesystem full,
find the top ten largest files and directories in  &lt;code&gt;/var/log&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# print number of bytes in the 10 largest files and directories in /var/log&lt;/span&gt;
$ sudo du -ahx /var/log/ | sort -rh | head -n 10

48G /var/log/
46G /var/log/uvcdynctrl-udev.log
1.9G    /var/log/journal/00f23270d58ed942283218b055d9d601
1.9G    /var/log/journal
121M    /var/log/journal/00f23270d58ed942283218b055d9d601/system@f8acccb9260a4855b984823647bc1539-000000000003a46a-00059d7019fadab5.journal
105M    /var/log/journal/00f23270d58ed942283218b055d9d601/system@f8acccb9260a4855b984823647bc1539-0000000000091ce3-00059d74a2fe9ea9.journal
105M    /var/log/journal/00f23270d58ed942283218b055d9d601/system@f8acccb9260a4855b984823647bc1539-0000000000075a69-00059d73c160def7.journal
89M /var/log/journal/00f23270d58ed942283218b055d9d601/system@f8acccb9260a4855b984823647bc1539-0000000000060b47-00059d72b9ef1167.journal
81M /var/log/journal/00f23270d58ed942283218b055d9d601/system@bf6951c9e0384a0b8c9b5aa044c06ddd-000000000004987b-0005a1c99c09dd09.journal
81M /var/log/journal/00f23270d58ed942283218b055d9d601/system@bf6951c9e0384a0b8c9b5aa044c06ddd-0000000000032c53-0005a03b276009d1.journal
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Its very clear that we have a very bad actor in the file
&lt;code&gt;/var/log/uvcdynctrl-udev.log&lt;/code&gt; which is 46G in size!
In fact, this is a &lt;a href="https://askubuntu.com/questions/177312/filesystem-filling-up-due-to-large-uvcydnctrl-udev-log-file"&gt;know problem&lt;/a&gt;, and judging from the files contents,
the problem was brought about due to my webcam (an old Logitech QuickCam Orbit/Sphere AF).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; We site referance above states
"This package not only creates this HUGE log files,
but it also causes Cheese and other web-cam apps to crash or work very badly
(Can't capture video at full resolution with Cheese or Guvcview?
REMOVE THIS PACKAGE AND IT WORKS AS IT SHOULD!)"
Recommended package removal is &lt;code&gt;sudo apt-get remove uvcdynctrl-udev&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To clean up this offending log file,
we can use the &lt;code&gt;: &amp;gt;&lt;/code&gt; operation to truncate the file to zero bytes.
For example, this will reduce the &lt;code&gt;syslog&lt;/code&gt; and &lt;code&gt;kern.log&lt;/code&gt; files to zero bytes:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# check the size of uvcdynctrl-udev.log&lt;/span&gt;
$ ls -lh /var/log/uvcdynctrl-udev.log
-rw-r--r-- &lt;span style="color: #FF6600"&gt;1&lt;/span&gt; root root 46G May &lt;span style="color: #FF6600"&gt;22&lt;/span&gt; 10:39 /var/log/uvcdynctrl-udev.log

&lt;span style="color: #0099FF; font-style: italic"&gt;# reduce the file uvcdynctrl-udev.log to zero bites&lt;/span&gt;
sudo su
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; /var/log
: &amp;gt; uvcdynctrl-udev.log
&lt;span style="color: #336666"&gt;exit&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# recheck the size of uvcdynctrl-udev.log&lt;/span&gt;
$ ls -lh /var/log/uvcdynctrl-udev.log
-rw-r--r-- &lt;span style="color: #FF6600"&gt;1&lt;/span&gt; root root &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; May &lt;span style="color: #FF6600"&gt;22&lt;/span&gt; 21:29 /var/log/uvcdynctrl-udev.log
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Deleted But Open Files&lt;/h4&gt;
&lt;p&gt;Another potential source of a full filesystem are large
&lt;a href="http://dustymabe.com/2012/01/22/recover-space-by-finding-deleted-files-that-are-still-held-open/"&gt;files left open but have been deleted&lt;/a&gt;.
On Linux, a file may be deleted (removed/unlinked) while a process has it open.
When this happens, the file is essentially invisible to other processes,
but it still takes on physical space on the drive.
Tools like &lt;code&gt;du&lt;/code&gt; will not see it.&lt;/p&gt;
&lt;p&gt;To find these deleted but open files, run the utility &lt;a href="http://www.thegeekstuff.com/2012/08/lsof-command-examples/"&gt;lsof&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# list open but deleted files&lt;/span&gt;
sudo lsof -nP | grep &lt;span style="color: #CC3300"&gt;&amp;#39;(deleted)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To find out how much space is taken up by these deleted but open files, run:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# total space used by open but deleted files&lt;/span&gt;
sudo lsof -nP | awk &lt;span style="color: #CC3300"&gt;&amp;#39;/deleted/ { sum+=$8 } END { print sum }&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;lsof&lt;/code&gt; will list all open files,
&lt;code&gt;awk&lt;/code&gt; then searches for the deleted files, and sums up the file sizes (in bytes).&lt;/p&gt;
&lt;p&gt;To get a list of process ID (PID) that own these file that are not redundant, use&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# process IDs of open but deleted files&lt;/span&gt;
sudo lsof -nP | grep &lt;span style="color: #CC3300"&gt;&amp;#39;(deleted)&amp;#39;&lt;/span&gt; | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $2 }&amp;#39;&lt;/span&gt; | sort | uniq
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's up to the filesystem driver to actually free the allocated space,
and that will usually happen only once all file descriptors referring to that file are released.
So you can't really reclaim the space, unless you make the application close the file.
The challenge is that the responsible applications are long gone due to the system crash.
How does one "delete" a file that the operating system believes has already been deleted?&lt;/p&gt;
&lt;p&gt;Actually we cannot remove the file as long as the file is still in use by a process.
But what we can do is: Getting the size down to 0 via Linux' &lt;a href="http://www.linuxjournal.com/article/8381"&gt;&lt;code&gt;/proc&lt;/code&gt;&lt;/a&gt; filesystem.
&lt;code&gt;/proc&lt;/code&gt; is very special in that it is also a virtual filesystem.
It's sometimes referred to as a process information pseudo-file system.
It doesn't contain 'real' files but runtime system information
(e.g. system memory, devices mounted, hardware configuration, etc).
&lt;a href="http://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/html/proc.html"&gt;Within &lt;code&gt;/proc&lt;/code&gt;, each of the numbered directories corresponds to an actual process ID&lt;/a&gt;.
Looking at the process table, you can match running processes with the associated process ID.
Or at least that what should be happening absent a system crash.
When the system crashed, the process is gone but the deleted but open file remains.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.unixwerk.eu/linux/deleted_files.html"&gt;To fix this problem&lt;/a&gt;, our strategy is to &lt;a href="http://www.cyberciti.biz/faq/truncate-large-text-file-in-unix-linux/"&gt;truncate&lt;/a&gt; these deleted but open files.
Your can truncate text file and make the size to zero using &lt;a href="http://bash.cyberciti.biz/guide/Redirection_of_standard_output"&gt;redirection&lt;/a&gt;:
For example, if &lt;code&gt;2746&lt;/code&gt; is the process ID with in &lt;code&gt;/proc&lt;/code&gt; with a deleted but open file,
the coresponding file must be truncate zero bytes.
This can be done by switching to full root mode, find the effected files, and truncate them.
For an example with a PID of &lt;code&gt;2746&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo -s
cd /proc/2746/fd
ls -l | grep &amp;#39;(deleted)&amp;#39; | awk &amp;#39;{ print $9 }&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The numbers produced by the last command is the file to be truncate.
For example, if one of the numbers produce is &lt;code&gt;12&lt;/code&gt;, then use this operation
to truncate the file to zero bytes&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;:&amp;gt; /proc/2746/fd/12
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could automate all of the above with this command line&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# for all open but deleted files associated with process 2746, trunctate the file to 0 bytes&lt;/span&gt;
&lt;span style="color: #003333"&gt;PID&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;2746&lt;/span&gt; ; &lt;span style="color: #336666"&gt;cd&lt;/span&gt; /proc/&lt;span style="color: #003333"&gt;$PID&lt;/span&gt;/fd ; ls -l | grep &lt;span style="color: #CC3300"&gt;&amp;#39;(deleted)&amp;#39;&lt;/span&gt; | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $9 }&amp;#39;&lt;/span&gt; | &lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;read&lt;/span&gt; FILE; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt; :&amp;gt; /proc/&lt;span style="color: #003333"&gt;$PID&lt;/span&gt;/fd/&lt;span style="color: #003333"&gt;$FILE&lt;/span&gt;; &lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, it's a good idea to do a &lt;a href="http://www.cyberciti.biz/faq/linux-force-fsck-on-the-next-reboot-or-boot-sequence/"&gt;forced full file system check&lt;/a&gt; on the next reboot.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# file system check on next reboot&lt;/span&gt;
sudo touch /forcefsck

&lt;span style="color: #0099FF; font-style: italic"&gt;# or&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# shutdown and do a file system check now&lt;/span&gt;
shutdown -rF now
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Sources&lt;/h2&gt;
&lt;p&gt;I primarily consulted the following sources to create this posting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/194651/why-use-apt-get-upgrade-instead-of-apt-get-dist-upgrade"&gt;Why use apt-get upgrade instead of apt-get dist-upgrade?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lifehacker.com/5817282/what-kind-of-maintenance-do-i-need-to-do-on-my-linux-pc"&gt;What Kind of Maintenance Do I Need to Do On My Linux PC?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/81042/is-system-cleanup-optimization-needed"&gt;Is system cleanup/optimization needed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxjournal.com/article/193?page=0,0"&gt;Disk Maintenance under Linux (Disk Recovery)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/Smartmontools"&gt;Smartmontools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/S.M.A.R.T."&gt;S.M.A.R.T. (Self-Monitoring, Analysis, and Reporting Technology)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.shadypixel.com/monitoring-hard-drive-health-on-linux-with-smartmontools/"&gt;Monitoring Hard Drive Health on Linux with smartmontools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/2793/how-do-i-remove-or-hide-old-kernel-versions-to-clean-up-the-boot-menu-or-free-sp"&gt;How do I remove or hide old kernel versions to clean up the boot menu or free space?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unixwerk.eu/linux/deleted_files.html"&gt;How to Get Rid of Deleted Open Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="How To"></category><category term="Linux"></category><category term="Raspberry Pi"></category><category term="Filesystem"></category><category term="Hygiene"></category></entry><entry><title>Network Backups via Rsync and Rsnapshot</title><link href="/posts/2014/Feb/08/network-backups-via-rsync-and-rsnapshot/" rel="alternate"></link><published>2014-02-08T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2014-02-08:posts/2014/Feb/08/network-backups-via-rsync-and-rsnapshot/</id><summary type="html">&lt;h2&gt;Rsync and Rsnapshot&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://thewirecutter.com/reviews/the-best-external-desktop-hard-drive/"&gt;
&lt;img class="img-rounded floatLeft" style="margin: 0px 8px; float: left" title="Seagate Backup Plus" alt="{{ site.author.name }}" src="/images/seagate-backup-plus-4-tb.jpg" width="30%" height="30%" /&gt;&lt;/a&gt;
I got a 4 Terabyte &lt;a href="http://www.seagate.com/external-hard-drives/desktop-hard-drives/backup-plus-desk/"&gt;Seagate Backup Plus&lt;/a&gt; hard drive as a Christmas present and
I plan to put it to use as a central backup for my Linux desktop, multiple Raspberry Pi,
my laptop, and anything else that my come along.
My plan is to keep things simple but I wish to do
regular hourly, daily, weekly, and monthly incremental backups.
This will give me the ability to recover files from the past,
but also to recover from a hardware failure or software install that has gone very badly.&lt;/p&gt;
&lt;p&gt;There are &lt;a href="http://www.techrepublic.com/blog/10-things/10-outstanding-linux-backup-utilities/"&gt;many backup tools&lt;/a&gt; you can pick from but
I wanted to stick with something basic, widely used, and simple.
&lt;a href="http://rsync.samba.org/"&gt;Rsync&lt;/a&gt; is one of the most widely used Linux backup solutions, and in fact,
it is often used by &lt;a href="http://en.wikipedia.org/wiki/Rsync"&gt;other backup tools&lt;/a&gt; as a foundational component.
Rsync stands for &lt;strong&gt;r&lt;/strong&gt;emote &lt;strong&gt;sync&lt;/strong&gt;hronization tool.
Rsync is a UN*X command line utility, containing a &lt;a href="http://wiki.r1soft.com/display/TP/rsync+Backup"&gt;special protocol and algorithm&lt;/a&gt;,
that synchronizes files and directories from one location to another
while minimizing data transfer by using fast incremental file transfers.
(rsync has also been ported to Microsoft Windows, Mac, and other operating systems.)
The first time, rsync sends all the data over the network to your backup machine.
The benefit comes the next time you backup.
Instead of sending all the files again, rsync only transfers files that have been changed.
If no files were changed, no files get transferred.
And when you want to recover data, you transfer just the specific files that you want back to your machine
(using rsync or scp or telnet or whatever).&lt;/p&gt;
&lt;p&gt;It creates a full-blown snapshot for each run,
but makes extensive use of &lt;a href="http://www.linfo.org/hard_link.html"&gt;hard links&lt;/a&gt;&lt;sup id="fnref:A"&gt;&lt;a class="footnote-ref" href="#fn:A" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; for files that haven’t changed,
thereby greatly reduce the disk space required.
That means you get efficient, lightweight,
incremental backups that look like exactly like full-blown copies (in every way).
This makes Rsnapshot a great choice for server backups.
This easy-to-use utility is commonly used for backing up data,
but can synchronize files for any other purpose you choose to use it for.
Remote sync can be better than other backup methods because of its speed,
and because it doesn’t require any special permissions to execute an rsync command.
With just a small knowledge of the command line, you can be backing up in no time with rsync.
You can also use &lt;a href="http://en.wikipedia.org/wiki/Cron"&gt;cron&lt;/a&gt; to periodically create backups.
To top it off, it also has a graphics front-end tool, call &lt;a href="http://www.opbyte.it/grsync/"&gt;grsync&lt;/a&gt;,
and &lt;a href="http://www.rsnapshot.org/"&gt;rsnapshot&lt;/a&gt; to create scheduled incremental backups, if so desired.&lt;/p&gt;
&lt;h2&gt;Install the Hard Drive&lt;/h2&gt;
&lt;p&gt;The physical install of the external &lt;a href="http://www.seagate.com/external-hard-drives/desktop-hard-drives/backup-plus-desk/"&gt;Seagate Backup Plus&lt;/a&gt; drive was simple, just plug it in.
The only caveat is to use a &lt;a href="http://en.wikipedia.org/wiki/USB_3.0"&gt;USB 3.0&lt;/a&gt; port on the Linux box to make sure you
get the fill speed out of the drive.
Using the supplied USB 3.0 cable is a must,
since a USB 2.0 cable will force the drive to operate at a slower speed.
Check out &lt;a href="http://www.diffen.com/difference/USB_2.0_vs_USB_3.0"&gt;USB 2.0 vs USB 3.0&lt;/a&gt; to understand further.&lt;/p&gt;
&lt;p&gt;Under my Ubuntu system, this external disk's file system will be automatically mounted
located at &lt;code&gt;/media/jeff/"Seagate Backup Plus Drive"&lt;/code&gt;.
This nice and easy, but the disk is formated as a &lt;a href="http://en.wikipedia.org/wiki/NTFS"&gt;NTFS (New Technology File System)&lt;/a&gt;
which is a proprietary file system developed by Microsoft.
For Linux compatibility reasons,
I want the disk to support a &lt;a href="https://help.ubuntu.com/community/LinuxFilesystemsExplained"&gt;Linux ext3 file system&lt;/a&gt;.
This will requiring re-formating and mounting the new disk.
To do this, I followed the procedures outlined in
in the article "&lt;a href="http://www.itechlounge.net/2012/01/linux-partition-and-format-external-hard-drive-as-ext3-filesystem/"&gt;Partition and format external hard drive as ext3 filesystem&lt;/a&gt;".
I created a mount point called &lt;code&gt;/mnt/backup&lt;/code&gt; for the hard drive and
place it in the &lt;code&gt;fstab&lt;/code&gt; file so its mounted every time at boot up.&lt;/p&gt;
&lt;h2&gt;Install rsync, grsync, and rsnapshot&lt;/h2&gt;
&lt;p&gt;Rsync should already be installed on most Linux system.
You can install it, and the &lt;a href="http://www.opbyte.it/grsync/"&gt;grsync&lt;/a&gt; &amp;amp; &lt;a href="http://www.rsnapshot.org/"&gt;rsnapshot&lt;/a&gt; tools, using this command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install rsync grsync rsnapshot
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Select Backup Storage Location&lt;/h2&gt;
&lt;p&gt;I want to create directory for the backups that are readable by all users, but writable by only root.
To do this, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mkdir /mnt/backup
chmod a+rwx /mnt/backup
chmod o-w /mnt/backup
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Getting Familiar with rsync and Preparatory Work&lt;/h2&gt;
&lt;p&gt;In this section, we'll learn about some of rsync's features and get some foundational stuff done.&lt;/p&gt;
&lt;h3&gt;Dry Running a rsync Command&lt;/h3&gt;
&lt;p&gt;Rsync has the potential of really messing up things
and then doing an undo can be a tedious job.
Rsync can be run in a "dry run" mode to show you the output of the command.
For example, this will make a copy of &lt;code&gt;~/tmp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;rsync -azv --dry-run /home/jeff/tmp/ /home/jeff/tmp/copy-of-tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the output shows exactly what you want to do,
then you can remove &lt;code&gt;–dry-run&lt;/code&gt; option from your command and re-run it for real.&lt;/p&gt;
&lt;h3&gt;Test rsync on Local System&lt;/h3&gt;
&lt;p&gt;In an effort to try out rsync in the raw,
I'll create some ad hoc backups of my desktop's home directory.
I want to preserves file timestamp, symbolic links, permissions, and owner/group.
This can be done using the rsync option &lt;code&gt;-a&lt;/code&gt;.
Additional options used are &lt;code&gt;-z&lt;/code&gt; to enable compression,
and &lt;code&gt;-v&lt;/code&gt; to provide verbose status output.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv /home/jeff/src/rtl-sdr/ /mnt/backup/rsync-test1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;sudo&lt;/code&gt; is required since I have made &lt;code&gt;/mnt/backup&lt;/code&gt; writable only by root.
The presence or absence of the terminating &lt;code&gt;/&lt;/code&gt; within the rsync command line is important.
The following two commands produce different results:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv /home/jeff/Documents/&lt;span style="color: #CC3300"&gt;&amp;quot;My Maps&amp;quot;&lt;/span&gt;/ /mnt/backup/rsync-test2
sudo rsync -azv /home/jeff/Documents/&lt;span style="color: #CC3300"&gt;&amp;quot;My Maps&amp;quot;&lt;/span&gt; /mnt/backup/rsync-test3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first takes the sources files and subdirectories and writes them directly to the destination directory.
The second does the same but the files and directories go within a directory called &lt;code&gt;My Maps&lt;/code&gt;.
This is an important subtlety to remember!&lt;/p&gt;
&lt;h3&gt;Testing rsync on a Remote System&lt;/h3&gt;
&lt;p&gt;In this case, my Linux desktop machine is the local system and RPi is the remote machine.
The Linux desktop has the external drive used for backups.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv pi@RedRPi:/home/pi/src/nRF24L01 /mnt/backup/rsync-test4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will first prompt you for a password for the &lt;code&gt;sudo&lt;/code&gt;.
You will get a subsequent prompt for the login as &lt;code&gt;pi&lt;/code&gt; on the &lt;code&gt;RedRPi&lt;/code&gt; system,
and then the data will be transfered to the external drive.
But when performing beyond your the firewall, you should use ssh&lt;sup id="fnref:A1"&gt;&lt;a class="footnote-ref" href="#fn:A1" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;, as shown below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh pi@RedRPi:/home/pi/src/ /mnt/backup/rsync-test5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To setup ssh with rsync so that it can run automatically without prompting for the password,
checkout "&lt;a href="http://www.thegeekstuff.com/2011/07/rsync-over-ssh-without-password/"&gt;How to Setup Rsync with SSH on UNIX / Linux (rsync without password)&lt;/a&gt;".
This is sometime you will want to do to support automatic, unattended backups.
Basically, your going to do the following on the machine that will store the backups&lt;sup id="fnref:B"&gt;&lt;a class="footnote-ref" href="#fn:B" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;
mkdir .ssh
chmod &lt;span style="color: #FF6600"&gt;755&lt;/span&gt; .ssh
ssh-keygen -N &lt;span style="color: #CC3300"&gt;&amp;quot;&amp;quot;&lt;/span&gt; -f /&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa
ssh-copy-id -i /&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa.pub pi@RedRPi
ssh-copy-id -i /&lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa.pub pi@BlackRPi
sudo bash
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; /root
mkdir .ssh
chmod &lt;span style="color: #FF6600"&gt;755&lt;/span&gt; .ssh
ssh-keygen -N &lt;span style="color: #CC3300"&gt;&amp;quot;&amp;quot;&lt;/span&gt; -f /root/.ssh/id_rsa
ssh-copy-id -i /root/.ssh/id_rsa.pub pi@RedRPi
ssh-copy-id -i /root/.ssh/id_rsa.pub pi@BlackRPi
&lt;span style="color: #336666"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now repeat the example above:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh pi@RedRPi:/home/pi/src/ /mnt/backup/rsync-test5a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should no longer be promoted for a password, except by the first &lt;code&gt;sudo&lt;/code&gt;.
(Once rsync is run under a root login, this &lt;code&gt;sudo&lt;/code&gt; will no longer be required).&lt;/p&gt;
&lt;h3&gt;Exclude Files / Directories from rsync&lt;/h3&gt;
&lt;p&gt;In a typical backup situation,
you might want to exclude one or more files (or directories) from the backup.
You might also want to exclude a specific file type from rsync.
Let's run a backup of &lt;code&gt;pi@RedRPi:/home/pi/&lt;/code&gt;
but leave out the &lt;code&gt;tmp&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; directories.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh --exclude &lt;span style="color: #CC3300"&gt;&amp;#39;tmp&amp;#39;&lt;/span&gt; --exclude &lt;span style="color: #CC3300"&gt;&amp;#39;src&amp;#39;&lt;/span&gt; pi@RedRPi:/home/pi/ /mnt/backup/rsync-test6
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could also create a file that contains the exclude list &lt;code&gt;tmp&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt;.
This would look like:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv --exclude-from &lt;span style="color: #CC3300"&gt;&amp;#39;exclude-list.txt&amp;#39;&lt;/span&gt; pi@RedRPi:/home/pi/ /mnt/backup/rsync-test6
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Running rsync as Root&lt;/h3&gt;
&lt;p&gt;The above examples works fine as long as the source login (in this case &lt;code&gt;pi&lt;/code&gt; on the &lt;code&gt;RedRPi&lt;/code&gt; system)
has the appropriate permissions.
For example, this will fail:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh  pi@RedRPi:/root/ /mnt/backup/rsync-test7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It fails because the user &lt;code&gt;pi&lt;/code&gt; doesn't have &lt;code&gt;root&lt;/code&gt; permissions
and the directory &lt;code&gt;/root/&lt;/code&gt; can only be entered by the user &lt;code&gt;root&lt;/code&gt;.
You might want to attempt to do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh root@RedRPi:/root/ /mnt/backup/rsync-test7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now your asking to login to the remote system as user root.
In this case you'll be prompted to provide the RedRPi's root password,
but the root login may not have a password&lt;sup id="fnref:C"&gt;&lt;a class="footnote-ref" href="#fn:C" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The way around all this is to use the &lt;code&gt;--rsync-path&lt;/code&gt; option for rsync.
This will work:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh --rsync-path&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;sudo rsync&amp;quot;&lt;/span&gt; pi@RedRPi:/root /mnt/backup/rsync-test7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;--rsync-path&lt;/code&gt; parameter specifies a path to rsync on the remote machine.
So &lt;code&gt;rsync&lt;/code&gt; will be executed using &lt;code&gt;sudo&lt;/code&gt;, giving it root user access privileges,
and now the use of the &lt;code&gt;pi&lt;/code&gt; login will gain access to the &lt;code&gt;/root&lt;/code&gt; directory.
That is, on the remote machine, rsync is being run as root!
This all requires the proper set-up of ssh with password-less access, discussed earlier.&lt;/p&gt;
&lt;h3&gt;Configuration of ssh to Eliminate Password Prompt and Warning Messages&lt;/h3&gt;
&lt;p&gt;Proper configuration of ssh will be needed to assure routine warning messages&lt;sup id="fnref:D"&gt;&lt;a class="footnote-ref" href="#fn:D" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;
don't disrupt the smooth operation of rsync / rsnapshot.&lt;/p&gt;
&lt;p&gt;With the SSH protocol,
it is the SSH client's responsibility to verify the identity
of the host to which it is connecting.
The host identify is established by its SSH host key.
Typically, the host key is auto-created during initial SSH installation setup.&lt;/p&gt;
&lt;p&gt;SSH protocol is designed to verify the host key against a local file
(that file being &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;)
to ensure the integrity of the remote server.
By default, the user is prompted to accept a new key or warned when the host key changes
(like after a server upgrade,
DHCP server has given that IP address to a different machine from the one that had it last time).
This is a nice defense against
&lt;a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack"&gt;Man-In-The-Middle attacks&lt;/a&gt;,
but it plays havoc on scripts.
If a prompt occurs, your script stops and waits for input.&lt;/p&gt;
&lt;p&gt;There are two ways we can eliminate this.
One is at the script level and the other is at the system level.
If we want to continue to prompt for host key checks,
then we can add the configuration to our script.
This can be done with OpenSSH’s &lt;code&gt;-o&lt;/code&gt; option.
Here’s an example in which we run the hostname command on a remote server:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;ssh -o &lt;span style="color: #003333"&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;no &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -o &lt;span style="color: #003333"&gt;UserKnownHostsFile&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/dev/null &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -q user@host /usr/bin/hostname -s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To set this configuration system-wide,
place these entries in &lt;code&gt;ssh_config&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;StrictHostKeyChecking no
UserKnownHostsFile /dev/null
LogLevel QUIET
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For our backup utility, we need to add the appropriate parameters to one of the
&lt;code&gt;ssh&lt;/code&gt; configuration files listed below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;System-wide SSH client configuration files (i.e. /etc/ssh/ssh_config -&lt;/strong&gt; This files set the default configuration for all users of OpenSSH clients on that desktop/laptop and it must be readable by all users on the system.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User-specific SSH client configuration files (i.e. $HOME/.ssh/config -&lt;/strong&gt; This is user's own configuration file which, overrides the settings in the global client configuration file, &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add this to &lt;code&gt;/etc/ssh/ssh_conf&lt;/code&gt; file to disable the host key checking
and the warnings&lt;sup id="fnref:E"&gt;&lt;a class="footnote-ref" href="#fn:E" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; for all users who access systems who's names end in 'RPi'.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Host *RPi
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, add the following to the &lt;code&gt;$HOME/.ssh/config&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;UserKnownHostsFile  ~/.ssh/known_hosts
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make these changes active by restarting the ssh services via the command &lt;code&gt;sudo service ssh restart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With ssh properly configured, a command like&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -azv -e ssh --rsync-path&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;sudo rsync&amp;quot;&lt;/span&gt; pi@BlackRPi:/root/.rpi-firmware/ /mnt/backup/rsync-test8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This should run without requesting passwords, it will run on the remote as the root user,
and warning messages about differing "ECDSA host key" should not get in your way.
It will run without user intervention; just what we need for automated backups!&lt;/p&gt;
&lt;h3&gt;Creating Backup Users on Remote Servers&lt;/h3&gt;
&lt;p&gt;On all the remote systems (i.e. RedRPi and BlackRPi) you need to create the login
and establish its ssh authentication keys.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo adduser backup_user --disabled-password -u 400
sudo mkdir /home/backup_user/.ssh
sudo chmod &lt;span style="color: #FF6600"&gt;700&lt;/span&gt; /home/backup_user/.ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now create a rsync wrapper script:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /home/backup_user/bin
sudo vim /home/backup_user/bin/rsync-wrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enter the following in this file to create the script:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/bin/bash&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# This script is a wrapper around rsync, so that rsync can run as root,&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and at the same time, eliminate any security risks.&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Location of the Log file&lt;/span&gt;
&lt;span style="color: #003333"&gt;LOG&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/home/backup_user/backup.log&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Place in the log file information concerning the execution of this script&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;rsync wrapper script executed on `date`&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;options passed to rsync: &amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$@&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;---------------------------------------------&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Now execute the script&lt;/span&gt;
/usr/bin/sudo /usr/bin/rsync &lt;span style="color: #003333"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now change the mode and owner of this file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo chown backup_user:backup_user /home/backup_user/*
sudo chown backup_user:backup_user /home/backup_user/bin/rsync-wrapper.sh
sudo chmod &lt;span style="color: #FF6600"&gt;754&lt;/span&gt; /home/backup_user/bin/rsync-wrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;backup_user&lt;/code&gt; is not root, and therefore, &lt;code&gt;rsync&lt;/code&gt;
can't freely move through the whole directory system , write files, and such.
Linux does provide a way to give a user limited super-user privileges.
To do this for the &lt;code&gt;backup_user&lt;/code&gt;, configure &lt;code&gt;sudo&lt;/code&gt;
such that it can run the &lt;code&gt;rsync&lt;/code&gt;tool
as root without being being prompted for a password.
For security reasons, we what only the these tools to have &lt;code&gt;sudo&lt;/code&gt; privileges.
Using &lt;a href="http://www.sudo.ws/sudo/sudoers.man.html"&gt;&lt;code&gt;visudo&lt;/code&gt;&lt;/a&gt; command, edit the &lt;a href="http://www.sudo.ws/visudo.man.html"&gt;&lt;code&gt;/etc/sudoers&lt;/code&gt;&lt;/a&gt;&lt;sup id="fnref:F"&gt;&lt;a class="footnote-ref" href="#fn:F" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt; file by adding the following
to the bottom of the file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# allows this user to not need a password to sudo the specified command(s)&lt;/span&gt;
backup_user    &lt;span style="color: #003333"&gt;ALL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;NOPASSWD:    /usr/bin/rsync
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating Backup Users for Backup Server&lt;/h3&gt;
&lt;p&gt;On the host server (i.e. desktop) you need to create the login
(with a UID of less that 500&lt;sup id="fnref:G"&gt;&lt;a class="footnote-ref" href="#fn:G" rel="footnote"&gt;8&lt;/a&gt;&lt;/sup&gt;)
which will run the rsync / rsnapshot utilities
and establish its &lt;code&gt;ssh&lt;/code&gt; authentication keys.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo adduser backup_user -u 400
sudo chown backup_user:backup_user /home/backup_user/*
sudo su backup_user
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~
ssh-keygen -N &lt;span style="color: #CC3300"&gt;&amp;quot;&amp;quot;&lt;/span&gt; -f ~/.ssh/id_rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub backup_user@RedRPi
ssh-copy-id -i ~/.ssh/id_rsa.pub backup_user@BlackRPi
&lt;span style="color: #336666"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And just like the remote systems &lt;code&gt;backup_user&lt;/code&gt; is not root,
and therefore, the utilities it uses
(&lt;code&gt;rsync&lt;/code&gt; and &lt;code&gt;rsnapshot&lt;/code&gt;)
can't freely move through the whole directory system , write files, and such.
Again using the &lt;a href="http://www.sudo.ws/sudo/sudoers.man.html"&gt;&lt;code&gt;visudo&lt;/code&gt;&lt;/a&gt; command,
edit the &lt;a href="http://www.sudo.ws/visudo.man.html"&gt;&lt;code&gt;/etc/sudoers&lt;/code&gt;&lt;/a&gt; file by adding the following
to the bottom of the file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# allows this user to not need a password to sudo the specified command(s)&lt;/span&gt;
backup_user    &lt;span style="color: #003333"&gt;ALL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;NOPASSWD:    /usr/bin/rsync
backup_user    &lt;span style="color: #003333"&gt;ALL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;NOPASSWD:    /usr/bin/rsnapshot
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configuring rsnapshot for Incremental Backups&lt;/h2&gt;
&lt;p&gt;Our mission here is to use rsnapshot to create backups of both normal
and protected/restricted files from one server to another over &lt;code&gt;ssh&lt;/code&gt;
without enabling remote root access to either server while
maintaining original file attributes and permissions&lt;sup id="fnref:H"&gt;&lt;a class="footnote-ref" href="#fn:H" rel="footnote"&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Where rsync does the actual file backups, rsnapshot is responsible for the overall management of the backups.
In my case, I want it to schedule a nested and rotating series of incremental backups for my systems.
I want the schedule and the backup increments to be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every 4 hours, create an incremental backup, and store all of them for the past 24 hours&lt;/li&gt;
&lt;li&gt;Create a daily incremental backups (from the last hourly backup), and store a daily backup for the past 7 days&lt;/li&gt;
&lt;li&gt;Create a weekly incremental backups, and store them for the past 4 weeks&lt;/li&gt;
&lt;li&gt;Create monthly incremental backups, and store for the past 3 months&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When making the backups, the contents of &lt;code&gt;/dev&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/sys&lt;/code&gt;, &lt;code&gt;/tmp&lt;/code&gt;, and &lt;code&gt;/run&lt;/code&gt; should be excluded
because they are populated at boot (while the directories themselves are not created).
The file &lt;code&gt;/lost+found&lt;/code&gt; is filesystem-specific and doesn't need to be copied.
(Note: If you plan on backing up your system somewhere other than &lt;code&gt;/mnt&lt;/code&gt; or &lt;code&gt;/media&lt;/code&gt;
don't forget to add it to the list, to avoid an infinite loop.)&lt;/p&gt;
&lt;p&gt;rsnapshot also provides a non-command-line method for excluding file, which is what I'm using.
Specifically, I have defined exclusion files for Linux and Windows based systems.
For Linux, the file is called &lt;code&gt;rsync-exclude-desktop&lt;/code&gt; and &lt;code&gt;rsync-exclude-RPi&lt;/code&gt; and look something like this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;- /var/lib/pacman/sync/*
- /lost+found
- /media/*
- /cdrom/*
- /proc/*
- /mnt/*
- /run/*
- /tmp/*
- /sys/*
- /dev/*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For Windows, the file is called &lt;code&gt;rsync-exclude-windows&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;- /cygdrive/c/System\ Volume\ Information/*
- /cygdrive/c/Windows/System32/winevt/*
- /cygdrive/c/Windows/System32/catroot/*
- /cygdrive/c/Windows/System32/catroot2/*
- /cygdrive/c/Windows/System32/config/*
- /cygdrive/c/Windows/ServiceProfiles/*
- /cygdrive/c/ProgramData/Microsoft/*
- /cygdrive/c/Windows/System32/wdi/*
- /cygdrive/c/Windows/System32/wfp/*
- /cygdrive/c/Windows/System32/sru/*
- /cygdrive/c/proc/sys/Device/*
- /cygdrive/c/proc/registry*
- /cygdrive/c/Windows/Logs/*
- /cygdrive/c/hiberfil.sys
- /cygdrive/c/pagefile.sys
- /cygdrive/c/swapfile.sys
- /proc/sys/Sessions/
- UsrClass.dat
- ntuser*
- NTUSER*
- *Cache*
- *cache*
- *Lock*
- *lock*
- *LOG*
- *log*
- *.tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To implement the above backup rules (and many others),
you need to edit a configuration file&lt;sup id="fnref:I"&gt;&lt;a class="footnote-ref" href="#fn:I" rel="footnote"&gt;10&lt;/a&gt;&lt;/sup&gt; located at &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt;.
&lt;strong&gt;Note: This file must only have tabs between arguments. No spaces.&lt;/strong&gt;
(It's a quirk of rsnapshot that it requires tabs.)
The configuration elements I edited are below
(&lt;code&gt;/usr/share/doc/rsnapshot/examples/rsnapshot.conf.default.gz&lt;/code&gt;
can be used as a starting point):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# location where backups will be stored&lt;/span&gt;
snapshot_root   /mnt/backup/

&lt;span style="color: #0099FF; font-style: italic"&gt;# rsync command executed on the remote system&lt;/span&gt;
cmd_rsync   /usr/bin/rsync

&lt;span style="color: #0099FF; font-style: italic"&gt;# incremental backup rules&lt;/span&gt;
retain      hourly  6
retain      daily   7
retain      weekly  4
retain      monthly 3

&lt;span style="color: #0099FF; font-style: italic"&gt;# rsnapshot&amp;#39;s log file&lt;/span&gt;
logfile /var/log/rsnapshot.log

&lt;span style="color: #0099FF; font-style: italic"&gt;# All rsync commands have at least these options set.&lt;/span&gt;
rsync_short_args    -aev
rsync_long_args --delete --numeric-ids --relative --delete-excluded

&lt;span style="color: #0099FF; font-style: italic"&gt;# ssh args passed&lt;/span&gt;
ssh_args    -i /home/backup_user/.ssh/id_rsa

&lt;span style="color: #0099FF; font-style: italic"&gt;# systems to be backed up, what high level directory name is to be used&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and the additional arguments to pass to rsync&lt;/span&gt;
backup  /   desktop/    &lt;span style="color: #003333"&gt;exclude_file&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/home/backup_user/rsync-exclude-desktop
backup  backup_user@RedRPi:/    RedRPi/ &lt;span style="color: #003333"&gt;exclude_file&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/home/backup_user/rsync-exclude-RPi,+rsync_long_args&lt;span style="color: #555555"&gt;=&lt;/span&gt;--rsync-path&lt;span style="color: #555555"&gt;=&lt;/span&gt;/home/backup_user/bin/rsync-wrapper.sh
backup  backup_user@BlackRPi:/  BlackRPi/   &lt;span style="color: #003333"&gt;exclude_file&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/home/backup_user/rsync-exclude-RPi,+rsync_long_args&lt;span style="color: #555555"&gt;=&lt;/span&gt;--rsync-path&lt;span style="color: #555555"&gt;=&lt;/span&gt;/home/backup_user/bin/rsync-wrapper.sh
backup  Sara@SaraPC:/   SaraPC/ &lt;span style="color: #003333"&gt;exclude_file&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/home/backup_user/rsync-exclude-windows,+rsync_long_args&lt;span style="color: #555555"&gt;=&lt;/span&gt;--fake-super
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my backup scheme, I have several remote systems (i.e. RedRPi, BlackRPi, and SaraPC),
and a backup server itself (i.e. desktop).
All system will use a common user called &lt;code&gt;backup_user&lt;/code&gt;,
who's only purpose is to support the backup process.
From the backup system, we'll be able to logon to each remote system using
the &lt;code&gt;backup_user&lt;/code&gt; ssh public key.
The main trick is to set sudoers on the remote system such that it allow rsync
root access to &lt;code&gt;backup_user&lt;/code&gt;,
and it tell rsnapshot to use additional parameters when calling rsync.
This all required to maintain the security of the remote systems, and was discussed in the text above.&lt;/p&gt;
&lt;h2&gt;Testing rsnapshot&lt;/h2&gt;
&lt;p&gt;rsnapshot provides an easy way to check that your configuration file doesn't contain any syntax errors.
Simply type:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsnapshot configtest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If all is well, it will say ‘syntax ok’.
If there is a problem, it will spit errors at you.
If you get errors, check that you have separated items in the file using tabs
(spaces are not allowed in the configuration file).&lt;/p&gt;
&lt;p&gt;The final step to test your configuration is to run rsnapshot in test mode, using the &lt;code&gt;-t&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsnapshot -t hourly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This tells rsnapshot to simulate an "hourly" backup.
It should print out the commands it will perform when it runs for real.
If all is well, then remove the &lt;code&gt;-t&lt;/code&gt; and run it for real to create the initial backup.
This initial run is likely to run a long time, and shouldn't be do via cron as discussed below.&lt;/p&gt;
&lt;h2&gt;Scheduling (Automating) Backups in crontab&lt;/h2&gt;
&lt;p&gt;Linux &lt;a href="http://en.wikipedia.org/wiki/Cron"&gt;cron&lt;/a&gt;&lt;sup id="fnref:J"&gt;&lt;a class="footnote-ref" href="#fn:J" rel="footnote"&gt;11&lt;/a&gt;&lt;/sup&gt; is used to schedule commands to be executed periodically.
You can setup commands or scripts, which will be repeatedly run at a set time.&lt;/p&gt;
&lt;p&gt;For crontab, I created a wrapper script and
placed it in &lt;code&gt;/home/backup_user/bin/rsnapshot-wrapper.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/bin/bash&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# This script is a wrapper around rsnapshot, so status information is logged&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and notification are made via Pushover app.  It also makes sure the log file&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# doesn&amp;#39;t grow too large.&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Capture scripts start time&lt;/span&gt;
&lt;span style="color: #003333"&gt;STARTTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%s&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Location of the Log file&lt;/span&gt;
&lt;span style="color: #003333"&gt;LOG&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/home/backup_user/backup.log&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Number of lines in the log file required to trigger it&amp;#39;s truncation&lt;/span&gt;
&lt;span style="color: #003333"&gt;MAXLINES&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;7000

&lt;span style="color: #0099FF; font-style: italic"&gt;# Number of lines remaining in the log file after its truncated&lt;/span&gt;
&lt;span style="color: #003333"&gt;MINLINES&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;2000

&lt;span style="color: #0099FF; font-style: italic"&gt;# Calculate the size of the Log file&lt;/span&gt;
&lt;span style="color: #003333"&gt;LOGSIZE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$(&lt;/span&gt; wc &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt; | awk &lt;span style="color: #CC3300"&gt;&amp;#39;{ print $1 }&amp;#39;&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;)&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Place in the log file information concerning the execution of this script&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; -e &lt;span style="color: #CC3300"&gt;&amp;quot;\n\n+++++ rsnapshot script started on `date` +++++&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;options passed to rsnapshot: &amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$@&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Now execute the script&lt;/span&gt;
/usr/bin/sudo /usr/bin/rsnapshot &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$@&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt; 2&amp;gt;&amp;amp;1
&lt;span style="color: #003333"&gt;EXITSTATUS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$?&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Capture scripts end time and calculate run time&lt;/span&gt;
&lt;span style="color: #003333"&gt;ENDTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%s&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;
&lt;span style="color: #003333"&gt;INTERVAL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$((&lt;/span&gt;ENDTIME &lt;span style="color: #555555"&gt;-&lt;/span&gt; STARTTIME&lt;span style="color: #006699; font-weight: bold"&gt;))&lt;/span&gt;
&lt;span style="color: #003333"&gt;RUNTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$((&lt;/span&gt;&lt;span style="color: #003333"&gt;$INTERVAL&lt;/span&gt; &lt;span style="color: #555555"&gt;/&lt;/span&gt; &lt;span style="color: #FF6600"&gt;60&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;))&lt;/span&gt;&lt;span style="color: #CC3300"&gt; min. &lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$((&lt;/span&gt;&lt;span style="color: #003333"&gt;$INTERVAL&lt;/span&gt; &lt;span style="color: #555555"&gt;%&lt;/span&gt; &lt;span style="color: #FF6600"&gt;60&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;))&lt;/span&gt;&lt;span style="color: #CC3300"&gt; sec.&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Place time-stamped completion message in the Log&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;rsnapshot exited with status &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXITSTATUS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;+++++ rsnapshot ran&amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$RUNTIME&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;and script completed on `date` +++++&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Send status notification to Pushover app&lt;/span&gt;
/home/jeff/bin/apprise -t &lt;span style="color: #CC3300"&gt;&amp;quot;Incremental Backup Status&amp;quot;&lt;/span&gt; -m &lt;span style="color: #CC3300"&gt;&amp;quot;Filesystem backup took &lt;/span&gt;&lt;span style="color: #003333"&gt;$RUNTIME&lt;/span&gt;&lt;span style="color: #CC3300"&gt; and completed on `date` with exit status &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXITSTATUS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;.  Log file &lt;/span&gt;&lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;&lt;span style="color: #CC3300"&gt; has &lt;/span&gt;&lt;span style="color: #003333"&gt;$LOGSIZE&lt;/span&gt;&lt;span style="color: #CC3300"&gt; lines.&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Truncate the log file if needed&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; &lt;span style="color: #555555"&gt;[&lt;/span&gt; &lt;span style="color: #003333"&gt;$LOGSIZE&lt;/span&gt; -ge &lt;span style="color: #003333"&gt;$MAXLINES&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;then&lt;/span&gt;
    &lt;span style="color: #003333"&gt;LINECUT&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;expr &lt;span style="color: #003333"&gt;$LOGSIZE&lt;/span&gt; - &lt;span style="color: #003333"&gt;$MINLINES&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;
    sed -i &lt;span style="color: #CC3300"&gt;&amp;quot;1,&lt;/span&gt;&lt;span style="color: #003333"&gt;$LINECUT&lt;/span&gt;&lt;span style="color: #CC3300"&gt; d&amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
    sed -i &lt;span style="color: #CC3300"&gt;&amp;quot;1i ////////////////  File truncated here on `date`. //////////////// &amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sometime, such as when upgrading my operating system,
I want to perform a true full backup.
That is, a true copy and not using
&lt;a href="http://www.linfo.org/hard_link.html"&gt;hard links&lt;/a&gt; to files that haven't changed.
To do this, I create the script below,
which even prompts me for the system I wish to backup.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/bin/bash&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;#set -x&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# arguments to be used with rsync&lt;/span&gt;
&lt;span style="color: #003333"&gt;ARGS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;-aev --delete --numeric-ids --relative --delete-excluded&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;EXCL_DESKTOP&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;--exclude-from=/home/backup_user/rsync-exclude-desktop --exclude=mnt/backup&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;EXCL_RPI&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;--exclude-from=/home/backup_user/rsync-exclude-RPi&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;EXCL_WINDOWS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;--exclude-from=/home/backup_user/rsync-exclude-windows&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;REMOTE_WRAPPER&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;--rsync-path=/home/backup_user/bin/rsync-wrapper.sh&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;SSH_ARGS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;--rsh=\&amp;quot;/usr/bin/ssh -o CheckHostIP=no -i /home/backup_user/.ssh/id_rsa\&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Location of the Log file&lt;/span&gt;
&lt;span style="color: #003333"&gt;LOG&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/home/backup_user/backup.log&amp;quot;&lt;/span&gt;

&lt;span style="color: #003333"&gt;DIR&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%Y_%b_%d_%H_%M&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; true; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt;
    &lt;span style="color: #336666"&gt;read&lt;/span&gt; -p &lt;span style="color: #CC3300"&gt;&amp;quot;What would you like to backup? (&amp;#39;desktop&amp;#39;, &amp;#39;RedRPi&amp;#39;, &amp;#39;BlackRPi&amp;#39;, or &amp;#39;SaraPC&amp;#39;)  &amp;quot;&lt;/span&gt; answer
    &lt;span style="color: #006699; font-weight: bold"&gt;case&lt;/span&gt; &lt;span style="color: #003333"&gt;$answer&lt;/span&gt; in
        &lt;span style="color: #CC3300"&gt;&amp;#39;desktop&amp;#39;&lt;/span&gt; &lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #003333"&gt;ARGUMENTS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXCL_DESKTOP&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;SOURCE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/.&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;DESTINATION&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/mnt/backup/full-backup/desktop/&lt;/span&gt;&lt;span style="color: #003333"&gt;$DIR&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            break;;
        &lt;span style="color: #CC3300"&gt;&amp;#39;RedRPi&amp;#39;&lt;/span&gt; &lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #003333"&gt;ARGUMENTS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXCL_RPI&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$REMOTE_WRAPPER&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$SSH_ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;SOURCE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;backup_user@RedRPi:/&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;DESTINATION&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/mnt/backup/full-backup/RedRPi/&lt;/span&gt;&lt;span style="color: #003333"&gt;$DIR&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            break;;
        &lt;span style="color: #CC3300"&gt;&amp;#39;BlackRPi&amp;#39;&lt;/span&gt; &lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #003333"&gt;ARGUMENTS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXCL_RPI&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$REMOTE_WRAPPER&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$SSH_ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;SOURCE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;backup_user@BlackRPi:/&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;DESTINATION&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/mnt/backup/full-backup/BlackRPi/&lt;/span&gt;&lt;span style="color: #003333"&gt;$DIR&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            break;;
        &lt;span style="color: #CC3300"&gt;&amp;#39;SaraPC&amp;#39;&lt;/span&gt; &lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #003333"&gt;ARGUMENTS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXCL_WINDOWS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; --fake-super &lt;/span&gt;&lt;span style="color: #003333"&gt;$SSH_ARGS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;SOURCE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Sara@SaraPC:/&amp;quot;&lt;/span&gt;
            &lt;span style="color: #003333"&gt;DESTINATION&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/mnt/backup/full-backup/SaraPC/&lt;/span&gt;&lt;span style="color: #003333"&gt;$DIR&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
            break;;
        &lt;span style="color: #555555"&gt;[&lt;/span&gt;Qq&lt;span style="color: #555555"&gt;]&lt;/span&gt;* &lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;Exiting script.&amp;quot;&lt;/span&gt;
            exit;;
        * &lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;Please answer &amp;#39;desktop&amp;#39;, &amp;#39;RedRPi&amp;#39;, &amp;#39;BlackRPi&amp;#39;, &amp;#39;SaraPC&amp;#39; or &amp;#39;q&amp;#39; to quit&amp;quot;&lt;/span&gt;;;
    &lt;span style="color: #006699; font-weight: bold"&gt;esac&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Capture scripts start time&lt;/span&gt;
&lt;span style="color: #003333"&gt;STARTTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%s&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Place in the log file information concerning the execution of this script&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; -e &lt;span style="color: #CC3300"&gt;&amp;quot;\n\n####&amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$answer&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;full-backup script started on `date` ####&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; -n &lt;span style="color: #CC3300"&gt;&amp;quot;options passed to rsync: &amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ARGUMENTS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$SOURCE&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$DESTINATION&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Now execute the script, also capture scripts end time, calculate run time,&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and send status notification to Pushover app&lt;/span&gt;
&lt;span style="color: #555555"&gt;(&lt;/span&gt; &lt;span style="color: #003333"&gt;STARTTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%s&lt;span style="color: #CC3300"&gt;`&lt;/span&gt; ; &lt;span style="color: #336666"&gt;eval&lt;/span&gt; /usr/bin/rsync &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$ARGUMENTS&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$SOURCE&lt;/span&gt;&lt;span style="color: #CC3300"&gt; &lt;/span&gt;&lt;span style="color: #003333"&gt;$DESTINATION&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
&lt;span style="color: #003333"&gt;EXITSTATUS&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$?&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;rsync terminated with exit status &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXITSTATUS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;.&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;####&amp;quot;&lt;/span&gt; &lt;span style="color: #003333"&gt;$answer&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;full-backup script completed at `date` ####&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style="color: #003333"&gt;$LOG&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
&lt;span style="color: #003333"&gt;ENDTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%s&lt;span style="color: #CC3300"&gt;`&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
&lt;span style="color: #003333"&gt;INTERVAL&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$((&lt;/span&gt;ENDTIME &lt;span style="color: #555555"&gt;-&lt;/span&gt; STARTTIME&lt;span style="color: #006699; font-weight: bold"&gt;))&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
&lt;span style="color: #003333"&gt;RUNTIME&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$((&lt;/span&gt;&lt;span style="color: #003333"&gt;$INTERVAL&lt;/span&gt; &lt;span style="color: #555555"&gt;/&lt;/span&gt; &lt;span style="color: #FF6600"&gt;60&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;))&lt;/span&gt;&lt;span style="color: #CC3300"&gt; min. &lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;$((&lt;/span&gt;&lt;span style="color: #003333"&gt;$INTERVAL&lt;/span&gt; &lt;span style="color: #555555"&gt;%&lt;/span&gt; &lt;span style="color: #FF6600"&gt;60&lt;/span&gt;&lt;span style="color: #006699; font-weight: bold"&gt;))&lt;/span&gt;&lt;span style="color: #CC3300"&gt; sec.&amp;quot;&lt;/span&gt; ;&lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
/home/jeff/bin/apprise -t &lt;span style="color: #CC3300"&gt;&amp;quot;Full Backup Status&amp;quot;&lt;/span&gt; -m &lt;span style="color: #CC3300"&gt;&amp;quot;Filesystem backup took &lt;/span&gt;&lt;span style="color: #003333"&gt;$RUNTIME&lt;/span&gt;&lt;span style="color: #CC3300"&gt; and completed on `date` with exit status &lt;/span&gt;&lt;span style="color: #003333"&gt;$EXITSTATUS&lt;/span&gt;&lt;span style="color: #CC3300"&gt;.&amp;quot;&lt;/span&gt; &lt;span style="color: #555555"&gt;)&lt;/span&gt; &amp;amp;

&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;Full Backup Underway From &amp;#39;&lt;/span&gt;&lt;span style="color: #003333"&gt;$SOURCE&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39; To &amp;#39;&lt;/span&gt;&lt;span style="color: #003333"&gt;$DESTINATION&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Under the &lt;code&gt;backup_user&lt;/code&gt; account I established the Cron job for the backups.
You can use &lt;code&gt;sudo crontab -l&lt;/code&gt; to list the contents of crontab.
To update it, use &lt;code&gt;crontab -e&lt;/code&gt; and enter the following
(Also, restart cron with &lt;code&gt;sudo service cron restart&lt;/code&gt; to make sure the changes are in effect):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# Each task to run has to be defined through a single line&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# indicating with different fields when the task will be run&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and what command to run for the task&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# To define the time you can provide concrete values for&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# minute (m), hour (h), day of month (dom), month (mon),&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# and day of week (dow) or use &amp;#39;*&amp;#39; in these fields (for &amp;#39;any&amp;#39;).#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Notice that tasks will be started based on the cron&amp;#39;s system&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# daemon&amp;#39;s notion of time and timezones.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Output of the crontab jobs (including errors) is sent through&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# email to the user the crontab file belongs to (unless redirected).&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# For example, you can run a backup of all your user accounts&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# at 5 a.m every week with:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Instead of the first five fields, one of eight special strings may be applied:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# string         meaning&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# ------         -------&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @reboot        Run once, at startup.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @yearly        Run once a year, &amp;quot;0 0 1 1 *&amp;quot;.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @annually      (same as @yearly)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @monthly       Run once a month, &amp;quot;0 0 1 * *&amp;quot;.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @weekly        Run once a week, &amp;quot;0 0 * * 0&amp;quot;.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @daily         Run once a day, &amp;quot;0 0 * * *&amp;quot;.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @midnight      (same as @daily)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @hourly        Run once an hour, &amp;quot;0 * * * *&amp;quot;.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Examples&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @reboot &amp;lt;command&amp;gt; #Runs at boot&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# @yearly &amp;lt;command&amp;gt; #Runs once a year [0 0 1 1 *]&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# For more information see the manual pages of crontab(5) and cron(8)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     +------------- minutes (0 - 59)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      +----------- hour (0 - 23)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      |          +--------- day of month (1 - 31)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      |          |         +------- month (1 - 12)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      |          |         |         +----- day of week (0 - 6) (Sunday = 0)&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      |          |         |         |            +--- command to be executed&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      |          |         |         |            |&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     |      |          |         |         |            |&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#     m      h         dom       mon       dow&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#   minute  hour  day-of-month  month   day-of-week   command&lt;/span&gt;
      &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;     */4         *         *         *         /home/backup_user/bin/rsnapshot-wrapper.sh hourly
     &lt;span style="color: #FF6600"&gt;30&lt;/span&gt;      &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;          *         *         *         /home/backup_user/bin/rsnapshot-wrapper.sh daily
     &lt;span style="color: #FF6600"&gt;30&lt;/span&gt;     &lt;span style="color: #FF6600"&gt;10&lt;/span&gt;          *         *         &lt;span style="color: #FF6600"&gt;6&lt;/span&gt;         /home/backup_user/bin/rsnapshot-wrapper.sh weekly
     &lt;span style="color: #FF6600"&gt;30&lt;/span&gt;     &lt;span style="color: #FF6600"&gt;14&lt;/span&gt;          &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;         *         *         /home/backup_user/bin/rsnapshot-wrapper.sh monthly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, within some of the scripts above,
you'll the utility &lt;code&gt;apprise&lt;/code&gt;.
This utility make use of the push notification &lt;a href="https://pushover.net/"&gt;Pushover&lt;/a&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/bin/bash&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# This utility does a push notification to the service Pushover - https://pushover.net/&lt;/span&gt;

&lt;span style="color: #003333"&gt;APPTOKEN&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;lt;token&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;USERKEY&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&amp;lt;key&amp;gt;&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Parse command line options&lt;/span&gt;
&lt;span style="color: #003333"&gt;USAGE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Usage: `basename &lt;/span&gt;&lt;span style="color: #003333"&gt;$0&lt;/span&gt;&lt;span style="color: #CC3300"&gt;` [-h] -t title -m message&amp;quot;&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;getopts&lt;/span&gt; ht:m: OPT; &lt;span style="color: #006699; font-weight: bold"&gt;do&lt;/span&gt;
    &lt;span style="color: #006699; font-weight: bold"&gt;case&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$OPT&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; in
        h&lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #003333"&gt;$USAGE&lt;/span&gt;
            &lt;span style="color: #336666"&gt;exit&lt;/span&gt; 0
            ;;
        t&lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #003333"&gt;TITLE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$OPTARG&lt;/span&gt;
            ;;
        m&lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #003333"&gt;MESSAGE&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$OPTARG&lt;/span&gt;
            ;;
        &lt;span style="color: #CC3300; font-weight: bold"&gt;\?&lt;/span&gt;&lt;span style="color: #555555"&gt;)&lt;/span&gt;
            &lt;span style="color: #0099FF; font-style: italic"&gt;# getopts issues an error message&lt;/span&gt;
            &lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #003333"&gt;$USAGE&lt;/span&gt; &amp;gt;&amp;amp;2
            &lt;span style="color: #336666"&gt;exit&lt;/span&gt; 1
            ;;
    &lt;span style="color: #006699; font-weight: bold"&gt;esac&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;done&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Send message to Pushover to create notification&lt;/span&gt;
curl --silent &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -F &lt;span style="color: #CC3300"&gt;&amp;quot;token=&lt;/span&gt;&lt;span style="color: #003333"&gt;$APPTOKEN&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -F &lt;span style="color: #CC3300"&gt;&amp;quot;user=&lt;/span&gt;&lt;span style="color: #003333"&gt;$USERKEY&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -F &lt;span style="color: #CC3300"&gt;&amp;quot;message=&lt;/span&gt;&lt;span style="color: #003333"&gt;$MESSAGE&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -F &lt;span style="color: #CC3300"&gt;&amp;quot;device=desktop&amp;quot;&lt;/span&gt; &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -F &lt;span style="color: #CC3300"&gt;&amp;quot;title=&lt;/span&gt;&lt;span style="color: #003333"&gt;$TITLE&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt; &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    -F &lt;span style="color: #CC3300"&gt;&amp;quot;sound=spacealarm&amp;quot;&lt;/span&gt; &lt;span style="color: #CC3300; font-weight: bold"&gt;\&lt;/span&gt;
    https://api.pushover.net/1/messages.json | grep &lt;span style="color: #CC3300"&gt;&amp;#39;&amp;quot;status&amp;quot;:1&amp;#39;&lt;/span&gt; &amp;gt; /dev/null

&lt;span style="color: #0099FF; font-style: italic"&gt;# Check the exit code to identify an error&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; &lt;span style="color: #555555"&gt;[&lt;/span&gt; &lt;span style="color: #003333"&gt;$?&lt;/span&gt; -eq &lt;span style="color: #FF6600"&gt;0&lt;/span&gt; &lt;span style="color: #555555"&gt;]&lt;/span&gt;;
    &lt;span style="color: #006699; font-weight: bold"&gt;then&lt;/span&gt;
        &lt;span style="color: #336666"&gt;exit&lt;/span&gt; 0
    &lt;span style="color: #006699; font-weight: bold"&gt;else&lt;/span&gt;
        &lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;apprise failed&amp;quot;&lt;/span&gt;
        &lt;span style="color: #336666"&gt;exit&lt;/span&gt; 1
&lt;span style="color: #006699; font-weight: bold"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Increased Security&lt;/h2&gt;
&lt;p&gt;The final step is to lock all this down.
To increase the security of the overall scheme,
on the remote systems and on the local system,
remove the user password from the &lt;code&gt;backup_user&lt;/code&gt;
and set the shell to a NOOP command.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# increase security by deleting password and remove login shell&lt;/span&gt;
sudo passwd --delete backup_user
sudo usermod -s /bin/false backup_user
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Monitoring rsnapshot&lt;/h2&gt;
&lt;p&gt;Monitoring and testing is an essential part of any backup procedure.
There's nothing worse than finding out
that your backup hasn't been working for six months on the day that your system crashes.
rsnapshot has a log file that records warnings and error messages.
You can find/open it here: &lt;code&gt;/var/log/rsnapshot.log&lt;/code&gt;
Inspect this log regularly to make sure your backup jobs are running smoothly.
You can increase or decrease the level of logging detail in the configuration file &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Backup from Windows Machines to Linux&lt;/h2&gt;
&lt;p&gt;Backing up Windows systems has its own special challenges, but utilities exist to help.
&lt;a href="http://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; is a a collection of tools that provide a Linux look and feel environment for Windows.
If you install it, you can use linux commands and services on your Windows.
Cygwin contains a package with &lt;a href="http://cygwin.com/cgi-bin2/package-cat.cgi?file=x86%2Frsync%2Frsync-3.0.9-1&amp;amp;grep=rsync"&gt;its version of rsync&lt;/a&gt;
to make backups from the Windows based computer.
With Cygwin's rsync and the rsnapshot running on the Linux backup server,
you can set up a remote backup for the Microsoft Windows box.&lt;/p&gt;
&lt;p&gt;To do the install the cygwin &lt;code&gt;rsync&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt;, etc. tools required to support the rsnapshot backup,
you'll follow a similar design pattern used above for the Linux boxes.
Follow this procedure:&lt;/p&gt;
&lt;h3&gt;Install Cygwin Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;From the &lt;a href="http://www.cygwin.com/"&gt;cygwin site&lt;/a&gt;, download and run the setup program.  (Make sure to keep the setup program, since it is used to install additional Cygwin packages, if you so desire.)&lt;/li&gt;
&lt;li&gt;Run your cygwin &lt;code&gt;setup.exe&lt;/code&gt; and expand the categories to find "rsync" and "ssh".  You'll find them under the "Net" packages.&lt;/li&gt;
&lt;li&gt;When the install is complete, the &lt;code&gt;rsync&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt; programs (and many more) will be located in &lt;code&gt;C:\cygwin64\bin&lt;/code&gt;. (This is equivalent to &lt;code&gt;/bin&lt;/code&gt; when your running a &lt;code&gt;bash&lt;/code&gt; shell in cygwin.)&lt;/li&gt;
&lt;li&gt;In Windows, open a &lt;a href="http://www.howtogeek.com/howto/windows-vista/run-a-command-as-administrator-from-the-windows-vista-run-box/"&gt;Command Prompt (Admin) window&lt;/a&gt;.  Within this window, get a bash shell via the command &lt;code&gt;C:\cygwin64\bin\bash&lt;/code&gt;.  Next execute &lt;code&gt;export Path=/bin:$PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Get ssh Operational&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Now make a home directory for the cygwin user, in my case this was &lt;code&gt;mkdir /home/Sara&lt;/code&gt; and then &lt;code&gt;cd /home/Sara&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;ssh&lt;/code&gt; public/private keys with the following command: &lt;code&gt;ssh-keygen -t rsa&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now start up the &lt;code&gt;ssh&lt;/code&gt; services by following the instructions of "&lt;a href="http://lifehacker.com/205090/geek-to-live--set-up-a-personal-home-ssh-server"&gt;Geek to Live: Set up a personal, home SSH server&lt;/a&gt;".&lt;/li&gt;
&lt;li&gt;Find out the name of the windows system via &lt;code&gt;hostname&lt;/code&gt; (it's SaraPC).&lt;/li&gt;
&lt;li&gt;In order to access the &lt;code&gt;ssh&lt;/code&gt; server from the backup Linux box, the &lt;code&gt;ssh&lt;/code&gt; port of 22 must be open in the Windows Firewall. You can check ports status by attempting connect via &lt;code&gt;ssh&lt;/code&gt; (e.g. &lt;code&gt;ssh Sara@SaraPC&lt;/code&gt;).  If this command appears to hang or time out (as it did for me), the port is likely blocked.  You'll need to go to your &lt;a href="http://windows.microsoft.com/en-us/windows/open-port-windows-firewall#1TC=windows-7"&gt;Windows Firewall&lt;/a&gt; and open port 22.&lt;/li&gt;
&lt;li&gt;Transfer the public key for the &lt;code&gt;backup_user&lt;/code&gt; on the Linux Backup server to &lt;code&gt;/home/Sara/.ssh/authorized_keys&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make sure that in the files &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt; that you have &lt;code&gt;RSAAuthentication yes&lt;/code&gt; and &lt;code&gt;PubKeyAuthentication yes&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Test ssh and rsync&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;On the Linux Backup server, login as the &lt;code&gt;backup_user&lt;/code&gt; user.&lt;/li&gt;
&lt;li&gt;Test the connection via &lt;code&gt;ssh Sara@SaraPC&lt;/code&gt; in a terminal window on the Linux box (note to self: Case is important!).  You should login without a password.&lt;/li&gt;
&lt;li&gt;Test rsync via the command &lt;code&gt;sudo rsync -azv --fake-super Sara@SaraPC:/home/Sara /mnt/backup/rsync-test9&lt;/code&gt;. You'll want to use the &lt;code&gt;--fake-super&lt;/code&gt; option to suppress some i&lt;a href="https://digitaldj.net/blog/2011/04/07/rsync-3-0-8-windows-and-chown/"&gt;issues with group ids&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Test the &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt; given earlier by running &lt;code&gt;rsnapshot hourly&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Restore Files with rsnapshot&lt;/h2&gt;
&lt;p&gt;Restoring files are an no brainier because the backups are plain directories.
You can open a file browser or a terminal, enter a snapshot from a few hours/days/weeks/months ago,
find a working directory where your files are store, and copy them to where their needed.
In other words, you can use any regular tools on any snapshot.
No need to “revert” or “restore” files from backup, or run any special software.
This is mighty convenient, intuitive, and fool proof.&lt;/p&gt;
&lt;h2&gt;Sources&lt;/h2&gt;
&lt;p&gt;I found these articles useful for writing this post and setting up my rsych / rsnapshot backup scheme.&lt;/p&gt;
&lt;h3&gt;rsync&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2010/09/rsync-command-examples/"&gt;How to Backup Linux? 15 rsync Command Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/rsync-local-remote-file-synchronization-commands/"&gt;Rsync (Remote Sync): 10 Practical Examples of Rsync Command in Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2011/01/rsync-exclude-files-and-folders/"&gt;6 rsync Examples to Exclude Multiple Files and Directories using exclude-from&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2011/07/rsync-over-ssh-without-password/"&gt;How to Setup Rsync with SSH on UNIX / Linux (rsync without password)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mikerubel.org/computers/rsync_snapshots/"&gt;Easy Automated Snapshot-Style Backups with Linux and Rsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Full_System_Backup_with_rsync"&gt;Full System Backup with rsync&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;rsnapshot&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kamaradski.com/1245/how-to-install-and-setup-rsnapshot-incremental-remote-backup"&gt;How to install and setup Rsnapshot incremental remote backup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/linux-rsnapshot-backup-howto/"&gt;Debian / Ubuntu Linux Install and Configure Remote Filesystem Snapshot with rsnapshot Incremental Backup Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/rsnapshot-a-file-system-backup-utility-for-linux/"&gt;Rsnapshot (Rsync Based) – A Local/Remote File System Backup Utility for Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rsnapshot.org/howto/1.2/rsnapshot-HOWTO.en.html#create_the_config_file"&gt;rsnapshot HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/restoring-backup-files-with-rsnapshot-unix-linux-bsd-appleosx/"&gt;UNIX / Linux: Rsnapshot Restore Backups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/site/rsync2u/home/rsync-tutorial/the-exclude-from-option"&gt;The "exclude-from" and "recursive" options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.evbackup.com/support-misc-redundant-backups-with-rsnapshot/"&gt;Implementing Redundant Backups with rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;rsnapshot with root access&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technokracy.net/2011/01/07/root_sudo_rsnapshot/"&gt;Root, Sudo, and Rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.kprod.net/?q=linux-backup-rsnapshot-no-root"&gt;Backup remote Linux hosts without root access, using rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://derek.simkowiak.net/backing-up-multiple-servers-with-rsnapshot/"&gt;Backing Up Multiple Servers with Rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;rsync and rsnapshot with Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.smellems.com/tiki-read_article.php?articleId=14"&gt;Backup from Windows to Linux with Rsync and SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://optics.ph.unimelb.edu.au/help/rsync/rsync_pc1.html"&gt;Installing ssh and rsync on a Windows machine: minimalist approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.trueblade.com/knowledge/using-rsync-and-cygwin-to-sync-files-from-a-linux-server-to-a-windows-notebook-pc"&gt;Using rsync and cygwin to Sync Files from a Linux Server to a Windows Notebook PC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://terokarvinen.com/rsync_from_windows.html"&gt;Rsync from Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;SSH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.symantec.com/connect/articles/ssh-host-key-protection"&gt;SSH Host Key Protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linuxcommando.blogspot.com/2008/10/how-to-disable-ssh-host-key-checking.html"&gt;How to disable SSH host key checking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:A"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
&lt;a href="http://www.lostsaloon.com/technology/understanding-file-linking-hard-link-vs-symbolic-link-in-linux/"&gt;Hard links are similar to symlinks&lt;/a&gt;.
They are normally created using the &lt;code&gt;ln&lt;/code&gt; command but without the &lt;code&gt;-s&lt;/code&gt; switch.
A hard link is when two file entries point to the same &lt;a href="http://en.wikipedia.org/wiki/Inode"&gt;inode&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Block_(data_storage)"&gt;disk blocks&lt;/a&gt;.
Unlike &lt;a href="http://en.wikipedia.org/wiki/Symbolic_link"&gt;symlinks&lt;/a&gt; there isn't a file and a pointer to the file, but rather two links to the same file.
If you delete either entry the other will remain and will still contain the data.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:A1"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
This assumes local permission on the remote systems to access the files that are to be backed up.
Where the backup user does not have local permission to access files,
the only reasonable alternative may be key-based authentication over SSH for root.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A1" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:B"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
The command &lt;code&gt;ssh-copy-id&lt;/code&gt; may not work if your attempting use the
root login instant of pi on the remote machine.
In this case, you'll need to manually move the public key to its destination.
The article "&lt;a href="http://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/"&gt;Create SSH Passwordless Login Using SSH Keygen&lt;/a&gt; can show you how to do this.&amp;#160;&lt;a class="footnote-backref" href="#fnref:B" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:C"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
Because of an abundance of paranoia,
remote root login over &lt;code&gt;ssh&lt;/code&gt; session is disabled in some Linux distributions for &lt;a href="http://www.cyberciti.biz/tips/linux-unix-bsd-openssh-server-best-practices.html"&gt;security reasons&lt;/a&gt;.
By default, the Root account password is locked in Ubuntu and most other version of Linux.
The account has no password, even thou it prompts you to provide one.
This means that you cannot login as Root directly or use the su command to become the Root user.
However, since the Root account physically exists it is still possible to
run programs with root-level privileges.
This is where &lt;a href="https://help.ubuntu.com/community/RootSudo"&gt;sudo&lt;/a&gt; comes in - it allows authorized users (normally "Administrative" users)
to run certain programs as Root without having to know the root password.&amp;#160;&lt;a class="footnote-backref" href="#fnref:C" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:D"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
One of the most common warnings you will likely encounter is a host key error
which may not happen until long after you have made your first connection to a host.
If any of several identifying features of the host change,
a new host key could be created and if that happens your ssh client will let you know
by refusing to log you into that system without first prompting you to confirm the warning,
or may even force you to provide the login's password.
It can be confusing on how to clean this up, but these two articles can help:
&lt;a href="http://xmodulo.com/2013/05/how-to-accept-ssh-host-keys-automatically-on-linux.html"&gt;How to accept ssh host keys automatically on Linux&lt;/a&gt;
and &lt;a href="http://stackoverflow.com/questions/9299651/warning-permanently-added-to-the-list-of-known-hosts-message-from-git"&gt;“Warning: Permanently added to the list of known hosts” message from Git&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:D" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:E"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
The suppression of this warning does reduce the security profile of the system.
Instead of suppressing the warning for all ssh access to *RPi,
you could implement this functionality &lt;a href="http://www.garron.me/en/linux/remove-offending-key-ssh.html"&gt;solely for the &lt;code&gt;rsync&lt;/code&gt; command&lt;/a&gt; by using
the option &lt;code&gt;-e "ssh -o CheckHostIP=no -o StrictHostKeyChecking=no"&lt;/code&gt;.
See &lt;a href="http://security.stackexchange.com/questions/10532/ecdsa-keys-changed-ssh-insecure-now"&gt;ECDSA Keys Changed, SSH insecure now&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:E" rev="footnote" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:F"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
The sudoers configuration file enables a huge amount of configurability,
including but not limited to: enabling root commands only from the invoking terminal;
not requiring a password for certain commands;
requiring a password per user or group;
requiring re-entry of a password every time or never requiring a password at all for a particular command line.
It can also be configured to permit passing arguments or multiple commands,
and even supports commands with regular expressions.&amp;#160;&lt;a class="footnote-backref" href="#fnref:F" rev="footnote" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:G"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
I choose a UID of 400 so that the &lt;code&gt;backup_user&lt;/code&gt; would not appear on the Ubuntu login screen list.
To hide a user from the Ubuntu login screen list,
you should be able to add the name to the hidden-users
list in the file &lt;code&gt;/etc/lightdm/users.conf&lt;/code&gt;, but there is a &lt;a href="http://www.cyberciti.biz/faq/howto-change-rename-user-name-id/"&gt;problem&lt;/a&gt;.
The is an alternative, and that is to choose a UID value less than 500
(See the "minimum-uid" in &lt;code&gt;/etc/lightdm/users.conf&lt;/code&gt;).&amp;#160;&lt;a class="footnote-backref" href="#fnref:G" rev="footnote" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:H"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
To automate rsnapshot backup to a remote servers,
you'll also need to set up key-based authentication over SSH on the remote
machines that you want to backup,
so that they can be accessed without need for a password login.
And you need to make sure this arrangement survives a reboot.
To accomplish this, you will need to create an SSH public and private keys to authenticate on the rsnapshot server.
This was all discussed earlier.&amp;#160;&lt;a class="footnote-backref" href="#fnref:H" rev="footnote" title="Jump back to footnote 9 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:I"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
The configuration file requires tabs between elements
and all directories require a trailing slash.
Just open the configuration file using a text editor such as &lt;code&gt;vi&lt;/code&gt; or &lt;code&gt;gedit&lt;/code&gt; but be careful.
Many editors are set to convert any tabs entered by the user to spaces.
This can be a source of great confusion and frustration!&amp;#160;&lt;a class="footnote-backref" href="#fnref:I" rev="footnote" title="Jump back to footnote 10 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:J"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
The cron service (daemon) runs in the background and constantly checks the &lt;code&gt;/etc/crontab&lt;/code&gt; file,
and &lt;code&gt;/etc/cron.*/&lt;/code&gt; directories.
It also checks the &lt;code&gt;/var/spool/cron/&lt;/code&gt; directory.
Review the article &lt;a href="https://help.ubuntu.com/community/CronHowto"&gt;CronHowTo&lt;/a&gt; to see how you can schedule and run tasks
in the background automatically at regular intervals using crontab files.
Crontab ( &lt;strong&gt;cron&lt;/strong&gt; &lt;strong&gt;tab&lt;/strong&gt;le ) is a file which contains the schedule of cron entries to be run and at specified times.
(If the system isn't running 24x7, consider using &lt;a href="http://www.thegeekstuff.com/2011/05/anacron-examples/"&gt;anacron&lt;/a&gt;).&amp;#160;&lt;a class="footnote-backref" href="#fnref:J" rev="footnote" title="Jump back to footnote 11 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Linux"></category><category term="Rsync"></category><category term="Rsnapshot"></category><category term="Backup"></category><category term="Cygwin"></category></entry><entry><title>Having Fun with Wine, VirtualBox, and TurboTax</title><link href="/posts/2014/Jan/15/having-fun-with-wine-VirtualBox-and-turbotax/" rel="alternate"></link><published>2014-01-15T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2014-01-15:posts/2014/Jan/15/having-fun-with-wine-VirtualBox-and-turbotax/</id><summary type="html">&lt;p&gt;Sometime ago, I committed myself to Linux and &lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt;,
with the promise that I would sincerely abandon Microsoft Windows by
not &lt;a href="http://en.wikipedia.org/wiki/Multi-booting"&gt;dual booting&lt;/a&gt; my system nor installing any &lt;a href="http://en.wikipedia.org/wiki/Virtualization"&gt;virtualization&lt;/a&gt; software.
Well, it is now tax-time and the Federal government wants their "fair share" of my income.
Will my preferred tax software package, &lt;a href="https://turbotax.intuit.com/"&gt;TurboTax&lt;/a&gt;, run with Linux &amp;amp; Wine?
All the evidence I have gathered (see &lt;a href="http://appdb.winehq.org/objectManager.php?sClass=application&amp;amp;iId=623"&gt;Wine's ratings&lt;/a&gt; for one data point)
on the web leads me to believe I will be very disappointed.
I can't find any success stories!
Never the less, I will use this as a learning opportunity.
I'm going to plunge forward and try to get TurboTax working with Wine, ....
and it it fails me, resort to &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;,
which appears to have at least &lt;a href="https://blogs.oracle.com/wbays/entry/turbotax_on_virtualbox_problem_solved"&gt;some success&lt;/a&gt; stories.&lt;/p&gt;
&lt;h1&gt;Installing and Configuring Wine&lt;/h1&gt;
&lt;p&gt;Wine can be installed via the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# installing wine&lt;/span&gt;
sudo add-apt-repository ppa:ubuntu-wine/ppa
sudo apt-get update
sudo apt-get install wine
sudo apt-get install cabextract
sudo apt-get install winetricks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;winetricks&lt;/code&gt; is a script which automates the installation of various useful packages,
offering a friendly interface to do so.
The &lt;code&gt;cabextract&lt;/code&gt; package is a native Linux application that extracts Microsoft Cabinet files (CAB).
&lt;code&gt;ppa:ubuntu-wine/ppa&lt;/code&gt; will get the latest versions for Wine and keep it updated with new releases.
This is important since the Wine support team is frequently
fixing and tweaking it to get Microsoft Windows software working.
To test if you got things installed properly&lt;sup id="fnref:A"&gt;&lt;a class="footnote-ref" href="#fn:A" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;,
execute one of the already installed Microsoft Windows packages.
Try the following: &lt;code&gt;wine notepad.exe&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Installing TurboTax with Wine&lt;/h1&gt;
&lt;p&gt;Wine is complex and large.
I don't have the patience for hours of configuring and testing;
particularly if in the end I can't print or electronically email my tax return.
I'm going to plunge into installing TurboTax via Wine,
and see if I can get things running with minimal effort.&lt;/p&gt;
&lt;p&gt;So, I put the CD in the drive, right clicked on the setup.exe file, picked the menu item
"Open With Wine Windows Program Loader", and got a error screen titled
&lt;a href="https://ttlc.intuit.com/questions/1899606-error-we-can-t-install-turbotax-on-your-computer-just-yet"&gt;"We can't install TurboTax on your computer just yet..."&lt;/a&gt;.
Appears that TurboTax doesn't like Wine's version of the .NET Framework.
A little &lt;a href="http://superuser.com/questions/476872/installing-net-4-0-framework-on-wine-using-winetricks"&gt;research&lt;/a&gt; suggested that I should install .NET 4 via this command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install .NET&lt;/span&gt;
winetricks dotnet40
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After this, I still got a .NET related error.
Specifically, the TurboTax installer was looking for the &lt;code&gt;netfx40testapplication.exe&lt;/code&gt;.
Another quick search brought me to these bug report: &lt;a href="http://www.winehq.org/pipermail/wine-bugs/2012-January/308034.html"&gt;#1&lt;/a&gt; and &lt;a href="http://wine.1045685.n5.nabble.com/Bug-29666-New-TurboTax-2011-fails-to-install-td5161768.html"&gt;#2&lt;/a&gt;.
I have had enough ... on to VirtualBox!!&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Installing TurboTax Within VirtualBox&lt;/h1&gt;
&lt;p&gt;VirtualBox is being setup with Microsoft Windows (specifically Windows 8.1)
as the Guest OS and with the native Linux (specifically Ubuntu 13.10) as the Host OS.
&lt;a href="http://www.lifehacker.com.au/2013/10/virtualbox-4-3-adds-windows-8-1-support/"&gt;VirtualBox version 4.3 has added Windows 8.1 support&lt;/a&gt;,
so that is the version I wish to install.
I initially installed VirtualBox via Ubuntu's software center
(equivalent to using &lt;code&gt;sudo apt-get install virtualbox virtualbox-qt&lt;/code&gt;),
which installed version 4.2.16-dfsg-3, and I had to back it out.
Instead, I install VirtualBox from the Oracle maintained repository,
following the &lt;a href="https://www.virtualbox.org/wiki/Linux_Downloads"&gt;procedures outlined by Oracle&lt;/a&gt;.
I added the following lines (for the appropriate Linux distribution; mine is saucy)
to the &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;# Oracle&amp;#39;s software repository for VirtualBox
deb http://download.virtualbox.org/virtualbox/debian saucy contrib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Downloaded the Oracle public key for the software:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# get the public key for VirtualBox&amp;#39;s repository&lt;/span&gt;
wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now install VirtualBox:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# install VirtualBox&lt;/span&gt;
sudo apt-get update
sudo apt-get install virtualbox vde2 virtualbox-guest-additions-iso virtualbox-ext-pack
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configuring VirtualBox and Installing Windows 8.1&lt;/h3&gt;
&lt;p&gt;It appears you can install 32 or 64 bit Windows (assuming you have virtualization supporting processor).
I choose the 64 bit version.
As to the installation steps, I was guided by the posting "&lt;a href="http://www.geekthis.net/blog/95/windows-81-in-virtualbox"&gt;Windows 8.1 in VirtualBox&lt;/a&gt;",
and the steps are basically the following:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure VirtualBox&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fired up VirtualBox, clicked the "New" button, and used the Wizard to create a virtual partition for Window&lt;/li&gt;
&lt;li&gt;I gave the virtual machine the name "MS Windows"&lt;/li&gt;
&lt;li&gt;I allocated to the virtual machine the maximum amount of RAM, that being 3.584GB&lt;/li&gt;
&lt;li&gt;I created a 50GB virtual hard drive with a VirtualBox Disk Image (VDI).  I Choose to have the virtual drive to grow dynamically.&lt;/li&gt;
&lt;li&gt;I opened up "Settings" and under "System" &amp;gt; "Processor", enable "PAE/NX". I also increased the CPU Cores to the number supported on my box (i.e. 4).&lt;/li&gt;
&lt;li&gt;Under "Display" &amp;gt; "Video", I increased the Video Memory as high as I can, disable 3D Acceleration but enabled 2D Acceleration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Install Windows 8.1&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Still in the "Settings" window, go to "Storage" and under "IDE" where it shows "Empty", click the disk next to it and installed Windows 8.1 64-bit DVD into the drive.&lt;/li&gt;
&lt;li&gt;Still with "Storage", click the disk icon right of the "CD/DVD Drive" and select "Host Drive ...".  Also check "Passthrough". Click "OK".&lt;/li&gt;
&lt;li&gt;Select the "Start" button om the VirtualBox Manager window.&lt;/li&gt;
&lt;li&gt;At this point, a window should pop up and you see the Windows 8.1 install process begin.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installing TurboTax on VirtualBox&lt;/h3&gt;
&lt;p&gt;This is easy.
Fire up the "MS Windows" virtual machine, and load TruboTax like you would any other Microsoft Windows application.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Apple iTunes&lt;/h1&gt;
&lt;p&gt;I also wanted to use my iPod with my music collection.
All my music is in  MP4 format on my Linux box, working happily with Rhythmbox,
but it can't be synced with &lt;a href="https://support.apple.com/ipod/ipod-nano"&gt;my iPod&lt;/a&gt;.
Apple has finally successfully blocked any form of access between Linux and my version of iPod (7th generation).
My work around is to run iTunes on my Windows Guest OS and share the my music directory
under the Linux Host OS with the Guest OS.&lt;/p&gt;
&lt;p&gt;Wine and iTunes .............&lt;/p&gt;
&lt;h3&gt;Step 1: Install Host OS (Linux) Guest Additions&lt;/h3&gt;
&lt;p&gt;First, you have to install VirtualBox Guest Additions in the Host OS.
You can check to see if guest additions has already been loaded by using &lt;code&gt;lsmod&lt;/code&gt; or &lt;code&gt;mprobe&lt;/code&gt;,
as shown below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# check if virtualbox guest additions package has been installed (yes in this case)&lt;/span&gt;
$ dpkg -l | grep virtualbox-guest
ii  virtualbox-guest-dkms                                       5.2.10-dfsg-6ubuntu18.04.1                 all          x86 virtualization solution - guest addition module &lt;span style="color: #336666"&gt;source&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;for&lt;/span&gt; dkms
ii  virtualbox-guest-utils                                      5.2.10-dfsg-6ubuntu18.04.1                 amd64        x86 virtualization solution - non-X11 guest utilities
ii  virtualbox-guest-x11                                        5.2.10-dfsg-6ubuntu18.04.1                 amd64        x86 virtualization solution - X11 guest utilities
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the guest additions hasn't been loaded, you can do this via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install dkms build-essential linux-headers-generic module-assistant
sudo apt-get install virtualbox-guest-dkms virtualbox-guest-x11 virtualbox-guest-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With the VirtualBox additions installed, you should do a reboot.&lt;/p&gt;
&lt;h3&gt;Step 2: Install Guest OS (Windows) Guest Additions&lt;/h3&gt;
&lt;p&gt;Launch VM VirtualBox and start your Guest OS
in which you want to share drives/folders and files contained in them.
Now its time to add Guest Additions to the Guest OS (Windows).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &lt;strong&gt;Devices&lt;/strong&gt; tab provided on the VM VirtualBox taskbar and select &lt;strong&gt;Insert Guest Additions CD image...&lt;/strong&gt; from the drop-down list.&lt;/li&gt;
&lt;li&gt;Download the VBoxWindowsAdditions.exe and run it via the popup window.&lt;/li&gt;
&lt;li&gt;On the Setup Wizard select &lt;strong&gt;Next&lt;/strong&gt;, use the default destination folder,
install the device software, and then reboot when prompted.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Step 3: Setup Shared Folders&lt;/h3&gt;
&lt;p&gt;Once the VM reboots, log back in and proceed onto setting up the shared folder.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &lt;strong&gt;Devices&lt;/strong&gt; tab provided on the VM VirtualBox taskbar and select &lt;strong&gt;Shared Folders&lt;/strong&gt; from the drop-down list.&lt;/li&gt;
&lt;li&gt;VirtualBox will open a window &lt;strong&gt;Shared Folders&lt;/strong&gt;.
Click on the top icon in the right-hand corner to add the drive/folder. Another window will open - &lt;strong&gt;Add Share&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Add Share&lt;/strong&gt; allows you to give the path of the drive/folder you wish to share from the Host OS
by giving the path in &lt;strong&gt;Folder Path&lt;/strong&gt; (You can also browse the drive/folder from your Host OS,
in my case &lt;code&gt;/home/jeff/Music&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Now type the name of the folder in the &lt;strong&gt;Folder Name&lt;/strong&gt; box.
It can be any name you wish to have on Guest OS,
but make sure it doesn't currently exist (I used &lt;code&gt;DesktopMusic&lt;/code&gt;).
Also, check the boxes &lt;strong&gt;Auto Mount&lt;/strong&gt; and &lt;strong&gt;Make Permanent&lt;/strong&gt; and click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Go to the Windows &lt;strong&gt;Start&lt;/strong&gt;, select and click &lt;strong&gt;Run&lt;/strong&gt; on Guest OS.
Type &lt;code&gt;net use x: \\vboxsrv\Drive F&lt;/code&gt; as the run command and click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you have done everything right, then no messages or notifications will appear.
Note that the shared drive/folder name should be the same as given in the &lt;strong&gt;Share Folder&lt;/strong&gt; window.
I gave it &lt;strong&gt;Drive F&lt;/strong&gt; and you can check for its existence via the File Explorer.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Step 4: Guest OS (Windows) Access to USB&lt;/h3&gt;
&lt;p&gt;To sync my iPod, I'll need my Guest OS (Windows) based iTunes access the Host OS (Linux)
USB ports.
VirtualBox by default only supports USB 1.x devices.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you have the VirtualBox extension pack
(includes support for USB 2.0 and USB 3.0 devices).
You can validate you have the extension package installed by going to
&lt;strong&gt;File&lt;/strong&gt; &amp;gt; &lt;strong&gt;Preferences...&lt;/strong&gt; &amp;gt; &lt;strong&gt;Extensions&lt;/strong&gt;.
You should see &lt;strong&gt;Oracle VM VirtualBox Extension Package&lt;/strong&gt; listed.
If not listed, follow the instructions in the articles listed in the
"Sources" section below under the heading "VirtualBox Guest OS Access to USB".&lt;/li&gt;
&lt;li&gt;In order for VirtualBox to have access to the USB subsystem,
the user running VirtualBox must belong to the &lt;code&gt;vboxuser&lt;/code&gt; group.
To check this, I ran on the Host OS (Linux) the command &lt;code&gt;groups jeff&lt;/code&gt;,
which list all the groups the user &lt;code&gt;jeff&lt;/code&gt; is part of.
If &lt;code&gt;vboxuser&lt;/code&gt; isn't present, I would execute &lt;code&gt;sudo usermod -aG vboxusers jeff&lt;/code&gt;,
and make sure to restart VirtualBox.&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Machine&lt;/strong&gt; &amp;gt; &lt;strong&gt;Settings...&lt;/strong&gt; &amp;gt; &lt;strong&gt;USB&lt;/strong&gt;.
I then clicked on the icon for adding USB device but I didn't find my device.
I then picked the approprate icon to added a new USB Device Filter.
In the filter, I filled otu the &lt;strong&gt;Vendor ID&lt;/strong&gt; and the &lt;strong&gt;Product ID&lt;/strong&gt;
which I got for the iPod via &lt;code&gt;lsusb&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Unplug your iPod, open VirtualBox make sure it spins up completely, and plug in your iPod.
Finally, right click on the VM status bar USB icon
and select the USB device you want to attach to the VM.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Step 5: Install iTunes&lt;/h3&gt;
&lt;p&gt;Now we'll install iTunes.
Got to &lt;a href="https://www.apple.com/itunes/download/"&gt;Apple's iTunes download page&lt;/a&gt;, and down load the software.
After the download is completed and you have gone through all of Apple's marketing BS,
click on &lt;strong&gt;File&lt;/strong&gt; &amp;gt; &lt;strong&gt;Add Folder to Library...&lt;/strong&gt;.
Select the folder you are sharing with the Host OS (Linux)
and wait while Apple iTunes processes all your music for its consumption.&lt;/p&gt;
&lt;h3&gt;Step 6: Sync iPod with iTunes&lt;/h3&gt;
&lt;p&gt;With iTunes fully initialized, you can now cable up the iPod and sync it with iTunes.
See &lt;a href="https://support.apple.com/en-us/HT201253"&gt;"Sync your iPhone, iPad, or iPod touch with iTunes on your computer using USB"&lt;/a&gt; for detail instructions.&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Everything seems to be working perfectly within TurboTax and iTunes using VirtualBox!
I believe VirtualBox is destine to stay load and in use on my Linux box.
As to Wine, .... screw it!&lt;/p&gt;
&lt;h1&gt;Sources&lt;/h1&gt;
&lt;p&gt;Getting Wine Working&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tuxarena.com/static/tut_wine_guide.php"&gt;A Guide to Wine on Ubuntu for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.howtogeek.com/105271/how-to-run-windows-software-on-ubuntu-with-wine/"&gt;How To Run Windows Software on Ubuntu with Wine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxuser.co.uk/tutorials/use-wine-to-run-windows-software-on-linux"&gt;Use Wine to run Windows software on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/install-wine-on-ubuntu-and-linux-mint/"&gt;Wine 1.7.9 Released – Install on Ubuntu 13.04/12.10/12.04/11.10 and Linux Mint 16/13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2009/08/ubuntu-tips-how-to-use-windows-application-in-linux-desktop-distributions/"&gt;Ubuntu Tips: How To Use Windows Applications in Linux Desktop Distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.simplehelp.net/2007/05/18/how-to-install-windows-programs-in-linux-using-wine/"&gt;How to install Windows programs in Linux using Wine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yolinux.com/TUTORIALS/LinuxTutorialRunMicrosoftExe.html"&gt;Running Microsoft DOS and Microsoft Windows Software on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.winehq.org/winetricks"&gt;winetricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Getting TurboTax or Quicken Working&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://appdb.winehq.org/objectManager.php?sClass=application&amp;amp;iId=623"&gt;History of TurboTax Support via Wine on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.jdpfu.com/2010/11/29/solved-quicken-2011-working-on-linux"&gt;Solved-Quicken 2011 Working on Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Getting VirtualBox Working&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.linuxjournal.com/content/using-windows-xp-virtualbox-linux"&gt;Using Windows XP in VirtualBox on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/187424/install-windows-7-through-virtual-box-in-ubuntu-12-04"&gt;Install windows 7 through virtual box in ubuntu 12.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wikihow.com/Install-Windows-XP-on-Ubuntu-with-VirtualBox"&gt;How to Install Windows XP on Ubuntu with VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://betanews.com/2013/10/21/install-windows-8-1-on-oracle-virtualbox/"&gt;Install Windows 8.1 on Oracle VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.geekthis.net/blog/95/windows-81-in-virtualbox"&gt;Windows 8.1 in VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/VirtualBox/Installation"&gt;VirtualBox/Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.virtualbox.org/manual/ch01.html#idp51679504"&gt;Starting VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shared Folders Within VirtualBox&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.techrepublic.com/article/how-to-share-folders-between-guest-and-host-in-virtualbox/"&gt;How to share folders between guest and host in VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://operating-systems.wonderhowto.com/how-to/share-local-drives-and-folders-using-oracle-vm-virtualbox-with-guest-windows-os-0126237/"&gt;Share Local Drives and Folders using Oracle VM VirtualBox with a Guest Windows OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.virtualbox.org/viewtopic.php?f=3&amp;amp;t=15679"&gt;HOWTO: Install Linux Guest Additions + Xorg config&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VirtualBox Guest OS Access to USB&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linuxbabe.com/virtualbox/access-usb-from-virtualbox-guest-os"&gt;How to Access USB from VirtualBox Guest OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.techrepublic.com/article/how-to-enable-usb-in-virtualbox/"&gt;How to enable USB in VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://superuser.com/questions/1136607/virtualbox-usb-capture-issue-windows-7-host-guest"&gt;VirtualBox USB capture issue (Windows 7 Host/Guest)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:A"&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Use the utility &lt;a href="http://wiki.winehq.org/winecfg"&gt;&lt;code&gt;winecfg&lt;/code&gt;&lt;/a&gt; to configure Wine and change settings like
sound, graphics, Windows version, and so on.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Wine"></category><category term="VirtualBox"></category><category term="TurboTax"></category></entry><entry><title>IPython Notebook in Virtualenv</title><link href="/posts/2013/Oct/06/ipython-notebook-in-virtualenv/" rel="alternate"></link><published>2013-10-06T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-10-06:posts/2013/Oct/06/ipython-notebook-in-virtualenv/</id><summary type="html">&lt;p&gt;I discovered a problem with using &lt;a href="http://ipython.org/ipython-doc/rel-1.0.0/interactive/nbconvert.html"&gt;nbconvert&lt;/a&gt; for posting &lt;a href="http://ipython.org/notebook.html"&gt;IPython Notebooks&lt;/a&gt; to my blog.
Basically it doesn't work for my version of IPython, so I looked for an upgrade.
I found it but its only delivered bundled with the latest version of IPython.
Currently, I'm stuck with using IPython 0.13.2 on my Ubuntu system, at least if I use the
distribution provide via Ubuntu.
And I can only expect to have problems if I try mixing an older version of IPython with the latest
version of nbconvert.&lt;/p&gt;
&lt;p&gt;I sure Ubuntu will be getting around to supporting the latest version of IPython (i.e. IPython 1.1.0).
in the next few weeks to months, but that doesn't help me now.
I'm hesitant to do a whole sale upgrade of IPython on my system since it my upset other thing I got going on.&lt;/p&gt;
&lt;p&gt;The answer to my dilemma will be using the Python Org tool &lt;a href="https://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; (see &lt;a href="http://www.virtualenv.org/en/latest/index.html"&gt;this&lt;/a&gt; for full documentation).
This tool will give me a virtual environment that will not disrupt my other projects.
Virtualenv is a tool to create isolated Python environments, quite like &lt;a href="https://help.ubuntu.com/community/BasicChroot"&gt;chroot jail&lt;/a&gt; on Unix systems.
In a chroot, programs cannot access anything outside of chroot but in virtualenv as the name implies,
it creates isolated environments only with respect to libraries,
but the programs can still access the files and folders normally.
With this, I can support my blog IPython 1.1.0 while also maintaining my other projects which requires IPython 0.13.2.&lt;/p&gt;
&lt;h2&gt;Virtualenv Setup and Usage&lt;/h2&gt;
&lt;p&gt;One might think that you could just install virtualenv and IPython and go
but it turns out that there are a couple other steps needed to make this work.
The steps I outline below were derived from the posts:
&lt;a href="http://iamzed.com/2009/05/07/a-primer-on-virtualenv/"&gt;A Primer on virtualenv&lt;/a&gt;,
&lt;a href="http://www.jontourage.com/2011/02/09/virtualenv-pip-basics/"&gt;Virtualenv and pip Basic&lt;/a&gt;, and
&lt;a href="http://warpedtimes.wordpress.com/2012/09/23/a-tutorial-on-virtualenv-to-isolate-python-installations/"&gt;A tutorial on Virtualenv to isolate python installations&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 0: Check For Installations&lt;/h3&gt;
&lt;p&gt;It's wise to check for an existing installations of virtualenv and its companion tools.
It appears possible (but I'm not sure) to install multiple copies if you mix package management tools
like apt-get, pip, and easy_install.  So first perform this check to see if you get any response:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;virtualenv --version
virtualenvwrapper --version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/"&gt;virtualenvwrapper&lt;/a&gt; is a set of extensions to virtualenv.
The extensions include wrappers for creating and deleting virtual environments and otherwise managing your development workflow.
Use the virtualenvwrapper script to make working with and changing to/from multiple virtualenvs easy
(see &lt;a href="http://www.jontourage.com/2011/02/09/virtualenv-pip-basics/"&gt;Virtualenv and pip Basics&lt;/a&gt; for examples).&lt;/p&gt;
&lt;h3&gt;Step 1: Install Virtualenv and Virtualenvwrapper&lt;/h3&gt;
&lt;p&gt;I'm installing virtualenv and virtualenvwrapper but will not be using only the later here.
I want the tool installed for potential future use, but for now,
I will only have a single virtual environment that I need to work with.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo pip install virtualenv
sudo pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 2: Create a Virtualenv&lt;/h3&gt;
&lt;p&gt;The following command creates a clean virtualenv devoid of any packages in a directory called &lt;code&gt;_notebook&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv --no-site-packages _notebook
New python executable in _notebook/bin/python
Installing Setuptools........................................done.
Installing Pip...............................................done.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The way virtualenv works is that it creates the directory &lt;code&gt;_notebook&lt;/code&gt; symlinks to your global python installation, as you can see clearly using the tree utility.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ tree -d _notebook
_notebook
├── bin
├── include
│   └── python2.7 -&amp;gt; /usr/include/python2.7
├── lib
│   └── python2.7
│       ├── distutils
│       ├── encodings -&amp;gt; /usr/lib/python2.7/encodings
│       ├── lib-dynload -&amp;gt; /usr/lib/python2.7/lib-dynload
│       └── site-packages
│           ├── _markerlib
│           ├── pip
│           │   ├── backwardcompat
│           │   ├── commands
│           │   ├── vcs
│           │   └── vendor
│           │       ├── distlib
│           │       │   └── _backport
│           │       └── html5lib
│           │           ├── filters
│           │           ├── serializer
│           │           ├── treebuilders
│           │           ├── treewalkers
│           │           └── trie
│           ├── pip-1.4.1-py2.7.egg-info
│           ├── setuptools
│           │   ├── _backport
│           │   │   └── hashlib
│           │   ├── &lt;span style="color: #336666"&gt;command&lt;/span&gt;
│           │   └── tests
│           └── setuptools-0.9.8-py2.7.egg-info
└── &lt;span style="color: #336666"&gt;local&lt;/span&gt;
    ├── bin -&amp;gt; /home/jeff/myblog/_notebook/bin
    ├── include -&amp;gt; /home/jeff/myblog/_notebook/include
    └── lib -&amp;gt; /home/jeff/myblog/_notebook/lib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the &lt;code&gt;-–no-site-packages&lt;/code&gt; option is for you to isolate your environment from the main site packages directory.
By default, virtualenv will symlink to your system’s site-packages if you install a package in the virtualenv that is already installed on your system.
If you use the &lt;code&gt;--no-site-packages&lt;/code&gt; option you are starting with a bare Python install and will need to install all the things you have forgotten about since the first time you set your system.
Do you want this virtualenv to use packages from your system site-packages, if not, then&lt;br /&gt;
pass in the &lt;code&gt;-–no-site-packages&lt;/code&gt; switch when creating your virtualenv.&lt;/p&gt;
&lt;h3&gt;Step 3: Use the Environment&lt;/h3&gt;
&lt;p&gt;So we now have a new virtualenv, it now has to be activated. To do this, change to the virtualenv directory you just created and source the activation script from the bin directory in your virtualenv:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;~/myblog$ &lt;span style="color: #336666"&gt;cd&lt;/span&gt; _notebook
~/myblog/_notebook$ &lt;span style="color: #336666"&gt;source&lt;/span&gt; bin/activate
&lt;span style="color: #555555"&gt;(&lt;/span&gt;_notebook&lt;span style="color: #555555"&gt;)&lt;/span&gt;~/myblog/_notebook$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that the command prompt is modified after the sourcing.
When you activate a virtualenv, it modifies your current prompt to prepend the name of the virtualenv in parentheses so that you know at a glance you have it active.
Other than the prompt change, the main changes the activate script makes are:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #003333"&gt;VIRTUAL_ENV&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/home/jeff/myblog/_notebook&amp;quot;&lt;/span&gt;
&lt;span style="color: #336666"&gt;export&lt;/span&gt; VIRTUAL_ENV

&lt;span style="color: #003333"&gt;_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$PATH&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;PATH&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color: #003333"&gt;$VIRTUAL_ENV&lt;/span&gt;&lt;span style="color: #CC3300"&gt;/bin:&lt;/span&gt;&lt;span style="color: #003333"&gt;$PATH&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;&lt;/span&gt;
&lt;span style="color: #336666"&gt;export&lt;/span&gt; PATH
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This sets up an environment variable with the virtualenv path and also modifies your path so the bin directory in the virtualenv is first.
This is important since running python from the command line when your virtualenv is active runs it from there instead of your system path.
This means through the magic of the Python site module the site-packages in your virtualenv will be in sys.path and not your system’s site-packages.&lt;/p&gt;
&lt;h3&gt;Step 4: Installing Packages in Virtualenv&lt;/h3&gt;
&lt;p&gt;Now that we are in the virtual envirnment, if you list the installed python packages,
you'll find very little:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #555555"&gt;(&lt;/span&gt;_notebook&lt;span style="color: #555555"&gt;)&lt;/span&gt;~/myblog/_notebook$ pip freeze
&lt;span style="color: #003333"&gt;argparse&lt;/span&gt;&lt;span style="color: #555555"&gt;==&lt;/span&gt;1.2.1
&lt;span style="color: #003333"&gt;wsgiref&lt;/span&gt;&lt;span style="color: #555555"&gt;==&lt;/span&gt;0.1.2
&lt;span style="color: #555555"&gt;(&lt;/span&gt;_notebook&lt;span style="color: #555555"&gt;)&lt;/span&gt;~/myblog/_notebook$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can simply install your desired additional packages using pip.
This does not require &lt;code&gt;sudo&lt;/code&gt; access, as all the packages are installed in the virtualenv  &lt;code&gt;_notebook&lt;/code&gt; created.
For my IPython Notebook blogging effort, I require the following packages:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;pip install numpy
pip install matplotlib
pip install pandas
pip install scipy
easy_install yolk
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To install the basemap for matplotlib, you'll need to &lt;a href="http://matplotlib.org/basemap/users/installing.html"&gt;download&lt;/a&gt; the source from Matplotlib Org website.
Basemap is an add-on toolkit for matplotlib that lets you plot data on map projections with coastlines, lakes, rivers and political boundaries.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;tar -zxvf basemap-1.0.7.tar.gz
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; basemap-1.0.7
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; geos-3.3.3
&lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;GEOS_DIR&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;/home/jeff/myblog/_notebook/lib&amp;quot;&lt;/span&gt;
./configure --prefix&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;$GEOS_DIR&lt;/span&gt;
make; make install
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ..
python setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 5: Installing IPython&lt;/h3&gt;
&lt;p&gt;The final install is IPython version 1.1.0 itself, but there are several dependencies packages that should be installed.
These dependencies should be load automatically, but in case there are problems,
they are &lt;a href="http://ipython.org/ipython-doc/stable/install/install.html"&gt;documented on the IPython website&lt;/a&gt;.
You can download the latest IPython package from the &lt;a href="https://pypi.python.org/pypi/ipython"&gt;Python Org website&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;unzip ipython-1.1.0.zip 
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ipython-1.1.0
easy_install ipython&lt;span style="color: #555555"&gt;[&lt;/span&gt;all&lt;span style="color: #555555"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can validate that IPython has been installed by running &lt;code&gt;ipython notebook&lt;/code&gt;.
I did this by moving my IPython Notebooks that were destine for my blog to a directory called &lt;code&gt;ipnb&lt;/code&gt; within &lt;code&gt;_notebook&lt;/code&gt;.
It is with &lt;code&gt;~/myblog/_notebook/ipnb&lt;/code&gt;.  More on this in another posting.&lt;/p&gt;
&lt;h2&gt;Virtualenv Usage&lt;/h2&gt;
&lt;p&gt;For further usage information, check out the tutorials:
&lt;a href="http://simononsoftware.com/virtualenv-tutorial/"&gt;Virtualenv Tutorial&lt;/a&gt;,
and &lt;a href="http://www.silverwareconsulting.com/index.cfm/2012/7/24/Getting-Started-with-virtualenv-and-virtualenvwrapper-in-Python"&gt;Getting Started with virtualenv and virtualenvwrapper in Python&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an environment called "foobar": &lt;code&gt;virtualenv foobar&lt;/code&gt;.  With this, virtualenv inherits packages from the system's default site-packages directory.  This is especially useful when relying on certain packages being available, so you don't have to go through installing them in every environment.  If you wish to install everything fresh, use &lt;code&gt;virtualenv --no-site-packages foobar&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Activate the environment by sourcing its activate script, which is located in the environment's bin/ directory: &lt;code&gt;source foobar/bin/activate&lt;/code&gt;.  This will change your $PATH so its first entry is the virtualenv’s bin/ directory.&lt;/li&gt;
&lt;li&gt;To install a package in your virtual environment, make sure the environment is active an then use &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;easy_install&lt;/code&gt; or any of the standard python package management tools. You'll see that executable scripts are placed in foobar/bin/ and eggs in foobar/lib/python2.X/site-packages/.&lt;/li&gt;
&lt;li&gt;Yolk is a small command line tool which can, among other things, list the currently installed Python packages in your environment: &lt;code&gt;yolk -l&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To leave an environment, simply run &lt;code&gt;deactivate&lt;/code&gt;. (Note: if you run &lt;code&gt;yolk -l&lt;/code&gt; once deactivated, you'll get no packages listed.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Warning Message&lt;/h2&gt;
&lt;p&gt;For reasons I don't full understand, after installing virtualenv, I repeatedly
got the warning message below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;/usr/local/bin/virtualenv:5: UserWarning: Module dap was already imported from None, but /usr/lib/python2.7/dist-packages is being added to sys.path
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I took the advice given at the posting "&lt;a href="http://jhshi.me/2013/04/13/userwarning-module-dap-was-already-imported-from-none/"&gt;UserWarning: Module Dap Was Already Imported From None&lt;/a&gt;" to clear the problem.&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="IPython Notebook"></category><category term="Virtualenv"></category></entry><entry><title>I’m Moving so I can Blog with IPython Notebook</title><link href="/posts/2013/Sep/01/im-moving-so-i-can-blog-with-ipython-notebook/" rel="alternate"></link><published>2013-09-01T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-09-01:posts/2013/Sep/01/im-moving-so-i-can-blog-with-ipython-notebook/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.dummies.com/store/product/Signals-and-Systems-For-Dummies.productCd-111847581X,navId-322489,descCd-description.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="S&amp;S logo" src="/images/SignalsandSystemsForDummies.jpg" width="20%" height="20%" /&gt;
&lt;/a&gt;
To gain a deeper understanding of the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki" title="GNU Radio home page"&gt;GNU Radio&lt;/a&gt; software, I want to rebuild
some skills &amp;amp; insights in digital signal processing.  But before I take on this topic,
I want to refresh my signals &amp;amp; systems skills I learned long ago while in college.
I have chosen Mark Wickert’s book, &lt;a href="http://www.dummies.com/store/product/Signals-and-Systems-For-Dummies.productCd-111847581X,navId-322489,descCd-description.html" title="The book Signals and Systems For Dummies web site"&gt;Signals and Systems For Dummies&lt;/a&gt;, to do this.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.packtpub.com/learning-ipython-for-interactive-computing-and-data-visualization/book"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" alt="S&amp;S logo" src="/images/learning-ipython-for-interactive-computing-and-data-visualization.jpg" width="20%" height="20%" /&gt;
&lt;/a&gt;
Go ahead and laugh if you wish, but I got good reasons for choosing this book.
I like its brevity, since I don’t want to spend a great deal of time re-honing
these old skills (I expect them to come back quickly), and its use of &lt;a href="http://ipython.org/" title="IPython's web page"&gt;IPython&lt;/a&gt;
will help me master a powerful tool that I foresee using within this blog;
specifically the &lt;a href="http://ipython.org/notebook.html" title="IPython Notebook's web page"&gt;IPython Notebook&lt;/a&gt;.  To begin learning IPython, I’m currently
reading &lt;a href="http://www.packtpub.com/learning-ipython-for-interactive-computing-and-data-visualization/book" title="The books web page"&gt;Learning IPython for Interactive Computing and Data Visualization&lt;/a&gt; by Cyrille Rossant.
So it’s currently “back to school” for me on many levels.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://ipython.org/notebook.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="S&amp;S logo" src="/images/ipython-notebook-screen.png" width="20%" height="20%" /&gt;
&lt;/a&gt;
So this brings me to the topic of this posting.  Initially I considered moving
my blog off of WordPress.com to a WordPress.org hosting site.  This should allow
me to post IPython Notebook pages.  WordPress.com is very restrictive on what you can do with your blog,
but the WordPress software, when &lt;a href="http://www.wpbeginner.com/beginners-guide/self-hosted-wordpress-org-vs-free-wordpress-com-infograph/"&gt;self hosted via WordPress.org&lt;/a&gt;, can provide you a great deal of blogging freedom.
I need to take advantage of some of the powerful WordPress Plugins and WordPress.com
will not support any of them.  Moving to a self-hosted WordPress blog doesn’t
appear to be very difficult.  The biggest trick will be picking the right web hosting
company that is strong WordPress supporter who will make it easily move my blog from WordPress.com to WordPress.org.&lt;/p&gt;
&lt;p&gt;I then took a closer look at how others have successfully using IPython Notebook for blogging.
I took a very close look at &lt;a href="http://carlboettiger.info/"&gt;Carl Boettiger’s&lt;/a&gt; &lt;a href="http://carlboettiger.info/2012/09/28/Welcome-to-my-lab-notebook.html"&gt;Online Lab Notebook&lt;/a&gt;.
This introduced me to &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; and &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;.
With these tools you can create an archived, static site that is hosted for free.
I saw the synergy between these tools and how I work with my Linux box, electronics,
and now IPython and its seemed like the way to go.&lt;/p&gt;
&lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory (representing the raw form of a website), runs it through Textile or Markdown and Liquid converters, and spits out a complete, static website suitable for serving with Apache or your favorite web server.
The site “&lt;a href="http://www.andrewmunsell.com/tutorials/jekyll-by-example/index.html#why-jekyll"&gt;Learning Jekyll By Example: Build a Jekyll Website, Start to Finish&lt;/a&gt;” says it well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jekyll can be hosted on any web hosting service that serves static files.&lt;/li&gt;
&lt;li&gt;Jekyll-powered websites are also extremely secure.&lt;/li&gt;
&lt;li&gt;Jekyll is mainly targeted at tech-savvy bloggers.&lt;/li&gt;
&lt;li&gt;But what Jekyll lacks in newbie-friendliness it makes up for in power and flexibility.&lt;/li&gt;
&lt;li&gt;Jekyll allows you, the content author, to display your work as you see fit, without the typical restrictions imposed by other blogging platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installing Jekyll&lt;/h3&gt;
&lt;p&gt;Following the instructions on the &lt;a href="http://jekyllrb.com/docs/quickstart/"&gt;Jekyll&lt;/a&gt; and &lt;a href="http://askubuntu.com/questions/305884/how-to-install-jekyll"&gt;Ubuntu&lt;/a&gt; web sites,
I used the following to install the required software and get a skeleton established for my blog.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ruby1.9.1-dev
sudo apt-get install rdiscount
sudo gem install jekyll
sudo apt-get install rake
jekyll new myblog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What is produced looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="terminal image" src="/images/myblog-directory-structure.png" title="directory tree structure created by Jekyll" /&gt;&lt;/p&gt;
&lt;p&gt;To see how this will be rendered on within a browser, execute &lt;code&gt;jekyll serve --watch&lt;/code&gt; within &lt;code&gt;~/myblog&lt;/code&gt;
and then set your browse to &lt;code&gt;http://localhost:4000&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Moving Blog from WordPress.com&lt;/h3&gt;
&lt;p&gt;Next, I want to import my old website to myblog and convert it to Jekyll.
First I need to export my site, and I can do this by going to
&lt;code&gt;https://jeffskinnerbox.wordpress.com/wp-admin/export.php&lt;/code&gt; and, executing the commands there,
place the HTML file created in a temporary place.  Then install these tools:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo gem install jekyll-import --pre
sudo gem install hpricot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To do the actual conversion and down loading of the site, you use the command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;jekyll import wordpressdotcom --source ~/tmp/jeff039sskinnerbox.wordpress.2013-08-14.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating Your Local Git Repository&lt;/h3&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;cd ~/myblog
git init
git add .
git commit -m &amp;#39;Initial commit&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating the GitHub Page (Remote Repository)&lt;/h3&gt;
&lt;p&gt;Github Pages provides a simple service for serving up static HTML from a GitHub repository.
It’s the perfect place for project documentation, when combined with Jekyll it can
support a blog.  The post &lt;a href="http://xlson.com/2010/11/09/getting-started-with-github-pages.html"&gt;Getting started with GitHub Pages&lt;/a&gt; provide a good overview.
The steps to get the web site up and running go like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On my GitHub site, I created a new Repository call jeffskinnerbox.github.com &lt;/li&gt;
&lt;li&gt;From the PC, load the web site to the GitHub Repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git remote add origin http://github.com/jeffskinnerbox/jeffskinnerbox.github.com
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Verify that your web page is available by going to &lt;a href="http://jeffskinnerbox.github.com"&gt;&lt;code&gt;http://jeffskinnerbox.github.com&lt;/code&gt;&lt;/a&gt;.  This could take up to 10 minutes for GitHub the first time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Using a Custom Domain Name&lt;/h3&gt;
&lt;p&gt;GitHub Pages allows you to direct a domain name of your choice at your GitHub Page.
My custom domain name is &lt;code&gt;www.jeffskinnerbox.me&lt;/code&gt;. To do the setup, I found the postings
&lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages"&gt;Setting up a custom domain with Pages&lt;/a&gt; and 
&lt;a href="http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap/"&gt;Setting the DNS for GitHub Pages on Namecheap&lt;/a&gt; helpful.  It goes like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Telling the GitHub server to serve from the custom domain by creating a file named &lt;code&gt;CNAME&lt;/code&gt; in the root of your site and put string with the domain (i.e. jeffskinnerbox.me) into the file.&lt;/li&gt;
&lt;li&gt;Go to your Domain Name Registrar and make the changes outline in the posts reference above.  It may take as long as 24 hours for these changes to take effect.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Closing&lt;/h3&gt;
&lt;p&gt;All in all, I am very pleased with Jekyll so far. It did take a little longer than I’d have thought to migrate this blog as it is from WordPress, while also preserving the site’s characteristics, but it didn’t take too long and I love the results.
I doubt I would ever want to look back! &lt;/p&gt;</summary><category term="IPython"></category><category term="Jekyll"></category><category term="Bootstrap"></category><category term="Blog"></category></entry><entry><title>Building My Linux Box...The Implementation</title><link href="/posts/2013/Aug/01/building-my-linux-box-the-implementation/" rel="alternate"></link><published>2013-08-01T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-08-01:posts/2013/Aug/01/building-my-linux-box-the-implementation/</id><summary type="html">&lt;p&gt;&lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Ubuntu 13.04 Raring Ringtail" src="/images/ubuntu-13-04-raring-ringtail.jpg" width="8%" height="8%" /&gt;
In an earlier post, I outlined &lt;a href="http://jeffskinnerbox.me/posts/2013/Apr/28/building-my-linux-box-the-plan/"&gt;my plan for building a Linux Box&lt;/a&gt;.  Here I will post how that plan was ultimately implemented. Life has taught me that all good planning is ultimately undone, and at some point, you must improvise.  That has also proven true for this quest to up grade my computation.  Specifically:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;After ordering all the hardware, it came to me that it was dumb to attempt to reuse my old semi-reliable, slow CD drive.  So I purchase the HP 24X Multiformat DVD/CD Writer (dvd1260i) at Best Buy for 40 dollars.&lt;/li&gt;
    &lt;li&gt;I discovered that the my old PC had &lt;a href="http://www.webopedia.com/TERM/A/ATA.html"&gt;ATA&lt;/a&gt; hard drives (commonly called an IDE drive) and my new Mobo only supports &lt;a href="http://www.webopedia.com/TERM/S/Serial_ATA.html"&gt;SATA&lt;/a&gt; (SATA 3Gb/s &amp;amp; 6GB/s and it includes an external eSATA port).   This blows my plan to reuse my existing hard drives ... stupid me, I should have checked.  I did a quick scan for ATA controller cards and found a few (not many) for 15 to 30 dollars.  I could buy the card and make this work but it doesn't seem like a good investment.  The drives are 400G drives and has a maximum data transfer rate of about 133MB/s (i.e. ATA/66).  The maximum data transfer rates of SATA II and SATA III are 300 MB/s and 600 MB/s, respectively.  I can buy a Seagate - Barracuda 500GB SATA II Internal Hard Drive for $70.  Given my objective to increase the performance of my computing experience, buying a new SATA III hard drive should have been part of the original plan.&lt;/li&gt;
    &lt;li&gt;After &lt;a href="http://www.cyberciti.biz/tips/raid-hardware-vs-raid-software.html"&gt;reading up on RAID&lt;/a&gt; and the Intel Rapid Storage Technology (RST), I concluded that it would be best to do a Software Raid and not use RST.&lt;/li&gt;
    &lt;li&gt;While I assumed in my original plan that I would dual boot the box with Linux and MS Windows, the &lt;a href="http://jeffskinnerbox.wordpress.com/2013/04/28/building-my-linux-box-the-plan/"&gt;comment from armahillo@gmail.com &lt;/a&gt;convinced me of what I suspected I should do; and that was to make &lt;a href="http://www.winehq.org/"&gt;wine&lt;/a&gt;, &lt;a href="http://www.mono-project.com/Main_Page"&gt;mono&lt;/a&gt;, and &lt;a href="http://www.playonlinux.com/"&gt;PlayOnLinux&lt;/a&gt; work for me.  While I haven't stressed them, so far so good.  I have not installed VirtualBox and I suspect I will not ... unless I get desperate.&lt;/li&gt;
    &lt;li&gt;I was planning to reuse my old keyboard and mouse, but you know, I hated that keyboard and the mouse was already acting badly and about to die on me.  So I ended up replacing them with sometime worthy of my new system.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Configuring Ubuntu&lt;/h2&gt;
You'll find many recommendations on how to jazz up a newlly install Ubuntu system.  I found some of these suggestions useful:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://debianhelp.wordpress.com/2012/09/28/to-do-list-after-installing-ubuntu-13-04-aka-raring-ringtail-operating-system/"&gt;To Do List After installing Ubuntu 13.04 aka Raring Ringtail OS&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.noobslab.com/2013/04/tweaksthings-to-do-after-install-of.html"&gt;Things/Tweaks to do after Install of Ubuntu 13.04 Raring Ringtail&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mambochimbo.blogspot.com/2013/05/to-do-top-things-to-do-after-installing.html"&gt;Top things to do after installing Ubuntu 13.04&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://fabhax.com/technology/change-wallpapers-in-gnome-3.4/"&gt;Change desktop, login and lock screen wallpapers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Installing "dot" Files&lt;/h2&gt;
Like may, over the years I have made a large time investment in tuning my &lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.vimrc&lt;/code&gt;, and other such resource files.  I installed my beloved "dot" files from my &lt;a href="https://github.com/jeffskinnerbox"&gt;Git repository&lt;/a&gt;.
&lt;h2&gt;Installing Google Chromium and Chrome&lt;/h2&gt;
Chromium is a fully open-source version of Google's Chrome, and for licensing reasons, it doesn't come packaged with the integrated Flash or a native PDF reader.  Lucky, there is a work around and that is documented here: &lt;a href="http://www.omgubuntu.co.uk/2010/07/use-google-chrome%E2%80%99s-native-pdf-reader-in-chromium"&gt;Use Google Chrome’s Native PDF reader in Chromium&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I prefer Chrome to Chromium, and luckily, you can install it on Ubuntu.
Just go to &lt;a href="https://www.google.com/intl/en-US/chrome/browser/desktop/index.html"&gt;Chrome's download site&lt;/a&gt; and follow the instructions.&lt;/p&gt;
&lt;h2&gt;Installing My Squeeze Box&lt;/h2&gt;

&lt;p&gt;I have a &lt;a href="http://www.mysqueezebox.com/index/Home"&gt;SqueezeBox&lt;/a&gt; device in my workshop for playing music.
Specifically, I have the Squeezebox Classic (&lt;a href="http://www.logitech.com/assets/32377/squeezeboxclassic-ownersguide.pdf"&gt;Owner's Guide&lt;/a&gt;).
On my old PC, I had installed the SlimServer which would provide the music stream.  I want to now reestablish that capability on the Linux box. The post &lt;a href="http://www.ehow.com/how_7314755_use-squeezebox-ubuntu.html"&gt;How to Use Squeezebox With Ubuntu&lt;/a&gt; and the &lt;a href="http://wiki.slimdevices.com/index.php/DebianPackage"&gt;Logitech SqueezeBox Wiki&lt;/a&gt; gives you all the information you should need.&lt;/p&gt;
&lt;p&gt;The Ubuntu (Debian) software for the &lt;a href="http://wiki.slimdevices.com/index.php/Logitech_Media_Server"&gt;SqueezeCenter&lt;/a&gt; or now called the Logitech Media Server (formerly known as SlimServer) is maintained by Logitech, and therefore, will not be installed via &lt;code&gt;get-apt&lt;/code&gt;.  To make it part of the package resource list (used to locate archives of the package distribution system in use on the system), you need to update the &lt;a href="http://linux.die.net/man/5/sources.list"&gt;&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/a&gt; file.  To do this, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/apt/sources.list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Scroll to the bottom of the file and enter the following information and then save:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# This software is not part of Ubuntu, but is offered by Logitech for the&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Logitech Media Server (formerly known as SqueezeCenter or SlimServer).&lt;/span&gt;
deb http://debian.slimdevices.com stable main
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get remove --purge logitechmediaserver
sudo apt-get update
sudo apt-get install logitechmediaserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now open a browser and type "&lt;code&gt;http://desktop:9000&lt;/code&gt;" as the URL, where "desktop" is the name of your Linux system.  This brings you to a Squeezebox interface to configure the system.&lt;/p&gt;
&lt;p&gt;If you want to start/stop Logitech Media Server manually you can run:
&lt;code&gt;sudo /etc/init.d/logitechmediaserver stop&lt;/code&gt;,
&lt;code&gt;sudo /etc/init.d/logitechmediaserver start&lt;/code&gt;,
and
&lt;code&gt;sudo /etc/init.d/logitechmediaserver restart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Keep in mind that the Squeeze Box Server uses port 9000.
Make sure the port is open with the following:
&lt;code&gt;netstat -an | grep 9000&lt;/code&gt;.
If the you don't get any output or the line doesn't contain "LISTEN",
then the port is closed or there is no process (i.e &lt;code&gt;squeezeboxserver&lt;/code&gt;) listening to it.
Use these procedures to &lt;a href="http://www.tixati.com/optimize/open-ports-linux.html"&gt;open ports on a Linux firewall&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Because of a bug (conflict with the version of Perl I'm using),
    I had to install a beta version directly using&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# See http://forums.slimdevices.com/showthread.php?101237-Logitech-Media-Server-7-8-0-now-available!&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Download the Debian package from http://downloads.slimdevices.com/nightly/?ver=7.8&lt;/span&gt;
sudo dpkg -i logitechmediaserver_7.8.1~1411629722_all.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Someone at Logitech had the brilliant idea that MP3s and other audio files
should be stored in an online service a while back,
something that doesn't sit well with me, I prefer to keep them on my LAN.
Consider this to &lt;a href="http://www.instructables.com/id/Wall-Mounted-SqueezePlayer-with-Raspberry-Pi/?ALLSTEPS"&gt;roll your own Squeezebox with a Raspberry Pi&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Configuring Printers&lt;/h2&gt;

&lt;h3&gt;Configuring Samsung SCX-4521F Printer/Scanner&lt;/h3&gt;
&lt;p&gt;When it comes to printers and scanners, Ubuntu advices that you should simply plug it in and try!
Ubuntu claims that if it's a newer model USB scanner / printer,
it is likely that it will work immediately without any further driver or software installations.
I did this with my multifunction &lt;a href="http://www.samsung.com/levant/consumer/computers-peripherals/printers/mono-multi-function/SCX-4521F/XSG"&gt;Samsung SCX-4521F&lt;/a&gt;, which is a printer / scanner combination,
and the printer function worked but the scanner did not.&lt;/p&gt;
&lt;p&gt;After a bit of research, I discovered that Ubuntu uses
&lt;a href="https://www.cups.org/"&gt;Common UNIX Printing System (CUPS)&lt;/a&gt; for printer management.
CUPS is the standards-based,
open source printing system developed by Apple for OS X and other UNIX-like operating systems.
Assuming CUPS is installed (and it appeares to be with the Ubuntu package),
you can use a web browser to access it features.
To do this, open your web browser and got to &lt;a href="http://localhost:631/"&gt;&lt;code&gt;http://localhost:631/&lt;/code&gt;&lt;/a&gt;.
You'll find there an overview of CUPS, administrative functions, and even command-line utilities.&lt;/p&gt;
&lt;p&gt;I also discovered that &lt;a href="http://www.sane-project.org/"&gt;SANE (Scanner Access Now Easy)&lt;/a&gt; is the Linux way of scanning.
SANE supports a great many scanners, and the community around SANE adds support for more scanners all the time.
They claim, by and large, you should simple plug them in and your ready to scan.
However, some scanners, like mine, require more effort.&lt;/p&gt;
&lt;p&gt;SANE isn't typically installed with the Ubuntu distribution,
but you can install SANE via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install sane xsane libsane-extras
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SANE supplies a utility called
&lt;a href="http://linux.about.com/library/cmd/blcmdl1_scanimage.htm"&gt;&lt;code&gt;scanimage&lt;/code&gt;&lt;/a&gt; that is a command-line interface to control image acquisition
devices such as flatbed scanners or cameras.
When I ran it, I got the following results&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ scanimage --list-devices

No scanners were identified. If you were expecting something different,
check that the scanner is plugged in, turned on and detected by the
sane-find-scanner tool (if appropriate). Please read the documentation
which came with this software (README, FAQ, manpages).
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some more web research told me that my printer is a &lt;a href="http://www.bchemnet.com/suldr/supported.html"&gt;Xerox manufactured product&lt;/a&gt;
and I needed to install the Samsung Unified Linux Driver.
I did the repository setup and package install recommended at
&lt;a href="http://www.bchemnet.com/suldr/index.html"&gt;The Samsung Unified Linux Driver Repository&lt;/a&gt;.
The install I did was&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install suld-driver-4.00.39 suld-configurator-2-qt4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I then added my login user to the &lt;code&gt;scanner&lt;/code&gt; group via &lt;code&gt;sudo usermod -a -G scanner jeff&lt;/code&gt;.
I ran the command &lt;code&gt;sane-find-scanner&lt;/code&gt; to see if I'm now able to detect the scanner,
and I got the following disappointing results.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ sudo sane-find-scanner

  # sane-find-scanner will now attempt to detect your scanner. If the
  # result is different from what you expected, first make sure your
  # scanner is powered up and properly connected to your computer.

  # No SCSI scanners found. If you expected something different, make sure that
  # you have loaded a kernel SCSI driver for your SCSI adapter.

could not fetch string descriptor: Pipe error
could not fetch string descriptor: Pipe error
  # No USB scanners found. If you expected something different, make sure that
  # you have loaded a kernel driver for your USB host controller and have setup
  # the USB system correctly. See man sane-usb for details.

  # Not checking for parallel port scanners.

  # Most Scanners connected to the parallel port or other proprietary ports
  # can&amp;#39;t be detected by this program.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, I did some back tracking and discovered the following article:
&lt;a href="http://askubuntu.com/questions/231778/how-do-i-get-the-scanner-to-work-on-a-samsung-scx-4521f-multi-function-printer"&gt;How do I get the scanner to work on a Samsung SCX 4521F Multi function printer?&lt;/a&gt;
The work already done above covers step 1 of this article
and step 2 isn't relevant (since I can already print).
I need to perform step 3, that is&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install samsungmfp-scanner
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now I re-ran the command &lt;code&gt;scanimage --list-devices&lt;/code&gt; and got the following&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;$ scanimage --list-devices
device `smfp:SAMSUNG SCX-4x21 Series on USB:0&amp;#39; is a SAMSUNG SCX-4x21 Series on USB:0 Scanner
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but the &lt;code&gt;sudo sane-find-scanner&lt;/code&gt; got the same
"could not fetch string descriptor: Pipe error" error message when done earlier.&lt;/p&gt;
&lt;p&gt;After some more research and using &lt;code&gt;lsusb | grep Samsung&lt;/code&gt; and &lt;code&gt;cat /lib/udev/rules.d/40-libsane.rules | grep 3419&lt;/code&gt;,
I discover there is no udev rule for the SCX-4521F scanner.
Therefore, I place the following lines in &lt;code&gt;/lib/udev/rules.d/40-libsane.rules&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;# Samsung SCX-4521F
ATTRS{idVendor}==&amp;quot;04e8&amp;quot;, ATTRS{idProduct}==&amp;quot;3419&amp;quot;, ENV{libsane_matched}=&amp;quot;yes&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This still didn't give me a good run for &lt;code&gt;sudo sane-find-scanner&lt;/code&gt;
but the command &lt;code&gt;scanimage --test&lt;/code&gt; did give passing results.
Given this, I proceeded to using &lt;a href="http://linux.about.com/library/cmd/blcmdl1_xsane.htm"&gt;&lt;code&gt;xsane&lt;/code&gt;&lt;/a&gt; to test out some scanning (it worked!).
xsane is a X Window application and produces it output in &lt;a href="http://en.wikipedia.org/wiki/Netpbm_format"&gt;PNM format&lt;/a&gt;.
You can convert this format to PDF (and many other formats) via the utility &lt;a href="http://www.imagemagick.org/script/convert.php``"&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt;
(e.g. &lt;code&gt;convert outfile.pnm outfile.pdf&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;Configuring HP LaserJet P2035 for Google Cloud Printing&lt;/h3&gt;
&lt;p&gt;I later abandoned my Samsung printer for the HP LaserJet P2035;
a basic black &amp;amp; white workhorse.
Keeping the multipurpose Samsung working was just too much of a drain on my time.&lt;/p&gt;
&lt;p&gt;To get this printer working, I choose to use it with &lt;a href="http://www.google.com/cloudprint/learn/#utm_campaign=en&amp;amp;utm_source=en-ha-ww-sk&amp;amp;utm_medium=ha&amp;amp;utm_term=%2Bgoogle%20%2Bcloud%20%2Bprint"&gt;Google Cloud Print&lt;/a&gt;.
To do this, for the most part, I followed the post
"&lt;a href="http://askubuntu.com/questions/158874/how-can-i-easily-set-up-a-google-cloud-print-printer"&gt;How can I easily set up a Google Cloud Print printer?&lt;/a&gt;"
to get my Linux box configured with the Google Cloud Print service.
I then used "&lt;a href="http://askubuntu.com/questions/172716/how-can-i-import-my-printers-into-google-cloud-print"&gt;How can I import my printer(s) into Google Cloud Print?&lt;/a&gt;"
to get my printer established within Google Cloud Print.&lt;/p&gt;
&lt;p&gt;With Google Cloud Print, I'm not only able to print from my Linux desktop,
but from any Chrome browser when I'm logged in to my Google account.
So I can print from my Chromebook, Android Phone, etc.
The next step was to share this print with others,
and that can be done by following this posting:
&lt;a href="https://support.google.com/chromebook/answer/2541899?hl=en-GB&amp;amp;rd=1"&gt;Share your printer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;iPod Support&lt;/h2&gt;

&lt;p&gt;Ubuntu comes with &lt;a href="https://wiki.gnome.org/Apps/Rhythmbox"&gt;Rhythmbox&lt;/a&gt; as its music playing application and can be used to synch with a iPod.
Also, you'll want to install several Rhythmbox &lt;a href="http://www.webupd8.org/2012/08/rhythmbox-third-party-plugins-ubuntu-ppa.html"&gt;plugins&lt;/a&gt;.
That can be done via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:fossfreedom/rhythmbox-plugins
sudo add-apt-repository ppa:phw/musicbrainz
sudo apt-get update
sudo apt-get install rhythmbox-plugin-complete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After installing any of the above Rhythmbox plugins, enable them from the main menu: Rhythmbox &amp;gt; Plugins.&lt;/p&gt;
&lt;h2&gt;Setting-Up Harmony Remote&lt;/h2&gt;

&lt;p&gt;I have the &lt;a href="http://www.logitech.com/en-us/product/harmony-remote-650"&gt;Logitech Harmony 650 Universal Remote Control&lt;/a&gt; for my home theater system.  To program the device, it must be tethered to a web site via a Windows or Mac PC.  The Harmony web site does reference some &lt;a href="http://forums.logitech.com/t5/Harmony-Remotes/Harmony-Linux-support/td-p/294061"&gt;Linux support done by others&lt;/a&gt;.  The posting "&lt;a href="http://openattitude.com/2011/01/27/how-to-set-up-a-harmony-remote-using-linux/"&gt;How to set up a Harmony remote using Linux&lt;/a&gt;" and "&lt;a href="http://madabar.com/techblog/2011/09/09/logitech-harmony-universal-remote-linux-software-support/"&gt;Logitech Harmony Universal Remote Linux Software Support&lt;/a&gt;" give you the basics of what you need to do.  Within these sites you lean about the utilities &lt;a href="http://www.phildev.net/harmony/"&gt;&lt;code&gt;concordance&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;a href="http://sourceforge.net/projects/congruity/"&gt;congruity&lt;/a&gt;&lt;/code&gt;. The first utility provides most of the functionality of the Windows software provided by Logitech and the second is a GUI application for programming Logitech Harmony remote using concordance.  To install these utilities, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install concordance
sudo apt-get install congruity
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You also have to configure the web browser to ask what to do with download links. It is best to use Firefox and you can configure downloads via: Edit-&amp;gt;Preferences-&amp;gt;General-&amp;gt;Downloads-&amp;gt;Always ask me where to save files.&lt;/p&gt;
&lt;p&gt;Now plug the remote into the PC using the provided cable, and enter the command: &lt;code&gt;sudo concordance -i -v&lt;/code&gt;.  You should get a bunch of data and the word "Success", verifying that you can talk to the device.&lt;/p&gt;
&lt;p&gt;Now go through the following process:
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Plug in the remote via the provided USB cable.&lt;/li&gt;
    &lt;li&gt;Visit the Harmony Remote's member site &lt;a href="http://members.harmonyremote.com/EasyZapper/New/Main.asp?WebProcessAction=Start&amp;amp;ClassId=HarmonyProcess%2EProcLogin&amp;amp;RelativePath=ProcLogin%2F&amp;amp;ReturnUrl=%2FEasyZapper%2FUserHome%2Easp&amp;amp;AccountType=Normal&amp;amp;Error=&amp;amp;UserName=&amp;amp;Password=&amp;amp;BrowserType=Mozilla%2F5%2E0%20%28X11%3B%20Linux%20i686%29%20AppleWebKit%2F537%2E22%20%28KHTML%2C%20like%20Gecko%29%20Ubuntu%20Chromium%2F25%2E0%2E1364%2E160%20Chrome%2F25%2E0%2E1364%2E160%20Safari%2F537%2E22"&gt;URL&lt;/a&gt;.  This appears to be a legacy support site and Logitech site listed in the documentation with the device will not work under Linux.&lt;/li&gt;
    &lt;li&gt;Create an account or login into your existing account.&lt;/li&gt;
    &lt;li&gt;Skip/ignore the “you need to update your software” steps, and eventually a download prompt appears.&lt;/li&gt;
    &lt;li&gt;Choosing ‘open’ rather than ‘save’ impressively results in the Congruity graphical setup up launching.&lt;/li&gt;
    &lt;li&gt;Step through the setup boxes as prompted.&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
&lt;h2&gt;Setting-Up Keyboard &amp;amp; Mouse&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/logitech-wireless-illuminated-keyboard-k800.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Logitech Wireless Illuminated Keyboard K800" src="/images/logitech-wireless-illuminated-keyboard-k800.jpg?w=150" width="150" height="70" /&gt;
&lt;/a&gt;
 To improve my driving experience, I purchased the
&lt;a href="http://www.logitech.com/en-us/product/wireless-illuminated-keyboard-k800"&gt;Logitech Wireless Illuminated Keyboard K800&lt;/a&gt;
and the
&lt;a href="http://www.logitech.com/en-us/product/wireless-mouse-m510"&gt;Logitech M510 Wireless Mouse&lt;/a&gt;.
These devices use the &lt;a href="http://www.logitech.com/en-us/promotions/6072"&gt;Logitech Unifying wireless technology&lt;/a&gt;, which allows a single wireless receiver to connect with multiple Unifying devices.  I plugged in the mouse's receiver  and in short order the mouse was working.
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/logitech-m510-wireless-mouse.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" alt="Logitech M510 Wireless Mouse" src="/images/logitech-m510-wireless-mouse.jpg" width="75" height="57" /&gt;
&lt;/a&gt;
I was a bit concerned about the ability of the receiver to support multiple device (i.e. the keyboard) simultaneously under Linux.
Doing a quick search I found a post discussing how to do the &lt;a href="http://askubuntu.com/questions/113984/is-logitechs-unifying-receiver-supported"&gt;device pairing under Linux&lt;/a&gt;.  &lt;a href="https://lekensteyn.nl/logitech-unifying.html#ltunify"&gt;To install&lt;/a&gt; the &lt;a href="https://git.lekensteyn.nl/ltunify/"&gt;&lt;code&gt;ltunify&lt;/code&gt;&lt;/a&gt; pairing software, and do the pairing, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/src
git clone https://git.lekensteyn.nl/ltunify.git
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ltunify
make install-home
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;To list the devices that are paired: &lt;code&gt;sudo ltunify list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To pair a device: &lt;code&gt;sudo ltunify pair&lt;/code&gt;, then turn your wireless device off and on to start pairing.&lt;/li&gt;
&lt;li&gt;To unpair a device: &lt;code&gt;sudo ltunify unpair mouse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To get help: &lt;code&gt;sudo ltunity --help&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Mouse Xbindkeys&lt;/h2&gt;

&lt;p&gt;The M510 mouse has extra buttons on its left side and the scroll wheel  has a side-to-side click, but out of the box,the don't do anything under Linux.  It would be nice to make use of these extra buttons.  To address this problem, I found pointers in these posts: &lt;a href="http://ubuntuforums.org/showthread.php?t=1957300"&gt;How to get all those extra mouse buttons to work&lt;/a&gt;, &lt;a href="http://askubuntu.com/questions/24916/how-do-i-remap-certain-keys"&gt;How do I remap certain keys&lt;/a&gt;,  &lt;a href="http://blog.hanschen.org/2009/10/13/mouse-shortcuts-with-xbindkeys/"&gt;Mouse shortcuts with xbindkeys&lt;/a&gt;, and &lt;a href="http://forums.logitech.com/t5/Mice-and-Pointing-Devices/Guide-for-setup-Performance-MX-mouse-on-Linux-with-KDE/td-p/517167"&gt;Guide for setup Performance MX mouse on Linux (with KDE)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Basically, using&lt;a href="http://www.nongnu.org/xbindkeys/#utilisation"&gt; Xbindkeys&lt;/a&gt;, I want to map the mouse buttons with desired actions. I want to setup the M510 mouse extra buttons as follows:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Left-side Button&lt;/strong&gt;: &lt;strong&gt;up&lt;/strong&gt; mapped to &lt;strong&gt;Page Up&lt;/strong&gt; and &lt;strong&gt;down&lt;/strong&gt; mapped to &lt;strong&gt;Page Down&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;move left&lt;/strong&gt; mapped to &lt;strong&gt;Copy&lt;/strong&gt; and &lt;strong&gt;move right&lt;/strong&gt; mapped to &lt;strong&gt;Paste&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;press&lt;/strong&gt; mapped to &lt;strong&gt;Paste&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;a href="http://linux.die.net/man/1/xev"&gt;&lt;code&gt;xev&lt;/code&gt;&lt;/a&gt; prints the contents of X events by creating a window and then asks the X Server to send it events whenever anything happens to the window.  It's sort of a keyboard and mouse events sniffer.  If we know what event name the X Server gives to our buttons, then we can remap them. Using this program, we find out the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Left-side Button&lt;/strong&gt;: &lt;strong&gt;up&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button 9&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Left-side Button&lt;/strong&gt;: &lt;strong&gt;down&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button 8
&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;move left&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button 6&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;move right&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button 7&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;press&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Now we need a mechanism to re-map mouse (or keyboard) button inputs.  &lt;a href="https://wiki.archlinux.org/index.php/Xbindkeys"&gt;&lt;code&gt;Xbindkeys&lt;/code&gt;&lt;/a&gt; is is a X Windows program that enables us to bind commands to certain keys or key combinations on the keyboard and it will also work for the mouse.  The file  &lt;code&gt;~/.xbindkeysrc&lt;/code&gt; is what &lt;code&gt;xbindkeys&lt;/code&gt; uses as a configuration file to link a command to a key/button on your keyboard/mouse.  There is also &lt;code&gt;xbindkeys_config&lt;/code&gt; is an easy to use gtk program for configuring &lt;code&gt;xbindkeys&lt;/code&gt;. To install these tools, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install xautomation xbindkeys xbindkeys-config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To create your initial xbindkeys configuration file, just run the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;xbindkeys --defaults &amp;amp;gt; &lt;span style="color: #003333"&gt;$HOME&lt;/span&gt;/.xbindkeysrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The syntax of the contents of .xbindskesrc is simple and is illustrated below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# short comment&lt;/span&gt;
    &lt;span style="color: #CC3300"&gt;&amp;quot;command to start&amp;quot;&lt;/span&gt;
        associated key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;"command to start"&lt;/code&gt; is simply a shell command (that you can run from a terminal),  and &lt;code&gt;"associated key"&lt;/code&gt; is the key or button.&lt;/p&gt;
&lt;p&gt;Now, using an editor, update the &lt;code&gt;.xbindkeysrc&lt;/code&gt; file to include the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;# Do a Page Down when mouse left-side down button is pressed
&amp;quot;xte &amp;#39;key Page_Down&amp;#39;&amp;quot;
    b:8
# Do a Page Up when mouse left-side up button is pressed
&amp;quot;xte &amp;#39;key Page_Up&amp;#39;&amp;quot;
    b:9
# Move scroll wheel to the left to copy text
&amp;quot;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Shift_L&amp;#39; &amp;#39;key c&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Shift_L&amp;#39;&amp;quot;
    b:6
# Move scroll wheel to the right to paste text
&amp;quot;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Shift_L&amp;#39; &amp;#39;key v&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Shift_L&amp;#39;&amp;quot;
    b:7
# Press scroll wheel to paste text
&amp;quot;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Shift_L&amp;#39; &amp;#39;key v&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Shift_L&amp;#39;&amp;quot;
    b:2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To activate any modification of the &lt;code&gt;.xbindkeysrc&lt;/code&gt; configuration file, your have to restart xbindkeys.   This can be done via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;pkill xbindkeys
xbindkeys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Other useful resources are:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;xte&lt;/code&gt; is a program that generates fake input using the XTest extension&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;xvkbd&lt;/code&gt; is a virtual (graphical) keyboard program for X Window System which provides facility to enter characters onto other X clients by clicking on a keyboard displayed on the screen.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;xbindkeys_show&lt;/code&gt; is a program to show the grabbing keys used in xbindkeys&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Xmodmap"&gt;&lt;code&gt;xmodmap&lt;/code&gt;&lt;/a&gt; is a utility for modifying keymaps and pointer button mappings in &lt;a href="https://wiki.archlinux.org/index.php/Xorg"&gt;Xorg&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Moving from SplashID to KeePass&lt;/h2&gt;
I have been using the MS Windows based &lt;a href="https://www.splashid.com/"&gt;SplashID&lt;/a&gt; to store passwords, credit cards, account numbers, etc. securely on my PC and cell phone.  I got it to work under &lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt; but I'm considering Linux alternatives.  I'm growing tired of purchasing SplashID licenses and the user interface looks like it was designed in the 1970's.  I came across "&lt;a href="http://lifehacker.com/5529133/five-best-password-managers"&gt;Five Best Password Managers&lt;/a&gt;" which gave me the incentive to check out &lt;a href="http://keepass.info/"&gt;KeePass&lt;/a&gt;.  KeePass is a cross platform, open source password manager.  It is extendable via its plugin framework, where additional functionality can be added.  It looks like I can use &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox&lt;/a&gt; and &lt;a href="http://www.keepassdroid.com/"&gt;KeePassDroid&lt;/a&gt; to get the data on my cell phone.  I found these sites useful to get the job done:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.androidpolice.com/2011/03/30/tutorial-sync-passwords-across-computers-and-android-with-keepass/"&gt;Sync Passwords Across Computers And Android With KeePass&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://lifehacker.com/5063176/how-to-use-dropbox-as-the-ultimate-password-syncer"&gt;How to Use Dropbox as the Ultimate Password Syncer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The first step was to get KeePass installed in Ubuntu.  I found it on the &lt;a href="http://en.wikipedia.org/wiki/Ubuntu_Software_Center"&gt;Ubuntu Software Center&lt;/a&gt; or you can use:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install keepass2 keepass2-doc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I then exported the contents of my SplashID database to a &lt;a href="http://en.wikipedia.org/wiki/Comma-separated_values"&gt;CSV file&lt;/a&gt; and imported it into keepass2.  I set up the KeePass2 database within my Dropbox folder.  This way, it can be scych'ed with my cell phone. I then installed KeePassDroid on my cell phone, pointing it at the database with the cell phones Dropbox.  &lt;a href="http://www.keepassdroid.com/"&gt;KeePassDroid&lt;/a&gt; is a port of the KeePass password safe for the Android platform.&lt;/p&gt;
&lt;p&gt;There is some cleanup of the fields within the KeePass2 database, but the data is now accessable on both my PC and my cell phone.&lt;/p&gt;
&lt;h2&gt;Installing Slake Utility&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; is a team collaboration tool that replaced email with a chat app that
plugged in to all their favorite services like Twitter, GitHub, and Dropbox.
It organize your team conversations in open channels.
You can make a channel for a project, a topic, a team, etc.
but transparent view of all that’s going on.&lt;/p&gt;
&lt;p&gt;At the time of  writing this post,
Slake didn't have an offical tool for the Linux desktop,
but &lt;a href="http://www.makeuseof.com/tag/linux-loving-slack-users-heres-an-app-for-you/"&gt;ScudCloud&lt;/a&gt; provide the unofficial Slack client for Ubuntu.
&lt;a href="https://github.com/raelgc/scudcloud/"&gt;And it's open source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install the Slake client, and its spelling checker, do the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-add-repository -y ppa:rael-gc/scudcloud
sudo apt-get update
sudo apt-get install scudcloud
sudo apt-get install hunspell-en-us
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to use a Slack icon instead of ScudCloud
(which is not possible to include in this package due to copyright)&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo dpkg-divert --add --rename --divert /opt/scudcloud/resources/scudcloud.png.real /opt/scudcloud/resources/scudcloud.png
sudo cp ~/scudcloud.png /opt/scudcloud/resources/
sudo chmod +r /opt/scudcloud/resources/scudcloud.png
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Installing Wine&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt; allows you to run many Windows programs on Linux. Instead of simulating internal Windows logic like a virtual machine or emulator, Wine translates Windows API calls into Linux calls.  I used the following to install Wine:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:ubuntu-wine/ppa
sudo apt-get update
sudo apt-get install wine
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using Wine on Windows programs can be as simple  or complex, it all depends on the program.  &lt;a href="https://help.ubuntu.com/community/Wine"&gt;Ubuntu provides some guidance on how to use Wine&lt;/a&gt;, also check out &lt;a href="http://www.winehq.org/site/documentation"&gt;Wine Documentation&lt;/a&gt; and &lt;a href="http://wiki.winehq.org/HowTo"&gt;Wine HowTo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the time of writing of this post, the only thing I loaded via Wine was SplashID, which worked without any challenges.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ultimately, I abandoned Wine and installed VirtualBox.
See my posting titled "Having Fun with Wine, VirtualBox, and TurboTax".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Installing PlayOnLinux&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.playonlinux.com/en"&gt;PlayOnLinux&lt;/a&gt; is based on Wine, and so profits from all its features, yet it keeps the user from having to deal with all its complexity.  I also install this package, in part because it comes pre-configured to load some popular tools.  I used it to install Internet Explore (sometimes its the only browser you can get to work on a site), and Kindle.
&lt;h2&gt;Installing RAID&lt;/h2&gt;
RAID is an acronym for Redundant Array of Independent Disks and RAID as the first tier in your data protection strategy. It uses multiple hard disks storing the same data to protect against some degree of physical disk failure. The amount of protection it affords depends upon the type of RAID used.  I'm not going to go into all the types of RAID, nor their benefits, but you can find much of this information, and much more, in the following links:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://wiki.ubuntu.com/Raid"&gt;Raid&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://help.ubuntu.com/community/FakeRaidHowto"&gt;FakeRaidHowto&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://augmentedtrader.wordpress.com/2012/05/13/10-things-raid/"&gt;10 Surprising Facts About RAID&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Mdadm"&gt;Mdadm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
In my case, I had an existing disk drive (non-RAID), loaded with data, and I wanted to add an additional drive to make it a RAID.  This presents some challenges since you're attempting to preserve the data.  In this regard, I found the following links helpful:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://ascend4.org/Installing_Raid_1_on_Existing_Ubuntu_Server"&gt;Installing Raid 1 on Existing Ubuntu Server&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://ubuntuforums.org/showthread.php?t=1703904"&gt;Using MDADM to add RAID 1 setup to existing data drive&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Convert_a_single_drive_system_to_RAID"&gt;Convert a single drive system to RAID &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://feeding.cloud.geek.nz/posts/setting-up-raid-on-existing/"&gt;Setting up RAID on an existing Debian/Ubuntu installation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://linuxconfig.org/linux-software-raid-1-setup#h1-introduction"&gt;Software Raid 1 Setup&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://linhost.info/2012/05/configure-a-software-raid1-array-in-linux/"&gt;Configure Software RAID1 Array In Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
I had already installed one &lt;a href="http://en.wikipedia.org/wiki/Solid-state_drive"&gt;SSD&lt;/a&gt; and one &lt;a href="http://en.wikipedia.org/wiki/Hard_disk_drive"&gt;HHD&lt;/a&gt; disk drives in my system.  I then installed a third drive that matched the HHD drive.  My 128GB SSD has the device name of &lt;code&gt;/dev/sda1&lt;/code&gt; and mounted as &lt;code&gt;/boot&lt;/code&gt;.  The currently installed 1TB SATA HDD has the device name of &lt;code&gt;/dev/sdb1&lt;/code&gt; and mounted as /home.  The newly install 1TB SATA HDD has the device name of &lt;code&gt;/dev/sdc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Description of the procedures I used to create the RAID is as follows:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Physically install the additional hard drive.&lt;/li&gt;
    &lt;li&gt;Install &lt;a href="http://en.wikipedia.org/wiki/Mdadm"&gt;mdadm&lt;/a&gt;, which is the Linux utility used to manage software RAID devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install mdadm
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Partition the newly installed disk. Use the following inputs: n to establish a logic partition, p to make it a primary partition, 1  should be the partition number, use the same sectors as the currently installed drive, t to set the partition type, fd hex code type, p to print what the partition table will look like, w to write all of the changes to disk.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo fdisk /dev/sdc
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Create a single-disk RAID-1 array (aka degraded array) with the existing hard drive. (Note the "missing" keyword is specified as one of the devices. We are going to fill this missing device later with the new drive.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 missing /dev/sdc1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;At this point, if you do a &lt;code&gt;sudo fdisk -l | grep '^Disk'&lt;/code&gt;, you see a new disk, that being &lt;code&gt;/dev/md0&lt;/code&gt;.  This is the RAID but not yet fully created.&lt;/li&gt;
    &lt;li&gt;Make the file system (ext3 type like the currently installed hard drive) on the RAID device.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo mkfs -t ext3 -j -L RAID-ONE /dev/md0
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Make a mount point for the RAID and mount the device.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /mnt/raid1
sudo mount /dev/md0 /mnt/raid1&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Copy over the files form the original hard drive to the new hard drive using &lt;a href="http://en.wikipedia.org/wiki/Rsync"&gt;rsync&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -avxHAXS --delete --progress /home/* /mnt/raid1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Just  in case of a disaster, copy the original hard drive to the SSD &lt;code&gt;/dev/sda1&lt;/code&gt; root file system as /&lt;code&gt;home_backup.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo rsync -avxHAXS --delete --progress /home /home_backup
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;After the copy, to see the status of the RAID, use the command &lt;code&gt;sudo mdadm --detail /dev/md0&lt;/code&gt;.  What you see is that the &lt;code&gt;/dev/sdc1&lt;/code&gt; drives is in "active sync " state but no reference to the other drive.  When you do &lt;code&gt;cat /proc/mdstat&lt;/code&gt; you see "&lt;code&gt;md0 : active raid1 sdc1[1]&lt;/code&gt;" but again no reference to the other drive.&lt;/li&gt;
    &lt;li&gt;Edit your &lt;code&gt;/etc/fstab&lt;/code&gt; file and edit all references of &lt;code&gt;/dev/sdb1&lt;/code&gt; to &lt;code&gt;/dev/md0&lt;/code&gt; and reboot the system.  With this, &lt;code&gt;/dev/md0&lt;/code&gt; will be used as &lt;code&gt;/home&lt;/code&gt; on the next boot. This will free up the existing hard drive so it can be made ready for the RAID.&lt;/li&gt;
    &lt;li&gt;With fdisk, re-partition /dev/sdb1 with a partition of type fd. Use the following inputs: n to establish a logic partition, p to make it a primary partition, 1  should be the partition number, use the same sectors as the currently installed drive, t to set the partition type, fd hex code type, p to print what the partition table will look like, w to write all of the changes to disk.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo fdisk /dev/sdb1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Add &lt;code&gt;/dev/sdb1&lt;/code&gt; to your existing RAID array.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mdadm /dev/md0 --add /dev/sdb1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;The RAID array will now start to rebuild so that the two drives have the same data. Use the following command to check the status of the rebuild.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo mdadm -D /dev/md0
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;For Ubuntu, it seems it is also necessary to update the &lt;code&gt;/etc/mdadm/mdadm.conf&lt;/code&gt; file. If this is not done, the RAID device will not be mounted when you reboot the system. The solution is to run the following command on your system, once the RAID drive has been configured:&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo cp /etc/mdadm/mdadm.conf /etc/mdadm/mdadm.conf_backup
sudo mdadm --detail --scan &amp;gt;&amp;gt; /etc/mdadm/mdadm.conf
&lt;/pre&gt;&lt;/div&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Linux"></category><category term="Ubuntu"></category><category term="Squeeze Box"></category><category term="Harmony Remote"></category><category term="Chrome"></category><category term="Xbindkeys"></category><category term="KeePass"></category><category term="Wine"></category><category term="RAID"></category><category term="Google Cloud Print"></category></entry><entry><title>GNU Radio and Gqrx SDR Receiver</title><link href="/posts/2013/Jul/08/gnu-radio-and-gqrx-srd-receiver/" rel="alternate"></link><published>2013-07-08T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-07-08:posts/2013/Jul/08/gnu-radio-and-gqrx-srd-receiver/</id><summary type="html">&lt;p&gt;&lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/GNURadioCompanion"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="grc logo" src="/images/gnu_radio_logo.png" width="256" height="256" /&gt;
&lt;/a&gt;
In &lt;a href="http://jeffskinnerbox.wordpress.com/2013/05/26/rtl-sdr-software-defined-radio-sdr-for-20/"&gt;my last post&lt;/a&gt;, I was using the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/Hardware"&gt;RTL2832 TV tuner&lt;/a&gt; dongle to get a simple &lt;a href="http://en.wikipedia.org/wiki/Software-defined_radio"&gt;Software Defined Radio (SDR)&lt;/a&gt; operational.  I wanted to use the &lt;a href="http://sdrsharp.com/"&gt;SDR#&lt;/a&gt; program as my receiver but found that the MS Windows tool would not work and so I targeted &lt;a href="http://www.oz9aec.net/index.php/gnu-radio/gqrx-sdr"&gt;Gqrx&lt;/a&gt; as an alternative. Gqrx is dependent on the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;GNU Radio&lt;/a&gt;.  So in this post, I plan to get Gqrx and GNU Radio up and operational with the &lt;a href="http://rtlsdr.org/"&gt;RTL-SDR dongle&lt;/a&gt;.  I spend some time with other tools to help further verify (with mixed success) that GNU Radio is working.&lt;/p&gt;
&lt;p&gt;The contain here comes from multiple source and I attempt to list those sources below.  For a good video to get a sense of what your in for, check out this &lt;a href="http://dangerousprototypes.com/2013/05/22/tutorial-kali-linux-with-gnu-radio-gqrx-and-rtl-sdr-dongle/"&gt;video&lt;/a&gt;. Also, this &lt;a href="http://blog.opensecurityresearch.com/2012/06/getting-started-with-gnu-radio-and-rtl.html"&gt;post&lt;/a&gt; covers many of the topics here.&lt;/p&gt;
&lt;p&gt;GNU Radio is a free &amp;amp; open-source software development toolkit that provides signal processing blocks to implement software defined radios. It can be used with readily-available low-cost external RF hardware to create software-defined radios, or without hardware in a simulation-like environment. It is being used in hobbyist, academic, and commercial environments to support both wireless communications research and real-world radio systems. &lt;a href="http://radioware.nd.edu/documentation"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gqrx is an experimental AM, FM and Single Side Band (SSB) software defined receiver implemented using GNU Radio and the Qt GUI toolkit. Currently it works on Linux and can use the RTL_SDR dongles as input source.&lt;/p&gt;
&lt;p&gt;Also within this post, I venture out from gqrx to examine a few other tools.  I don't cover much territory, nor have much success.  The insperation to examine these other tools comes mainly from the lengthy post "&lt;a href="http://superkuh.com/rtlsdr.html#simple_ra"&gt;RTL-SDR and GNU Radio with Realtek RTL2832U [Elonics E4000/Raphael Micro R820T] software defined radio receiver&lt;/a&gt;".  Also check out "&lt;a href="http://blog.opensecurityresearch.com/2012/06/getting-started-with-gnu-radio-and-rtl.html"&gt;Getting Started with GNU Radio and RTL-SDR (on Backtrack)&lt;/a&gt;".
&lt;h2&gt;Build GNU Radio on Ubuntu&lt;/h2&gt;
The GNU Radio web site has &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/InstallingGR#Using-the-build-gnuradio-script"&gt;specific instructions&lt;/a&gt; and a build script for installing it on Ubuntu (I'm using version 13.04).  This process claims it may take 1-2 hours to do the install (for me it ran in 1 hour 14 minutes).  The steps are as follows:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/src
mkdir ~/gnuradio
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/gnuradio
wget http://www.sbrac.org/files/build-gnuradio &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod a+x ./build-gnuradio &lt;span style="color: #555555"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./build-gnuradio --verbose
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When prompted, tell it to proceed and give it &lt;code&gt;sudo&lt;/code&gt; privilege by typing "Y". Because of the &lt;code&gt;--verbose&lt;/code&gt; option, you will see a lot of text whizzing by as the &lt;code&gt;build-gnuradio&lt;/code&gt; script does its thing. You’ll also see a percentage complete indicator as the script works its way down it tasks.&lt;/p&gt;
&lt;p&gt;The GNU Radio build creates a large variety of tools which get installed into &lt;code&gt;/usr/local/bin&lt;/code&gt;.  You also notice that tools not directly related to GNU Radio are also created. I'll leave it for another time to understand and explain the GNU Radio environment.
&lt;h2&gt;The "Hello World" of GNU Radio&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/dial_tone-grc-home-jeff-gnu-radio-companion_006.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="dial_tone.grc - -home-jeff - GNU Radio Companion_006" src="/images/dial_tone-grc-home-jeff-gnu-radio-companion.png" width="250" height="138" /&gt;
&lt;/a&gt;
To verify that the software is working, best thing is to create the typical "Hello, World" program, just we might have done for our first foray into C++, Python, or other programming language.  In the world of GNU Radio, this program has come to be the phone dial tone. To do this, I followed the video &lt;a href="http://www.youtube.com/watch?v=xxe87CdIq-s"&gt;The "Hello World" of GNU Radio: Dial Tone&lt;/a&gt; and the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/TutorialsWritePythonApplications"&gt;gnuradio.org&lt;/a&gt;.  I did this using the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/GNURadioCompanion"&gt;GNU Radio Companion&lt;/a&gt; (executable located at &lt;code&gt;/usr/local/bin/gnuradio-companion&lt;/code&gt;).  GNU Radio Companion (GRC) is a graphical tool for creating signal flow graphical models and generating Python source code for the model created.&lt;/p&gt;
&lt;p&gt;GRC's generated flow and code for the "Hello, World" program is listed below. The Python code for the dial tone program was placed in the home directory, and in my case, it was called &lt;code&gt;dail_tone.py&lt;/code&gt;. While it can be executed via the &lt;code&gt;gnuradio-companion&lt;/code&gt;, it can also be executed via &lt;code&gt;python dial_tone.py&lt;/code&gt;. The user interface for the GRC and the corresponding Python code it generated is listed below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Gnuradio Python Flow Graph&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Title: Dial Tone&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Author: Jeff Irland&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Description: &amp;quot;Hello, World&amp;quot; program - produces phone dial tone&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Generated: Sat Jun 22 21:24:56 2013&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; analog
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; audio
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; blocks
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; eng_notation
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; gr
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; window
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.eng_option&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; eng_option
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.gr&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; firdes
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.wxgui&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; fftsink2
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.wxgui&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; forms
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.wxgui&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; scopesink2
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;grc_gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; wxgui &lt;span style="color: #006699; font-weight: bold"&gt;as&lt;/span&gt; grc_wxgui
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;optparse&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; OptionParser
&lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;wx&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;class&lt;/span&gt; &lt;span style="color: #00AA88; font-weight: bold"&gt;dial_tone&lt;/span&gt;(grc_wxgui&lt;span style="color: #555555"&gt;.&lt;/span&gt;top_block_gui):

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;__init__&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;):
        grc_wxgui&lt;span style="color: #555555"&gt;.&lt;/span&gt;top_block_gui&lt;span style="color: #555555"&gt;.&lt;/span&gt;__init__(&lt;span style="color: #336666"&gt;self&lt;/span&gt;, title&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Dial Tone&amp;quot;&lt;/span&gt;)
        _icon_path &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;/usr/share/icons/hicolor/32x32/apps/gnuradio-grc.png&amp;quot;&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;SetIcon(wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;Icon(_icon_path, wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;BITMAP_TYPE_ANY))

        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;# Variables&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate &lt;span style="color: #555555"&gt;=&lt;/span&gt; samp_rate &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;32000&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; noise_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #555555"&gt;.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;005&lt;/span&gt;

        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;# Blocks&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        _noise_slider_sizer &lt;span style="color: #555555"&gt;=&lt;/span&gt; wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;BoxSizer(wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;VERTICAL)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_text_box &lt;span style="color: #555555"&gt;=&lt;/span&gt; forms&lt;span style="color: #555555"&gt;.&lt;/span&gt;text_box(
            parent&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            sizer&lt;span style="color: #555555"&gt;=&lt;/span&gt;_noise_slider_sizer,
            value&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider,
            callback&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_noise_slider,
            label&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;noise_slider&amp;#39;&lt;/span&gt;,
            converter&lt;span style="color: #555555"&gt;=&lt;/span&gt;forms&lt;span style="color: #555555"&gt;.&lt;/span&gt;float_converter(),
            proportion&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; forms&lt;span style="color: #555555"&gt;.&lt;/span&gt;slider(
            parent&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            sizer&lt;span style="color: #555555"&gt;=&lt;/span&gt;_noise_slider_sizer,
            value&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider,
            callback&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_noise_slider,
            minimum&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            maximum&lt;span style="color: #555555"&gt;=.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;,
            num_steps&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt;,
            style&lt;span style="color: #555555"&gt;=&lt;/span&gt;wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;SL_VERTICAL,
            cast&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;float&lt;/span&gt;,
            proportion&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;Add(_noise_slider_sizer)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; scopesink2&lt;span style="color: #555555"&gt;.&lt;/span&gt;scope_sink_f(
            &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            title&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Scope Plot&amp;quot;&lt;/span&gt;
            sample_rate&lt;span style="color: #555555"&gt;=&lt;/span&gt;samp_rate,
            v_scale&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            v_offset&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            t_scale&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            ac_couple&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
            xy_mode&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
            num_inputs&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;,
            trig_mode&lt;span style="color: #555555"&gt;=&lt;/span&gt;gr&lt;span style="color: #555555"&gt;.&lt;/span&gt;gr_TRIG_MODE_AUTO,
            y_axis_label&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Counts&amp;quot;&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;Add(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;win)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; fftsink2&lt;span style="color: #555555"&gt;.&lt;/span&gt;fft_sink_f(
            &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            baseband_freq&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            y_per_div&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;,
            y_divs&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;,
            ref_level&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            ref_scale&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;2.0&lt;/span&gt;,
            sample_rate&lt;span style="color: #555555"&gt;=&lt;/span&gt;samp_rate,
            fft_size&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1024&lt;/span&gt;,
            fft_rate&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;15&lt;/span&gt;,
            average&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
            avg_alpha&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;None&lt;/span&gt;,
            title&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;FFT Plot&amp;quot;&lt;/span&gt;,
            peak_hold&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;Add(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;win)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; blocks&lt;span style="color: #555555"&gt;.&lt;/span&gt;add_vff(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;audio_sink_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; audio&lt;span style="color: #555555"&gt;.&lt;/span&gt;sink(&lt;span style="color: #FF6600"&gt;32000&lt;/span&gt;, &lt;span style="color: #CC3300"&gt;&amp;quot;pulse&amp;quot;&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_1 &lt;span style="color: #555555"&gt;=&lt;/span&gt; analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;sig_source_f(samp_rate, analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;GR_COS_WAVE, &lt;span style="color: #FF6600"&gt;350&lt;/span&gt;, &lt;span style="color: #555555"&gt;.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;sig_source_f(samp_rate, analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;GR_COS_WAVE, &lt;span style="color: #FF6600"&gt;440&lt;/span&gt;, &lt;span style="color: #555555"&gt;.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_noise_source_x_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_source_f(analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;GR_GAUSSIAN, noise_slider, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;)

        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;# Connections&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;audio_sink_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_1, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_noise_source_x_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;get_samp_rate&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;):
        &lt;span style="color: #006699; font-weight: bold"&gt;return&lt;/span&gt; &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;set_samp_rate&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;, samp_rate):
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate &lt;span style="color: #555555"&gt;=&lt;/span&gt; samp_rate
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sampling_freq(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_1&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sampling_freq(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sample_rate(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sample_rate(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;get_noise_slider&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;):
        &lt;span style="color: #006699; font-weight: bold"&gt;return&lt;/span&gt; &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;set_noise_slider&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;, noise_slider):
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; noise_slider
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_noise_source_x_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_amplitude(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_slider&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_value(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_text_box&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_value(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider)

&lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; __name__ &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    parser &lt;span style="color: #555555"&gt;=&lt;/span&gt; OptionParser(option_class&lt;span style="color: #555555"&gt;=&lt;/span&gt;eng_option, usage&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;%prog: [options]&amp;quot;&lt;/span&gt;)
    (options, args) &lt;span style="color: #555555"&gt;=&lt;/span&gt; parser&lt;span style="color: #555555"&gt;.&lt;/span&gt;parse_args()
    tb &lt;span style="color: #555555"&gt;=&lt;/span&gt; dial_tone()
    tb&lt;span style="color: #555555"&gt;.&lt;/span&gt;Run(&lt;span style="color: #336666"&gt;True&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When the GRC flow execution button is pressed, the scope and FFT plots are are created as shown below:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/dial-tone_005.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Dial Tone_005" src="/images/dial-tone_005.png" width="250" height="266" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The build for GNU Radio also installs the RTL-SDR software, so it would be wise to test GNU Radio with the RTL_SDR hardware and make sure everything is operating as expected.  I want to make a simple FM receiver, comparable to what was done via &lt;a href="http://kmkeen.com/rtl-demod-guide/index.html"&gt;&lt;code&gt;rtl_fm&lt;/code&gt;&lt;/a&gt; in &lt;a href="http://jeffskinnerbox.wordpress.com/2013/05/26/rtl-sdr-software-defined-radio-sdr-for-20/"&gt;RTL-SDR – Software Defined Radio (SDR) for $20&lt;/a&gt;. Something equivalent to:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;rtl_fm -W -f 99.5M | play -r 32k -t raw -e signed-integer -b 16 -c 1 -V1 -&lt;/code&gt;&lt;/p&gt;
Using the following postings as a guide:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=KWeY2yqwVA0"&gt;How To Build an FM Receiver with the USRP in Less Than 10 Minutes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://cegt201.bradley.edu/projects/proj2011/sdr/update_files/FM_radio_receiver.pdf"&gt;Construction of an FM Receiver&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://files.meetup.com/2179791/FM-Demo-by-GNU-Radio.pdf"&gt;Assembling an FM Receiver Like Blazes by GNU Radio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://blog.chris007.de/?p=391"&gt;Simple FM Receiver with OsmoSDR in GNURadio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://dutchgnuradio.blogspot.com/2013/04/rtl2832u-based-wide-band-fm-receiver.html"&gt;RTL2832U Based Wide Band FM receiver using GNU RADIO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
I had sufficient success to convince myself that GNU Radio was work.
&lt;h2&gt;Building Gqrx on Ubuntu&lt;/h2&gt;
Gqrx is a software defined AM, FM and SSB software defined radio receiver for RTL-SDR based dongles (as well as the &lt;a href="http://en.wikipedia.org/wiki/Universal_Software_Radio_Peripheral"&gt;Universal Software Radio Peripherals&lt;/a&gt; and &lt;a href="http://sdr.osmocom.org/trac/wiki/Hardware"&gt;Osmo SDR devices&lt;/a&gt;).  It features a  &lt;a href="http://en.wikipedia.org/wiki/Qt_(framework)"&gt;Qt GUI&lt;/a&gt;.  As a QT program, you'll need to make sure you have QT4 installed (version 5 will not work) and that you have the &lt;a href="http://en.wikipedia.org/wiki/Qt_Creator"&gt;&lt;code&gt;qtcreator&lt;/code&gt;&lt;/a&gt; tool is installed:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install qt4-default
sudo apt-get install phonon-backend-gstreamer
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now download the source for &lt;a href="http://www.oz9aec.net/index.php/gnu-radio/gqrx-sdr"&gt;Gqrx via its page on GitHub&lt;/a&gt;  and extract it into your target directory. The posting &lt;a href="http://www.thepowerbase.com/2012/06/getting-started-with-rtl-sdr/2/"&gt;Getting Started With RTL-SDR&lt;/a&gt; and the &lt;a href="https://github.com/csete/gqrx/blob/master/README.md"&gt;README&lt;/a&gt; on the GitHub site where useful in understanding how to do the install.  I did the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git clone git://github.com/csete/gqrx.git
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; gqrx
qmake gqrx.pro
make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, you should find the gqrx executable in &lt;code&gt;~/src/gqrx&lt;/code&gt; directory.  Start up via &lt;code&gt;./gqrx&lt;/code&gt; and you'll get the screen below (or set your values to equal this):
&lt;p&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/configure-i-o-devices_001.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Configure I-O devices_001" src="/images/configure-i-o-devices_001.png" width="301" height="346" /&gt;
&lt;/a&gt;
&lt;p&gt;
Click "OK" and the screen below will pop up.  Make sure you have the RTL-SDR dongle plugged in and select the button on the top left to start processing data.  I have tuned the radio to a local FM station at 85.7MHz and listen to Washington Nationals vs. Phillies baseball!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/gqrx-0-0-rtl0_004.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Gqrx 0.0 - rtl=0_004" src="/images/gqrx-0-0-rtl0_004.png" width="500" height="384" /&gt;
&lt;/a&gt;
&lt;h2&gt;Building Multimode Radio Receiver&lt;/h2&gt;
This radio receiver is capable of demodulating muitiple modes, specifically AM, FM, USB, LSB , WFM. TV-FM, PAL-FM. It's easy to use and  has an automated scanning and spectral zoom features where clicking on the spectrogram or panorama to tune to the frequency of interest.&lt;/p&gt;
&lt;p&gt;Multimode documentation is sparse to non existent. The posts "&lt;a href="http://foxgulch.com/WordPress/?p=615"&gt;Using the Realtek RTL2832 USB “dongle” as a gnuradio multimode receiver&lt;/a&gt;" and "&lt;a href="http://superkuh.com/rtlsdr.html#multimodeappnote"&gt;RTL-SDR and GNU Radio with Realtek RTL2832U [Elonics E4000/Raphael Micro R820T] software defined radio receiver&lt;/a&gt;" and "&lt;a href="http://blog.opensecurityresearch.com/2012/06/getting-started-with-gnu-radio-and-rtl.html"&gt;Getting Started with GNU Radio and RTL-SDR (on Backtrack)&lt;/a&gt;" gave some important hints on how to install multimode and get it operational.  I did the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~
svn co https://www.cgran.org/svn/projects/multimode/trunk/ ~/src/multimode
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I executed &lt;code&gt;multimode.py&lt;/code&gt;, it didn't product a display.  I suspect its some subtle Python code problem, or more likely.  incompatibility with the latest GNU Radio libraries.  For now, I'm going to abandon this.
&lt;h2&gt;GNU Radio Signal Scanner&lt;/h2&gt;
&lt;a href="http://www.techmeology.co.uk/gr-scan/"&gt;gr-scan&lt;/a&gt; is a program  built upon GNU Radio, rtl-sdr, and the OsmoSDR Source Block.  This receiver constantly changes frequencies in a set order looking for a frequency that has someone transmitting. It is intended to scan a range of frequencies and print a list of discovered signals.  Installation involved the following steps:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~./src
mkdir gr-scan
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; gr-scan
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with your browser, download: &lt;code&gt;http://www.techmeology.co.uk/gr-scan/gr-scan-2012082301.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;gzip -d gr-scan-2012082301.tar.gz
tar -xvvf gr-scan-2012082301.tar
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; gr-scan-2012082301
make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I attempted to do the &lt;code&gt;make&lt;/code&gt;, it complained about missing Gun Radio files.  I suspect the GNU Radio libraries and include files are layed out differently since the time &lt;code&gt;gr-scan&lt;/code&gt; was designed (August of 2012).  I'm leaving fixing this to another time.
&lt;h2&gt;What's Next&lt;/h2&gt;
In this and the &lt;a href="http://jeffskinnerbox.wordpress.com/2013/05/26/rtl-sdr-software-defined-radio-sdr-for-20/"&gt;previous SDR posts&lt;/a&gt;, I focused on getting a taste of the technology without committing myself to much of an effort.  I really need to study and understand the tools that I have assembled. I still need to do a great deal more studying of  the radio spectrum itself ... I feel like I'm wondering in the dark most of the time.&lt;/p&gt;
&lt;p&gt;Also, I feel that I'm very limited by the antenna I'm presently using (the &lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/71ratxr2wjl-_sl1500_.jpg"&gt;pitiful dipole &lt;/a&gt;that came with the RTL dongle).  I'm thinking of building a better antenna.  Maybe try to pickup a NOAA weather satellites, with its distinctive audio signal when demodulated, and decode one of its satellite weather photos .... maybe.&lt;/p&gt;
&lt;p&gt;Another problem with the RTL-SDR is that its internal oscillator is cheap  and drifts, resulting in clock errors with  many kHz of frequency display error in SDR - depending on a band you're listening to.  This is very annoying if you use your dongle as a radio scanner - what's the point of knowing frequency of a transmitter if it's almost random on your SDR?   This frequency error is linear across the spectrum, and can be adjusted in most SDR programs by entering a PPM (parts per million) offset value.  So I need to calculate this error offset so I can  calibrate the SDR software.&lt;/p&gt;</summary><category term="RTL-SDR"></category><category term="Software Defined Radio"></category></entry><entry><title>Linux Reboot ... or ... My System is Frozen and I Can't Get Up!</title><link href="/posts/2013/Jun/16/linux-reboot-or-my-system-is-frozen-and-i-cant-get-up/" rel="alternate"></link><published>2013-06-16T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-06-16:posts/2013/Jun/16/linux-reboot-or-my-system-is-frozen-and-i-cant-get-up/</id><summary type="html">&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/sysrq-key.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="sysrq-key" src="/images/sysrq-key.jpg" width="300" height="199" /&gt;
&lt;/a&gt;
While I was building the environment for my Linux box,  I ran into some problems with Ubuntu.  I found myself with frozen screens or booted up into blank screens and other such things.  Seems that Ubuntu 13.04 is currently a bit unstable or I just screwed things up badly ... a little of both I suspect. I managed to get through these problems, but too often I got desperate and I hitting the on/off switch to get the box rebooted.  Doing this can result in corrupted files and other such nasty things.  So this motivated me to research the "correct" way to get out of these Linux near death experiences.&lt;/p&gt;
&lt;p&gt;The golden nugget here is actually at the end of this posting, that is the Magic SysRq Key.  This gem can get you out of most any freeze but I provide more here since the alternatives might be less intrusive.
&lt;h2&gt;Stopping a Running Process&lt;/h2&gt;
While this post's focus is on how to reboot Linux, keep in mind that sometimes the problem that your attempting to solve may be handled via a simpler approach.  Specifically, maybe you just need to kill a running process.&lt;/p&gt;
&lt;p&gt;In the Bash shell, you can use job control:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Ctrl+C – halts the current command&lt;/li&gt;
    &lt;li&gt;Ctrl+Z – stops the current command, resume with fg in the foreground or bg in the background&lt;/li&gt;
    &lt;li&gt;Ctrl+D – log out of current session, similar to exit&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
On a Desktop version of Linux, there are normally six text consoles sessions available and one graphics session.  You could leave a frozen GUI, and go to a console screen to kill an offending process:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;You can access the consoles by pressing CTRL + ALT + Fx (where Fx is a function key on the keyboard from F1 to F6).&lt;/li&gt;
    &lt;li&gt;Once you enter one of the consoles, you will be prompted for user name and password. Enter them and then you’ll reach a command prompt.  Now you can kill the offending process using the kill command.&lt;/li&gt;
    &lt;li&gt;To switch back to the graphic session, just click CTRL + ALT + F7.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The process "killing" could be done via the recommended &lt;code&gt;kill -SIGTERM &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;  or the more forceful &lt;code&gt;kill -SIGKILL &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;. There are also versions of these tools, &lt;a href="http://www.thegeekstuff.com/2009/12/4-ways-to-kill-a-process-kill-killall-pkill-xkill/"&gt;&lt;code&gt;killall&lt;/code&gt; and &lt;code&gt;pkill&lt;/code&gt;&lt;/a&gt;, that use the name of the process as an argument instead of the process ID.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xkill&lt;/code&gt; is a utility for forcing the X server to close connections to clients. Closing an X application that has become unresponsive, or misbehaving in general. Execute &lt;code&gt;xkill&lt;/code&gt;, and once it's running, you simply click on the window you wish to  kill, and it performs a &lt;code&gt;kill -9&lt;/code&gt;.
&lt;h2&gt;When Kill -9 Does Not Work&lt;/h2&gt;
You are supposed to be able to kill any process with &lt;code&gt;kill -9 &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;, but you may come across a process that just will not die. Usually this happens when you are trying to kill a &lt;a href="http://en.wikipedia.org/wiki/Zombie_process"&gt;zombie process or defunct process&lt;/a&gt;. These are processes that are dead and have exited, but they remain as &lt;a href="http://www-cdf.fnal.gov/offline/UNIX_Concepts/concepts.zombies.txt"&gt;zombies in the process list&lt;/a&gt;. The kernel keeps them in the process list until the parent process retrieves the exit status code by calling the wait() system call. This does not usually happen with daemon processes because they detach themselves from their parent process and are adopted by the init process (PID=1) which will automatically call wait() to clear them out of the process list.&lt;/p&gt;
&lt;p&gt;You may sometimes see the daemon defunct PID in the process list for a brief moment before it gets cleaned up by the init process. You don't have to worry about these. You can also end up with an unkillable process if a process is stuck waiting for the kernel to finish something. This usually happens when the kernel is waiting for I/O. Where you see this most often is with network filesystems such as NFS and SaMBa that have disconnected uncleanly. This also happens when a drive fails or if someone unplugs a cable to a mounted drive. If the device had a memmapped file or was used for swap then you may be really screwed. Any kernel calls that flush IO may hang forever waiting for the device to respond.&lt;/p&gt;
&lt;p&gt;Zombies can be identified in the output from the process status command &lt;code&gt;ps&lt;/code&gt; by the presence of a "Z" in the "STAT" column. Zombies that exist for more than a short period of time typically indicate a bug in the parent program, or just an uncommon decision to reap children.  A zombie process is not the same as an orphan process. An orphan process is a process that is still executing, but whose parent has died. They do not become zombie processes; instead, they are adopted by init (process ID 1), which waits on its children.
&lt;h2&gt;Standard Reboot Commands&lt;/h2&gt;
The vast majority of your systm shut downs or reboots will follow one of these two forms.  The first will halt the system so you can power it off and the second will reboot the system:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# power off system&lt;/span&gt;
shutdown -h now

&lt;span style="color: #0099FF; font-style: italic"&gt;# reboot the system&lt;/span&gt;
shutdown -r now
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://linux.die.net/man/8/shutdown"&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; is the preferred and the safest ways to stop Linux. Never the less, in the tradition of Unix, Linux gives you more than one  way to accomplish this task.   &lt;a href="http://manpages.ubuntu.com/manpages/lucid/man8/reboot.8.html"&gt;&lt;code&gt;reboot&lt;/code&gt;, &lt;code&gt;halt&lt;/code&gt;, and &lt;code&gt;poweroff&lt;/code&gt;&lt;/a&gt; are some additional commands that Linux provides to stop the system.  These commands can be more "forceful" than &lt;code&gt;shutdown&lt;/code&gt; but &lt;a href="http://askubuntu.com/questions/64995/what-is-the-difference-between-shutdown-and-poweroff-commands"&gt;similar to it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The simplicity of these commands give the illusion that the system state of Linux is running or not running.  It isn't quite that simple.  Linux can operate in several states called runlevels.
&lt;h2&gt;Linux Runlevels&lt;/h2&gt;
A &lt;a href="http://en.wikipedia.org/wiki/Runlevel"&gt;runlevel&lt;/a&gt; is a preset operating state for the Linux operating system.  A system can be booted into  any of several runlevels, each of which is represented by a single digit integer. Each runlevel designates a different system configuration and allows access to a different combination of processes and system resources.&lt;/p&gt;
&lt;p&gt;Seven runlevels are supported in the standard Linux kernel. They are:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;0 - System Halted:&lt;/strong&gt;  all system activity is stopped, the system can be safely powered down&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;1 - Single User:&lt;/strong&gt;  single superuser is the only active login and no daemons (services) are started. It is mainly used for maintenance.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;2 - Multiple Users:&lt;/strong&gt; multiple users allowed but network filesystem (HFS) is not.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;3 - Multiple Users:&lt;/strong&gt;  multiple users are allowed command line (i.e., all-text mode); the standard runlevel for most servers&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;4 - User-Definable&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;5 - Multiple Users:&lt;/strong&gt; multiple users are allowed graphical user interface; the standard runlevel for most desktop systems&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;6 - Reboot:&lt;/strong&gt; just like run level 0 except a reboot is issued, used when restarting the system&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
In the interests of completeness, there is also a runlevel 'S' that the system uses on it's way to another runlevel. Read the &lt;a href="http://linux.about.com/od/commands/l/blcmdl8_init.htm"&gt;man page for the &lt;code&gt;init&lt;/code&gt;&lt;/a&gt; command for more information, but you can safely skip this for all practical purposes.&lt;/p&gt;
&lt;p&gt;By default Linux boots either to runlevel 3 or to runlevel 5. The former permits the system to run all services except for a GUI. The latter allows all services including a GUI.&lt;/p&gt;
&lt;p&gt;Booting into a different runlevel can help solve certain problems. For example, if a change made in the X Window System configuration on a machine that has been set up to boot into a GUI has rendered the system unusable, it is possible to temporarily boot into a console (i.e., all-text mode) runlevel (i.e., runlevels 3 or 1) in order to repair the error and then reboot into the GUI.  Likewise, if a machine will not boot due to a damaged configuration file or will not allow logging-in because of a corrupted /etc/passwd file  or because of a forgotten password, the problem can solved by first booting into single-user mode (i.e. runlevel 1).&lt;/p&gt;
&lt;p&gt;There are two commands for directly reading or manipulating the Linux rumlevels:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;code&gt;runlevel&lt;/code&gt;&lt;/strong&gt; - Use the runlevel command to tell you two things: The last run level, and the current run level.  If the first character is 'N', it stands for none, meaning there has been no run level change since powering up.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;code&gt;telinit&lt;/code&gt;&lt;/strong&gt; - The program responsible for altering the runlevel is init, and it can be called using the telinit command.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The &lt;a href="http://www.debian-administration.org/articles/212"&gt;topic of runlevels&lt;/a&gt; is actually much richer than what is illustrated here.  It plays a key role in Linux background processes, called services or daemons.  For more, check out this &lt;a href="http://pthree.org/2008/02/26/managing-services-in-ubuntu-part-i-an-introduction-to-runlevels/"&gt;Managing Services in Ubuntu, Part I: An Introduction to Runlevels&lt;/a&gt; and &lt;a href="http://pthree.org/2008/02/27/managing-services-in-ubuntu-part-ii-managing-runlevels/"&gt;Part II&lt;/a&gt;.
&lt;h2&gt;Getting a Login From a Frozen GUI Screen&lt;/h2&gt;
A not so common problem is when a frozen, full screen X application takes control over your mouse and keyboard and it seems that the only way to regain access to the system is to force a shutdown.  The fact is, if you could get to a some form of terminal session, you might be able to kill the offending process and get out of this frozen state.
This is where accessing a console screen by pressing CTRL + ALT + Fx
(where Fx is a function key on the keyboard from F1 to F6; and F7 brings you back to the desktop) can be very handy.&lt;/p&gt;
&lt;p&gt;The X Server can often be the source of these frozen screen situations, so restarting the X Server may be the solution.  This can be done via the key combination Ctrl+Alt+Backspace.  Keep in mind that you will loses any unsaved data in applications.  Also, this capability is turned off by default on may Linux systems (including Ubuntu).  This was done to avoid confusion by  people accustom to MS Windows.  An alternative key combination is as follows:
&lt;p style="padding-left:30px;"&gt;Press &lt;a href="http://en.wikipedia.org/wiki/AltGr_key"&gt;AltGR&lt;/a&gt; + &lt;a href="http://en.wikipedia.org/wiki/System_request"&gt;SysRQ&lt;/a&gt; + K instead (AltGR is the RIGHT ALT button and SysRQ is often labelled "Print Screen", and remember to press and hold the keys in the in the right sequence, e.g. starting with ALtGR, and ending with the K(ill) key).&lt;/p&gt;
You can turn back on the Ctrl+Alt+Backspace by following the instructions &lt;a href="https://wiki.ubuntu.com/XorgCtrlAltBackspace"&gt;here&lt;/a&gt;.
&lt;h2&gt;Magic SysRq Key&lt;/h2&gt;
If the system is completely locks up, or &lt;a href="http://www.linuxjournal.com/content/rebooting-magic-way"&gt;your filesystem fails&lt;/a&gt;, there are still alternatives. The "&lt;a href="http://en.wikipedia.org/wiki/Magic_SysRq_key"&gt;magic SysRq key&lt;/a&gt;" provides a way to send commands directly to the kernel through the &lt;a href="http://www.linuxjournal.com/article/8381"&gt;&lt;code&gt;/proc&lt;/code&gt; filesystem&lt;/a&gt;. It is enabled via a kernel compile time option, CONFIG_MAGIC_SYSRQ, which seems to be standard on most distributions.The magic SysRq key (or PrintScrn or Print Screen on some keyboards) is a key combination understood by the Linux kernel, which allows the user to perform various low-level commands regardless of the system's state. This is a surprising feature of the kernel but is commonly used to perform a safe reboot of a locked-up Linux computer.  See this post for some &lt;a href="http://royal.pingdom.com/2012/06/26/sysadmin-needs-sysrq-magic/"&gt;historical perspective of the SysReq key&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To check if the CONFIG_MAGIC_SYSRQ option is enable on your Linux kernel, check the configuration file that installed to /boot partition.  Do this via:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;cat /boot/config-$(uname -r) | grep CONFIG_MAGIC_SYSRQ&lt;/code&gt;&lt;/p&gt;
If your get "&lt;code&gt;CONFIG_MAGIC_SYSRQ=y"&lt;/code&gt;, then its enabled on your kernel.&lt;/p&gt;
&lt;p&gt;When running a kernel with SysRq compiled in, &lt;code&gt;/proc/sys/kernel/sysrq&lt;/code&gt; controls the functions allowed to be invoked via the SysRq key.  If the file contains "&lt;code&gt;1&lt;/code&gt;", that means that every possible SysRq request is allowed. See &lt;a href="http://lxr.linux.no/linux/Documentation/sysrq.txt"&gt;here&lt;/a&gt; for more on the &lt;code&gt;/proc/sys/kernel/sysrq&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To actually reboot the machine there is a well know key sequence to follow: REISUB (or REISUO if you want to turn off the system instead of reboot).  Basically, if you keep pressed AltGR + SysRq + R and then while you keep pressed AltGR + SysRq you press E, I, S, U, B with about 1 second between each letter (do not type it fast). Your system will reboot. This  is a safer alternative to just cold rebooting the computer.&lt;/p&gt;
&lt;p&gt;Mnemonic for REISUB is &lt;strong&gt;R&lt;/strong&gt;eboot &lt;strong&gt;E&lt;/strong&gt;ven &lt;strong&gt;I&lt;/strong&gt;f  &lt;strong&gt;S&lt;/strong&gt;ystem &lt;strong&gt;U&lt;/strong&gt;tterly &lt;strong&gt;B&lt;/strong&gt;roken, so while pressing &lt;code&gt;AltGR + SysRq&lt;/code&gt;, press the following  keys:
&lt;p style="padding-left:60px;"&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;R&lt;/strong&gt; - Switch to &lt;a href="http://unix.stackexchange.com/questions/16530/what-does-raw-unraw-keyboard-mode-mean"&gt;XLATE mode&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; - Send &lt;a href="http://www.gnu.org/software/libc/manual/html_node/Termination-Signals.html"&gt;Terminate signal&lt;/a&gt; to all processes except for init&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; - Send &lt;a href="http://meinit.nl/the-3-most-important-kill-signals-on-the-linux-unix-command-line"&gt;Kill signal&lt;/a&gt; to all processes except for init&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt; - &lt;a href="http://linux.die.net/man/1/sync"&gt;Sync&lt;/a&gt; all mounted filesystems&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; - Remount filesystems as read-only&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;B&lt;/strong&gt; - Reboot&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The magic SysRq key supports more then just the REISUB keys.  To see the larger range of thing you can do via Magic SysRq Key's direct communications with the kernel, &lt;a href="http://www.isotton.com/devel/docs/sysrq-cheatsheet/"&gt;check out here&lt;/a&gt;.&lt;/p&gt;</summary><category term="Linux"></category></entry><entry><title>RTL-SDR Software Defined Radio (SDR) for $20</title><link href="/posts/2013/May/26/rtl-sdr-software-defined-radio-SDR-for-20/" rel="alternate"></link><published>2013-05-26T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-05-26:posts/2013/May/26/rtl-sdr-software-defined-radio-SDR-for-20/</id><summary type="html">&lt;p&gt;While researching the GNU Radio project, I came upon references to the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/Hardware"&gt;RTL2832 TV tuners&lt;/a&gt;. These dongle are made to receive and decode the European standard digital television, &lt;a href="http://en.wikipedia.org/wiki/DVB-T"&gt;Digital Video Broadcasting — Terrestrial (DVB-T)&lt;/a&gt;. (By the way, the North American standard is &lt;a href="http://en.wikipedia.org/wiki/ATSC_tuner"&gt;Advanced Television Systems Committee (ATSC)&lt;/a&gt;, and not  compatible with DVB-T, so this will not work in North America for TV reception.)  In 2012, &lt;a href="http://thread.gmane.org/gmane.linux.drivers.video-input-infrastructure/44461/focus=44461"&gt;Antii Palosaari&lt;/a&gt;, discovered that there is a device mode for the Realtek DVB-T device chip (&lt;a href="http://www.realtek.com.tw/products/productsView.aspx?Langid=1&amp;amp;PFid=35&amp;amp;Level=4&amp;amp;Conn=3&amp;amp;ProdID=257"&gt;RTL2832U&lt;/a&gt;) in which raw samples can be captured and transferred to a host computer. This feature enables this device to be used as an inexpensive "front end"  for a &lt;a href="http://en.wikipedia.org/wiki/Software-defined_radio"&gt;Software Defined Radio (SDR)&lt;/a&gt; that could be implemented on a PC or other device.&lt;/p&gt;
&lt;p&gt;A SDR provide the ability to sample and record the electromagnetic energy (or &lt;a href="http://en.wikipedia.org/wiki/Radio_frequency"&gt;radio frequency&lt;/a&gt;, called "RF" for short) with no preconceived idea as to the structure of the RF &lt;a href="http://en.wikipedia.org/wiki/Signal_(information_theory)"&gt;signal&lt;/a&gt;.  In a sense, you can interact with the RF signal in its must fundamental form.  In addition, a SDR allows you to implement, by means of software, a radio communication system where components that have been typically implemented in hardware.&lt;/p&gt;
&lt;p&gt;SDR solutions for the professional-grade applications and amateur radio have been around for some time, but the appearance of cheap solutions for the hacker is new.  There are general purpose SDR platforms for over $1000, like the Ettus Research &lt;a href="http://www.ettus.com/"&gt;Universal Software Radio Peripheral (USRP)&lt;/a&gt;, the $525 &lt;a href="http://www.rfspace.com/RFSPACE/SDR-IQ.html"&gt;SDR-IQ Receiver&lt;/a&gt;, to the $450 &lt;a href="http://nuand.com/bladeRF"&gt;bladeRF&lt;/a&gt; from the Kickstarter Nuand or Great Scott's &lt;a href="http://www.forbes.com/sites/andygreenberg/2012/10/19/darpa-funded-radio-hackrf-aims-to-be-a-300-wireless-swiss-army-knife-for-hackers/"&gt;DARPA-Funded&lt;/a&gt; &lt;a href="http://ossmann.blogspot.com/2012/06/introducing-hackrf.html"&gt;HackRF&lt;/a&gt; for an estimate $300, and now the $20 hacker grade dongle discussed here.  But unlike most of the other referenced solutions,  the dongle  requires a PC, or some sort of attached processor, to provide the signal processing.&lt;/p&gt;
&lt;p&gt;In all SDR solutions, a significant amounts of the &lt;a href="http://en.wikipedia.org/wiki/Signal_processing"&gt;signal processing&lt;/a&gt; is handed over to a numerical processor, rather than being done in special-purpose RF hardware. Such a design produces a radio which can receive and transmit widely different radio protocols (referred to as a waveform) based solely on the software used.  So in a SDR solution, the electromagnetic waveform is rapidly sampled, the sample values are converted to numerical values, and these numbers are manipulated via a discipline called &lt;a href="http://en.wikipedia.org/wiki/Digital_signal_processing"&gt;digital signal processing (DSP)&lt;/a&gt;.  Ultimately, the resulting DSP numerical values produced are converted to an analog signal that goes to a speaker, TV, or other such output device.&lt;/p&gt;
&lt;p&gt;The DVB-T dongles can provide a critical component of a cheap SDR, since the chip allows transferring the raw I/Q samples to the host. What &lt;a href="http://www.ni.com/white-paper/4805/en"&gt;I/Q samples&lt;/a&gt; are is well beyond what I wish to describe here, but let it be said that practical hardware design concerns make I/Q data the critical for signal processing.  So the fact the dongle does the digital sampling, called a &lt;a href="http://en.wikipedia.org/wiki/Analog-to-digital_converter"&gt;analog-to-digital converter (ADC)&lt;/a&gt;, and outputs I/Q samples, makes it a valuable asset for a SDR solution.&lt;/p&gt;
&lt;p&gt;So how does one get your PC configured to take the dongles I/Q output and create a SDR?  There is &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;GNU Radio&lt;/a&gt; (where this post first begun), but a simpler starting point would be the popular, easy, and open source &lt;a href="http://sdrsharp.com/"&gt;SDR#&lt;/a&gt;.  SDR# can perform the required signal processing in an intuitive user interface (if your into Ham Radio, or bit of a RF hacker, and such).  Unfortunately, I couldn't get SDR# (a MS Windows application) to operate under  Linux and I had to resorted to some simpler utilities.
&lt;h2&gt;The Dongle&lt;/h2&gt;
All this sounds exciting to me (what a geek!) so I &lt;a href="http://www.amazon.com/gp/product/B008S7AVTC/ref=oh_details_o00_s00_i00?ie=UTF8&amp;amp;psc=1"&gt;purchased from Amazon&lt;/a&gt; one of the dongles, specifically the NooElec TV28T v2 USB DVB-T,  FM+DAB &amp;amp; RTL-SDR Receiver, RTL2832U &amp;amp; R820T Tuner, MCX Input.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;NooElec TV28T&lt;/strong&gt; - This is the &lt;a href="http://www.nooelec.com/store/software-defined-radio/sdr-receivers/tv28tv2.html#.UZQmefH_5k8"&gt;manufacture&lt;/a&gt; and model name for the device&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;DVB-T&lt;/strong&gt; - This device is made to receive and decode the European standard digital television, &lt;a href="http://en.wikipedia.org/wiki/DVB-T"&gt;Digital Video Broadcasting — Terrestrial (DVB-T)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;FM+DAB &amp;amp; RTL-SDR Receiver&lt;/strong&gt; - The device can also receive FM radio and &lt;a href="http://en.wikipedia.org/wiki/Digital_Audio_Broadcasting"&gt;Digital Audio Broadcasting (DAB)&lt;/a&gt; used in several countries, particularly in Europe. &lt;a href="http://www.rtlsdr.org/"&gt;RTLSDR&lt;/a&gt; is the popular name give to this class of device, which contain the RTL2832U chip, which can be hacked for SDR use.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;RTL2832U &amp;amp; R820T Tuner&lt;/strong&gt; - These are the &lt;a href="http://www.realtek.com.tw/products/productsView.aspx?Langid=1&amp;amp;PFid=35&amp;amp;Level=4&amp;amp;Conn=3&amp;amp;ProdID=257"&gt;DVB-T demodulator&lt;/a&gt; and &lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;ved=0CCwQFjAA&amp;amp;url=http%3A%2F%2Fsuperkuh.com%2Fgnuradio%2FR820T_datasheet-Non_R-20111130_unlocked.pdf&amp;amp;ei=PCuUUbnGI-e80QHfwoDwDw&amp;amp;usg=AFQjCNFUMXBDm9QvhzhIzJGckOLi8n5gaQ&amp;amp;sig2=FA2mXxtZhkdokBQ3oegvdQ&amp;amp;bvm=bv.46471029,d.dmQ"&gt;TV Tuner&lt;/a&gt; chips used in the device.&lt;/li&gt;
    &lt;li&gt; &lt;strong&gt;MCX Input&lt;/strong&gt; – Is a 3.6 millimeter (0.14 in) micro coaxial (MCX) coaxial RF connector 30% smaller that Sub-Miniature version B (SMB) connectors that are typically used in the USA.  MCX is a standard in Europe. It provides broadband capability from DC to 6 GHz.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/71ratxr2wjl-_sl1500_.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="71RaTxr2WJL._SL1500_" src="/images/NooElec_TV28T.jpg" width="180" height="180" /&gt;
&lt;/a&gt;
 NooElec TV28T
From the research I have done, I have found that the NooElec TV28T dongle provides an approximate tuning range of 25MHz-1700MHz for the SDR.  It has been demonstrated to be compatible with most SDR software, including SDR#.  You can pick up FM radio but  don't expect to pick up long-wave or AM broadcasts since their spectrum lies below 25MHz. You can listen to the 12m 10m 6m 2m 1.25m 70cm 33cm and 23cm ham band, as well as CB, Marine VHF, RC Band, FRS, GMRS, and Airband (Aviation).&lt;/p&gt;
&lt;p&gt;The dongle will not provide the desired SDR function out of the box.  It must first be configured (aka hacked) to stream the I/Q samples to the USB output.  This is where &lt;a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr"&gt;Antii Palosaari's&lt;/a&gt; discovery comes into play.  The wiki's &lt;a href="http://rtlsdr.org/"&gt;rtlsdr.org&lt;/a&gt; and &lt;a href="http://sdr.osmocom.org/trac/"&gt;OsmoSDR&lt;/a&gt; are good sources for disparate information concerning RTL2832U based SDR, typically called RTL-SDR.  For my purposes, I wanted to get something initially working on my PC (Linux OS) but ultimately I wanted to have the dongle attached to a Raspberry Pi (RPi) and have the RPi be a server or archive of I/Q samples (sort of a intelligent wide band scanner as done in &lt;a href="http://www.jpmeijers.com/drupal/node/15"&gt;Raspberry Pi and DVB-T receivers&lt;/a&gt; and here &lt;a href="http://www.hamradioscience.com/raspberry-pi-as-remote-server-for-rtl2832u-sdr/"&gt;Raspberry Pi as Remote Server for RTL2832u SDR&lt;/a&gt; and here &lt;a href="http://www.jpmeijers.com/drupal/node/15"&gt;SDR with Raspberry Pi and DVB-T receivers&lt;/a&gt;) that could be processed by my PC.  Therefore, the first step is to get the dongle and a good SDR processor working on my PC.
&lt;h2&gt;Building rtl-sdr Library and Capture Tools&lt;/h2&gt;
The  OsmoSDR wiki has some good instructions on &lt;a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr#Buildingthesoftware"&gt;how to build the rtl-sdr software&lt;/a&gt;. I basically followed the wiki's instructions but I had to first install &lt;a href="http://www.cmake.org/"&gt;cmake&lt;/a&gt; (&lt;code&gt;sudo apt-get install cmake&lt;/code&gt;) and &lt;a href="http://www.libusb.org/"&gt;libusb&lt;/a&gt; (&lt;code&gt;sudo apt-get install libusb-1.0-0-dev&lt;/code&gt;) to get a successful make.  I then using the following commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/src
git clone git://git.osmocom.org/rtl-sdr.git
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; rtl-sdr/
mkdir build
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; build
cmake ../
make
sudo make install
sudo ldconfig
cmake ../ -DINSTALL_UDEV_RULES&lt;span style="color: #555555"&gt;=&lt;/span&gt;ON
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The result is source code placed in &lt;code&gt;~/src/rtl-sdr/build/src&lt;/code&gt; and the executables are placed in &lt;code&gt;/usr/local/bin&lt;/code&gt;: rtl_adsb, rtl_eeprom, rtl_fm, rtl_sdr, rtl_tcp, rtl_test.  The documentation for these utilities is nearly non-existent.  The only documentation I could fine is for the rtl_fm, a posting called &lt;a href="http://kmkeen.com/rtl-demod-guide/index.html"&gt;Rtl_fm Guide: The long lost documentation&lt;/a&gt;.  If you use the command line option &lt;code&gt;--help&lt;/code&gt;, you will get some description for each of the tools (see the very end of this post for some screen captures).  Here is a short description and some example usages:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;rtl_sdr&lt;/strong&gt; - This is an I/Q recorder for RTL2832 based DVB-T receivers. To send 10 samples to stdout, and sampled at 1.8Ms/s with frequency tuned to 392MHz: &lt;code&gt;rtl_sdr -s1.8e6 -f392e6 -n10 -.&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_test&lt;/strong&gt; - Bench-marking tool for RTL2832 based DVB-T receivers.  The &lt;code&gt;-t&lt;/code&gt; option only works for Elonics E4000 tuners (Therefore, on non-E4000 tuners, you can not test for the tuning range).  To check the possible tuning range: &lt;code&gt;rtl_test -t&lt;/code&gt;.  To check the maximum sample-rate possible on your machine (change the rate down until no sample loss occurs): &lt;code&gt;rtl_test -s 2.5e6&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_fm&lt;/strong&gt; - A simple narrow band FM demodulator for RTL2832 based DVB-T receivers.  Rtl_fm is a general purpose analog demodulator. It can handle FM, AM and SSB. It can scan more than a hundred frequencies a second. Make sure &lt;code&gt;rtl_fm&lt;/code&gt; and the player are both set to use the same data rate.  Tune into a local FM radio station : &lt;code&gt;rtl_fm -W -f 99.5M | play -r 32k -t raw -e signed-integer -b 16 -c 1 -V1 -&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_tcp&lt;/strong&gt; -  An I/Q sample server for RTL2832 based DVB-T receivers.  I/Q samples are streamed to a specified IP address and port.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_adsb&lt;/strong&gt; - A simple Automatic dependent surveillance-broadcast (ADS-B) decoder.  ADS-B is a surveillance technology for tracking aircraft as part of the Next Generation Air Transportation System (NextGen).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_eeprom&lt;/strong&gt; - An EEPROM programming tool for RTL2832 based DVB-T receivers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;First Run of the Dongle&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/sdrsharp.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="sdrsharp" src="/images/sdrsharp.png?w=150" width="150" height="107" /&gt;
&lt;/a&gt;
The first thing to do is to plug in the dongle and run the test &lt;code&gt;rtl_test -t&lt;/code&gt;.  It gave me an error statement expressing "installing the udev rules file rtl-sdr.rules".  The site "&lt;a href="http://www.instructables.com/id/rtl-sdr-on-Ubuntu/step3/Setup-udev-rules/"&gt;rtl-sdr on Ubuntu&lt;/a&gt;" provides some instructions on how to fix this.  The command &lt;code&gt;lsusb | grep Realtek&lt;/code&gt; gives me the information I need to create the following entry into &lt;code&gt;/etc/udev/rules.d&lt;/code&gt;:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;SUBSYSTEM=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2838", GROUP="adm", MODE="0666", SYMLINK+="rtl_sdr"&lt;/code&gt;&lt;/p&gt;
After another try, I got a successful test.  Next, I sent ten I/O samples to stdout and then tuned into a local FM radio station using these commands:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;rtl_sdr -s1.8e6 -f392e6 -n10 -
rtl_fm -W -f 99.5M | play -r 32k -t raw -e signed-integer -b 16 -c 1 -V1 -&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Getting SDR# Running in Linux (didn't work)&lt;/h2&gt;
The  rtlsdr.org wiki has some instructions on &lt;a href="http://rtlsdr.org/softwarelinux"&gt;how to get SDR# working within Linux&lt;/a&gt;.  Also, the &lt;a href="http://sdrsharp.com/"&gt;SDR# home page&lt;/a&gt; has a link called &lt;a href="http://pastebin.com/tgYwRBQt"&gt;One shot install script for Linux&lt;/a&gt;. Both these sites require you to build the software from source code. Mono is able to run Microsoft .NET applications in Linux.  I attempted this and got errors that I could not figure out (I'm not a MS Windows developer type and I'm not interested becoming one!).&lt;/p&gt;
&lt;p&gt;Given this, I chose a different path. I found another posting that claim to &lt;a href="http://opensource.telkomspeedy.com/wiki/index.php/SDR:_SDRSharp_Ubuntu_12.04"&gt;get SDR# running in Linux&lt;/a&gt;. In this case, only executable will be loaded, not source code that needs to be compiled. You can download SDR# executable from this &lt;a href="http://sdrsharp.com/index.php/downloads"&gt;posting&lt;/a&gt;.  You'll also need to install &lt;a href="http://www.mono-project.com/Main_Page"&gt;mono&lt;/a&gt; and &lt;a href="http://www.portaudio.com/"&gt;PortAudio&lt;/a&gt;.  Here is how I did it:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install mono-complete monodevelop
sudo apt-get install libportaudio2
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/src
mkdir sdrsharp
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; sdrsharp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Within &lt;code&gt;~/src/sdrsharp&lt;/code&gt;, install the downloaded SDR# zip file and unzip it.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;cd&lt;/span&gt; sdr-nightly
ln -s /usr/local/lib/librtlsdr.so librtlsdr.dll
ln -s /usr/lib/i386-linux-gnu/libportaudio.so.2 libportaudio.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note, for the above link, you may need to use &lt;code&gt;locate libportaudio.so.2&lt;/code&gt; to find the PortAudio library.&lt;/p&gt;
&lt;p&gt;To test things out, I ran the application using mono sdrsharp.exe and got a core dump.  I attempted this again using the stable version of SDR# instead of the nightly build and got the same results.  After the typical thrashing about, I found a &lt;a href="https://lists.ubuntu.com/archives/ubuntu-mono/2013-February/041580.html"&gt;bug report for this problem&lt;/a&gt;.  Also see "&lt;a href="http://epic.geek.nz/page/2012/12/29/sdr-software-good-bad-and-ugly/"&gt;SDR Software – Good, bad and very ugly&lt;/a&gt;".  Also, there seems to be some sort of &lt;a href="http://dangerousprototypes.com/2012/08/05/confusion-over-sdr-vs-opensdrsharp/"&gt;dispute between SDR# and a new group calling itself Open SDR#&lt;/a&gt;.  I'm not sure, but what appears to be at the heart of this is the level of support of SDR# within Linux.  All this is disappointing since SDR# is a very popular tool and I wish I could find away to make use of it within Linux.&lt;/p&gt;
&lt;p&gt;The next logical SDR tool to try would be the Linux-based &lt;a href="http://www.oz9aec.net/index.php/gnu-radio/gqrx-sdr"&gt;Gqrx SDR receiver&lt;/a&gt;, but in this case, it is dependent on &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;GNU Radio&lt;/a&gt;.  I'm attempting to delay my conquest of GNU Radio until I do some experimenting with the dongle.  So lets turn our attention to a much simpler tool.
&lt;h2&gt;Getting RTL-SDR Scanner Running&lt;/h2&gt;
&lt;a href="http://eartoearoak.com/software/rtlsdr-scanner"&gt;RTLSDR Scanner&lt;/a&gt; is a simple frequency scanning GUI using the OsmoSDR rtl-sdr library.  I more or less followed the &lt;a href="http://eartoearoak.com/software/rtlsdr-scanner/rtlsdr-scanner-installation"&gt;installation instructions&lt;/a&gt; but they are confusing/out-of-date and you'll needed to do some adjustments.  The OsmoSDR rtlsdr library has already been installed earlier in the text, so its not listed here.  To get the required files for RTLSDR Scanner:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install python python-wxgtk2.8 python-matplotlib python-numpy
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/src
git clone git://github.com/roger-/pyrtlsdr.git
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; pyrtlsdr
sudo setup.py
&lt;span style="color: #336666"&gt;cd&lt;/span&gt; ~/src
git clone git://github.com/EarToEarOak/RTLSDR-Scanner.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/demo_waterfall.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="demo_waterfall.py" src="/images/demo_waterfall.jpg" width="250" height="140" /&gt;
&lt;/a&gt;
With this, I found I could run &lt;code&gt;~/src/pyrtlsdr/demo_waterfall.py&lt;/code&gt;.  Make sure to read the comments in the file to understand how to change the center frequency, gain, etc.  The image below is &lt;code&gt;demo_waterfall.py&lt;/code&gt; tuned to the amateur radio &lt;a href="http://en.wikipedia.org/wiki/6-meter_band"&gt;6 meters band&lt;/a&gt;.  The image is called a &lt;a href="http://en.wikipedia.org/wiki/Spectrogram"&gt;spectrogram&lt;/a&gt; (sometimes call spectral waterfall) is a dynamic, visual representation of the spectrum of frequencies in the RF signal.  Blue is low signal strength, where yellow, and red are higher strengths.&lt;/p&gt;
&lt;p&gt;To get
&lt;code&gt;~/src/RTLSDR-Scanner/src/rtlsdr_scan.py&lt;/code&gt; to work, I had to do some coping of files as shown below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;cp ~/src/pyrtlsdr/rtlsdr/rtlsdr.py  ~/src/RTLSDR-Scanner/src/rtlsdr.py
cp ~/src/pyrtlsdr/rtlsdr/librtlsdr.py  ~/src/RTLSDR-Scanner/src/librtlsdr.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtlsdr-scanner.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" alt="rtlsdr_scan.py" src="/images//rtlsdr-scanner.jpg" width="250" height="145" /&gt;
&lt;/a&gt;
The image below is from &lt;code&gt;rtlsdr_scan.py&lt;/code&gt;, again tuned to the amateur radio 6 meters band.  Here again you see the signal strength of the individual amateur radios as vertical spikes.
So we now have auditory and visual proof the dongle is doing its job. Now its on to &lt;a href="http://jeffskinnerbox.wordpress.com/2013/07/08/gnu-radio-and-gqrx-sdr-receiver/"&gt;GNU Radio&lt;/a&gt;!
&lt;h2&gt;Command-Line Options for RTLSDR Capture Tools&lt;/h2&gt;
For reference purposes, below are screen shots of the RTLSDR capture tool's command line options.
&lt;p&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test-s.jpg"&gt;&lt;img class="float" alt="rtl_test -s" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test-s.jpg?w=150" width="150" height="118" /&gt;&lt;/a&gt; rtl_test -s
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test1.jpg"&gt;&lt;img class="float" alt="rtl_test" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test1.jpg?w=150" width="150" height="138" /&gt;&lt;/a&gt; rtl_test&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_tcp.jpg"&gt;&lt;img class="float" alt="rtl_tcp" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_tcp.jpg?w=150" width="150" height="118" /&gt;&lt;/a&gt; rtl_tcp
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_sdr1.jpg"&gt;&lt;img class="float" alt="rtl_sdr" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_sdr1.jpg?w=150" width="150" height="110" /&gt;&lt;/a&gt; rtl_sdr &lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_adsb.jpg"&gt;&lt;img class="float" alt="rtl_adsb" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_adsb.jpg?w=150" width="150" height="88" /&gt;&lt;/a&gt; rtl_adsb
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_fm.jpg"&gt;&lt;img class="float" alt="rtl_fm" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_fm.jpg?w=150" width="150" height="138" /&gt;&lt;/a&gt; rtl_fm&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="RTL-SDR"></category><category term="Software Defined Radio"></category></entry><entry><title>Building My Linux Box...The Plan</title><link href="/posts/2013/Apr/28/building-my-linux-box-the-plan/" rel="alternate"></link><published>2013-04-28T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-04-28:posts/2013/Apr/28/building-my-linux-box-the-plan/</id><summary type="html">&lt;p&gt;I concluded it was time to retire my current PC (a &lt;a href="http://reviews.cnet.com/desktops/dell-xps-400-desktop/4505-3118_7-31530074.html"&gt;Dell Dimension XPS 400&lt;/a&gt;, Intel Pentium D 820, 2.8GHz w/Dual Core Technology, 2G of memory, purchased in January 2006 for  &lt;a href="http://www.pcmag.com/article2/0,2817,1864262,00.asp"&gt;~ $2,500&lt;/a&gt;) and replace it with something better, aka faster.  It's performing poorly, but most of all, I want to do some experimenting with &lt;a href="http://ipython.org/"&gt;iPython&lt;/a&gt; &amp;amp; &lt;a href="http://matplotlib.org/"&gt;matplotlib&lt;/a&gt;, as well as, &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;GNU Radio&lt;/a&gt; &amp;amp; &lt;a href="http://en.wikipedia.org/wiki/Digital_signal_processing"&gt;digital signal processing&lt;/a&gt;.  To do this justice, I need a faster box and ideally loaded with Linux and X Windows.&lt;/p&gt;
&lt;p&gt;I also think its time for me to &lt;a href="http://www.linuxplanet.com/linuxplanet/tutorials/6824/1"&gt;build my own box&lt;/a&gt;, instead of purchase it already&lt;a href="http://www.berkeleylug.com/?p=168"&gt; packaged and assembled&lt;/a&gt;.  They say you get more for your dollar, or at least you can invest the same money into things that will make a better system (instead of some more crappy speakers, mice, keyboards, etc.).  Given I'm building it, I want to pay special attention to getting the performance up.  I don't need the top of the line CPU (I don't believe you get sufficient value for your money), but I would invest in improving the predominate enemy of computer performance, that is I/O.  Also, I want the graphics to be fast and smooth.  The work on matplotlib and signal processing is likely to be graphically intensive.  I'm not going to be playing games on the system, but I'm going to keep an eye on the gaming communities hardware preferences.   I'm willing to go with a good (but not super, and therefore expensive) graphics board.&lt;/p&gt;
&lt;p&gt;A fancy sound system isn't a priority for me.  While my interest in GNU Radio &amp;amp; digital signal processing may have some use for a good sound system, I think I could live with the integrated sound system that will come on the motherboard.  Like graphics, if  it proves unacceptable, I'll make the investment on another occasion.&lt;/p&gt;
&lt;p&gt;Since I'm buying components and assembling it, I want to do some cherry picking.  When a vendor sells you an assembled box, they are often using cheaper / less functional components to save them cost.  I'm picking an Intel Core i5 CPU (I believe it has the best value for me).  Also, I'm going to get a -K Series Intel CPU and motherboard designed for overclocking and provide optimal performance for gamers and high-power users.  While I'm not doing gaming, I like the option to tuning the hardware and I have found the -K Series to be only slightly more expensive.  For a small amount of additional cash, I get some cool capabilities.&lt;/p&gt;
&lt;p&gt;To get the better &lt;a href="http://en.wikipedia.org/wiki/Input/output"&gt;I/O&lt;/a&gt; that I want, I'm going to purchase one &lt;a href="http://en.wikipedia.org/wiki/Solid-state_drive"&gt;solid-state drive (SSD)&lt;/a&gt; from which I plan to boot Linux.  SSD's are very much more expensive byte-for-byte when compared to a standard hard drive but boy&lt;a href="http://www.zdnet.com/blog/bott/windows-7-and-ssds-just-how-fast-are-they/2902"&gt; they can fly&lt;/a&gt;!  Faster CPU and faster drives are my most valuable investment.  With the  financial investment in the SSD, I'm not going to purchase new hard drives but reuse the ones I have in my current PC (I'll need them since the SSD I can budget for will not be large).  They are newer then the original Dell box, and besides  the hard drive has over 6 years of stuff on it, including a MS Windows environment that I have grown dependent on.  That brings me to the next point.&lt;/p&gt;
&lt;p&gt;I want to dual boot the system with both MS Windows and Linux.  The Linux will be on the SSD, and it is here that I plan to spend much of my time.  I want to pick a Linux distribution that is well supported, popular, and a good graphic desktop environment.   I grew up on the Linux command line (then it was Unix) and I feel at home there, but I would like to try out the X Windows desktop.  If at all possible  I want the MS Windows to boot from my current hard drive.  I don't want to have to reload software or copy an image ... you never can get it to be the same again.  If I must, I'll make the MS windows drive the default boot as it is now (and Microsoft seems to insist on being default).  If I can do this, moving into my new PC will be painless.&lt;/p&gt;
&lt;p&gt;With my objectives and priorities fully articulated, lets explore what I intend to build.
&lt;h2&gt;Central Processing Unit (CPU)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/intel_core-i5-3570k_retail.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="intel core i5 3570k with stock cooler" src="/images/intel_core-i5-3570k_retail.jpg" width="30%" height="30%" /&gt;
&lt;/a&gt;
For my CPU I have picked the Intel Core i5-3570K Ivy Bridge 3.4GHz (3.8GHz Turbo Boost and 6M Cache) LGA 1155 77W Quad-Core Desktop Processor which includes Virtualization Technology (VT-x), and Intel HD Graphics 4000.  What a mouth full .... here is what this all means:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/processors/core/core-processor-family.html"&gt;Intel Core&lt;/a&gt; - Intel Core (sometimes refereed to as&lt;a href="http://en.wikipedia.org/wiki/Core_2"&gt; Core 2&lt;/a&gt;) is a brand name that Intel uses for various mid-range to high-end consumer and business microprocessors. In general, processors sold as Core are more powerful variants of the same processors marketed as entry-level Celeron and Pentium. Similarly, identical or more capable versions of Core processors are also sold as Xeon processors for the server and workstation market.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://ark.intel.com/products/65520"&gt;i5-3570K&lt;/a&gt; - The very first question after you concluded that your going with the Intel Core line, is &lt;a href="http://www.pugetsystems.com/blog/2012/08/17/core-i3-core-i5-and-core-i7-which-one-is-right-for-you/"&gt;Core i3 vs. i5 vs. i7 – Which one is right for me&lt;/a&gt;?   I'm driven to the i5 since the current Intel Core i5 models are generally considered the best price/performance choice for a gaming system and the i7  do NOT have built-in graphics capability (this would force me to buy a graphics card). Why K versions you ask? Well, the default Ivy Bridge processors are much harder to overclock, where the K series are unlocked and come with&lt;a href="http://www.intel.com/content/www/us/en/motherboards/desktop-motherboards/desktop-boards-software-extreme-tuning-utility.html"&gt; tools for overclocking&lt;/a&gt;.  This processor has overclocked &lt;a href="http://www.guru3d.com/articles_pages/core_i5_3570k_review,1.html"&gt;test results&lt;/a&gt; running at a stable 4.7GHz.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://software.intel.com/sites/billboard/article/gdc-2012-ivy-bridge-impresses-optimized-visual-functionality-power-and-efficiency?wapkw=ivy+bridge"&gt;Ivy Bridge&lt;/a&gt; -  Ivy Bridge is the &lt;a href="http://ark.intel.com/"&gt;latest generation of processors&lt;/a&gt; within the &lt;a href="http://www.intel.com/content/www/us/en/silicon-innovations/intel-tick-tock-model-general.html"&gt;Intel Tick-Tock Development Model&lt;/a&gt;.   Intel introduced its Sandy Bridge desktop and laptop processors at the start of 2011 as there new micro-architecture ...the tock.  Intel introduced Ivy Bridge in April 2012 new processor technology ... the tick.  There is a school of thought that says you shouldn't buy the last generation CPU because you can get more value (aka performance/dollar) from the previous generation.  But the prices I have seen and the &lt;a href="http://www.pcmag.com/article2/0,2817,2405317,00.asp"&gt;comparative reviews&lt;/a&gt; have given me the courage to go with the latest generation.  Also check out this review with a &lt;a href="http://www.phoronix.com/scan.php?page=article&amp;amp;item=intel_corei7_3770k&amp;amp;num=1"&gt;description of Ivy Bridge&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/architecture-and-technology/turbo-boost/turbo-boost-technology.html"&gt;Turbo Boost&lt;/a&gt; - This feature increases performance of both multi-threaded and single-threaded workloads.  Intel Turbo Boost Technology 2.0 allows the processor core to opportunistically and automatically run faster than its rated operating frequency/graphic render clock if it is operating below power, temperature, and current limits. It can boost the frequency up to 3.8GHz.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/CPU_cache"&gt;6M Cache&lt;/a&gt; - This refers to &lt;a href="http://en.wikipedia.org/wiki/Cache_(computing)"&gt;cache&lt;/a&gt; used by the central processing unit of a computer to reduce the average&lt;a href="http://arstechnica.com/gadgets/2002/07/caching/"&gt; time to access memory&lt;/a&gt;. The cache is a smaller, faster memory which stores copies of the data from the most frequently used main memory locations.  It comes it three types: L1, L2, and L3. L1 cache (sometimes called primary cashe) is the fastest cache and it usually comes within the processor chip itself.  L2 cache comes between L1 and RAM (processor-L1-L2-RAM) and is bigger than the primary cache. The L1 and L2 cache is per core but the last-level cache (L3), is shared among all cores and sometimes call &lt;a href="http://en.wikipedia.org/wiki/Smart_Cache"&gt;Smart Cache &lt;/a&gt;since cache can be dynamically assigned to a core as it needs it. The "6M" refers to the number of bytes of data that the L3 cache can hold.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/LGA_1155"&gt;LGA 1155&lt;/a&gt; - LGA 1155, also called Socket H2, is an Intel microprocessor compatible 1155 pin socket which supports Intel Sandy Bridge and Ivy Bridge microprocessors.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.tomshardware.com/news/core-i7-Ivy-Bridge-77w-tdp-processors,13733.html"&gt;77W&lt;/a&gt; - This is the  &lt;a href="http://www.geeks3d.com/20090611/tutorial-what-is-the-thermal-design-power-tdp/"&gt;Thermal Design Power (TDP)&lt;/a&gt; is the maximum power consumed by the CPU under normal / regular use. In other words, the TDP is the max power a device will dissipate when running real applications. What’s more the TDP is given for graphics card default clocks.  TDP is a manufacturer’s data, and thanks to this information, CPUcooler manufactures can size their CPU coolers.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/products/processor/core2quad/"&gt;Quad-Core Desktop Processor&lt;/a&gt; - This is a &lt;a href="http://en.wikipedia.org/wiki/Quad-Core"&gt;multi-core processor&lt;/a&gt; (in fact a quad or 4 core)  computing component with four independent actual central processing units (called "cores").  Intel manufacturers the four cores onto a single integrated circuit die (known as a chip multiprocessor or CMP), or onto multiple dies in a single chip package.  The proximity of multiple CPU cores on the same die allows it to operation at a much higher clock-rate than is possible if the signals have to travel off-chip.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/virtualization/virtualization-technology/hardware-assist-virtualization-technology.html"&gt;Virtualization Technology&lt;/a&gt; - VT-x  (i.e. x86 virtualization or Vanderpool) is the facility that allows multiple operating systems to simultaneously share x86 processor resources in a safe and efficient manner, a facility generically known as hardware virtualization. With virtualization, you can have several operating systems running in parallel, each one with several programs running.  Each operating system runs on a "virtual machine", i.e. each operating system thinks it is running on a completely independent computer. Note that on the Intel Core technology, the virtual machines are not assigned specific CPUs among the multiple CPUs but are shared by all.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/architecture-and-technology/hd-graphics/hd-graphics-developer.html"&gt;Intel HD Graphics 4000&lt;/a&gt; - Before the introduction of Intel HD Graphics, Intel integrated graphics were built into the motherboard's northbridge.  HD Graphics 4000 is Intel's 3rd generation of this integrated GPU technology.  The HD 4000 was completely redesigned and offers many improvement. The IPC (instructions per clock) can therefore be even 2x as fast  and &lt;a href="http://www.notebookcheck.net/Intel-HD-Graphics-4000.69168.0.html"&gt;overall up to 60% more performance should be possible&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
One highly desirable feature missing from the Intel i5 line is &lt;a href="http://www.intel.com.au/content/www/au/en/architecture-and-technology/hyper-threading/hyper-threading-technology.html"&gt;Hyper-Threading Technology&lt;/a&gt;.  Hyper-Threading (HT) is a means for improving processor performance by supporting the execution of multiple threads (two is the current limit) on the same processor at once: the threads share the various on-chip execution units.  HT is available on the i7 line of processors but I just can't justify the cost of this additional functionality.
&lt;h2&gt;Motherboard (Mobo)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/intel-desktop-board-dz77ga-70k.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Intel Desktop Board DZ77GA-70K" src="/images/intel-desktop-board-dz77ga-70k.jpg" width="300" height="200" /&gt;
&lt;/a&gt;
I need to match the CPU to a -K Series motherboard and I picked the &lt;a href="http://www.intel.com/content/www/us/en/motherboards/desktop-motherboards/desktop-board-dz77ga-70k.html"&gt;Intel Desktop Board DZ77GA-70K&lt;/a&gt; with &lt;a href="http://www.intel.com/content/www/us/en/chipsets/performance-chipsets/z77-express-chipset.html"&gt;Intel Z77 Express Chipset&lt;/a&gt; family which includes &lt;a href="http://www.intel.com/content/www/us/en/chipsets/high-definition-audio.html"&gt;Intel High Definition Audio&lt;/a&gt;.
The Intel high-definition audio chip allows you to use your computer to send digital audio signals to speakers, headphones, telephones and other audio equipment. Early computer audio systems could only produce simple stereo sound reproduction. The Intel HD audio system supports surround sound up to Dolby 7.1.  It supports the  usual 32GB of RAM, &lt;a href="http://www.intel.com/content/www/us/en/solid-state-drives/ssd-smart-response-video.html"&gt;Smart Response Technology&lt;/a&gt;, &lt;a href="http://www.intel.com/support/services/smartconnect/sb/CS-033108.htm"&gt;Smart Connect Technology&lt;/a&gt;, Intel &lt;a href="http://www.intel.com/support/chipsets/imsm/sb/CS-020784.htm"&gt;Rapid Storage Technology&lt;/a&gt; (Intel RST) for &lt;a href="http://en.wikipedia.org/wiki/RAID"&gt;RAID&lt;/a&gt; 0, 1, 5, and 10. The "GA" in the motherboard's name means that it contains Bluetooth/WiFi and the a front panel USB 3.0 module  ("GAL" means it has no Bluetooth/WiFi). The board supports Intel's &lt;a href="http://www.intel.com/content/www/us/en/intelligent-systems/intel-boot-loader-development-kit/boot-loader-technology-brief.html"&gt;Fast Boot Technology&lt;/a&gt; which can dramatically reduce the time to boot the system. Support for high end graphics boards. It has eight  &lt;a href="http://www.intel.com/content/www/us/en/io/universal-serial-bus/universal-serial-bus.html"&gt;USB 3.0&lt;/a&gt; ports (4 external/4 header), ten &lt;a href="http://www.intel.com/content/www/us/en/io/universal-serial-bus/universal-serial-bus.html"&gt;USB 2.0&lt;/a&gt; ports (4 external (2 Hi-Current/Fast Charging) / 6 internal), four Serial ATA 6.0 Gb/s ports, one eSATA 6.0 Gb/s, four &lt;a href="http://www.intel.com/content/www/us/en/io/serial-ata/serial-ata-developer.html"&gt;Serial ATA&lt;/a&gt; 3.0 Gb/s ports and many other features.&lt;/p&gt;
&lt;p&gt;The Mobo comes with the &lt;a href="http://www.intel.com/content/www/us/en/motherboards/desktop-motherboards/desktop-boards-software-visual-bios.html"&gt;Intel Visual BIOS&lt;/a&gt; graphical interface and animated controls, which allow you to configure settings faster and take full advantage of your Intel -K processors. The Visual BIOS uses the &lt;a href="http://whatis.techtarget.com/definition/Unified-Extensible-Firmware-Interface-UEFI"&gt;Unified Extensible Firmware Interface (UEFI)&lt;/a&gt; which defines a software interface between an operating system and Mobo firmware. &lt;a href="http://h30565.www3.hp.com/t5/Feature-Articles/The-30-year-long-Reign-of-BIOS-is-Over-Why-UEFI-Will-Rock-Your/ba-p/198"&gt;UEFI is meant to replace&lt;/a&gt; the &lt;a href="http://en.wikipedia.org/wiki/BIOS"&gt;Basic Input/Output System (BIOS)&lt;/a&gt; firmware interface, present in all IBM PC-compatible personal computers.&lt;/p&gt;
&lt;p&gt;The form factor for this Mobo is ATX.  &lt;a href="http://www.pcmag.com/encyclopedia/term/38148/atx-motherboard"&gt;ATX (Advanced Technology eXtended)&lt;/a&gt; is a motherboard form factor specification developed by Intel in 1995 to improve on previous de facto standards like the AT form factor.  There are &lt;a href="http://www.youtube.com/watch?v=3_t7sZs8XBs"&gt;different form factor of motherboards&lt;/a&gt; including microATX, Standard ATX and XL-ATX.  This is important to keep in mind when picking a case.&lt;/p&gt;
&lt;p&gt;The selling feature for me was that its an Intel product (motherboards are new to me and I need the emotional support), seems easy to setup, it has gotten &lt;a href="http://www.pcmag.com/article2/0,2817,2405934,00.asp"&gt;reasonable reviews&lt;/a&gt; (and&lt;a href="http://www.hardocp.com/article/2012/08/06/intel_dz77ga70k_lga_1155_motherboard_review/1#.UX1AQKLCZ8E"&gt; here is another&lt;/a&gt;), and reasonable price.  It isn't most feature full Mobo nor what a die-hard overclocker would buy but it seems a solid, stable product that will not give me any troubles or support problems and will perform well.
&lt;h2&gt;Memory (RAM)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/corsair-vengeance.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Corsair Vengeance" src="/images/corsair-vengeance.jpg" width="300" height="172" /&gt;
&lt;/a&gt;
I'm going with 8GB of RAM in an effort to assure good I/O and 12GB or 16GB just seems like more than I will need.  That amount of memory seems &lt;a href="http://blog.betaforcepc.com/computer-memory/2012/01/"&gt;sufficient for you average gamer&lt;/a&gt; and should work for me.  And the reviews I have seen also claim they have successively &lt;a href="http://www.hardwaresecrets.com/article/152"&gt;overclocked this memory&lt;/a&gt;.
According to the September 2011 &lt;a href="http://store.steampowered.com/hwsurvey"&gt;Steam hardware survey&lt;/a&gt;, 4GB of RAM is currently the most popular configuration among gaming PCs. This may be sufficient for a light home user, however, many power users and enthusiasts find 4GB to be insufficient. Many recommend at least 6GB for any enthusiast PC, especially in light of the relatively&lt;/p&gt;
&lt;p&gt;I also want to keep open the option to do some overclocking, so I need to consider memory based on Intel's  &lt;a href="http://www.intel.com/content/www/us/en/gaming/gaming-computers/intel-extreme-memory-profile-xmp.html?wapkw=(xmp)."&gt;Extreme Memory Profile (XMP)&lt;/a&gt;.  I also want a memory provider with a solid reparation.  The Intel Core i5-3570K processor &lt;a href="http://ark.intel.com/products/65520"&gt;requires DDR3-1333/1600&lt;/a&gt; memory.  With all this in mind, I choose the &lt;a href="http://www.corsair.com/en/vengeance-8gb-dual-channel-ddr3-memory-kit-cmz8gx3m2a1600c9b.html"&gt;8GB (2X4 GB) Corsair Vengeance Blue, 9-9-9-24, 1.5V  PC3-12800 1600MHz DDR3 240-Pin SDRAM Dual Channel Memory&lt;/a&gt;.   They are not top of the line memory but seem a good fit for my needs and have gotten &lt;a href="http://www.legitreviews.com/article/1740/1/"&gt;solid reviews&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;DDR3 or DDR3 SDRAM, an abbreviation for &lt;a href="http://en.wikipedia.org/wiki/DDR3_SDRAM"&gt;double data rate type three synchronous dynamic random access memory&lt;/a&gt;, is a modern kind of dynamic random access memory (DRAM) with a high bandwidth interface, and has been in use since 2007.  The primary benefit of DDR3  over its immediate predecessor (i.e. DDR2), is its ability to transfer data at twice the rate (eight times the speed of its internal memory arrays), enabling higher bandwidth or peak data rates. The next generation,  DDR4 expected to be released to the market sometime in 2013.  Its primary benefits compared to DDR3 is the higher range of clock frequencies (200MHz vs 166MHz) and data transfer rates (400MT/s vs 333MT/s).&lt;/p&gt;
&lt;p&gt;DDR3 memory is classified according to the maximum speed at which it can work, as well as their timings. Timing are numbers such as 3-4-4-8, 5-5-5-15, 7-7-7-21, 9-9-9-24 where lower is better. Memory speed is specified via a number like this: DDR3-xxx / PC3-yyy or DDR3-xxx/yyy. The xxx number indicates the maximum clock speed that the memory chip supports. Therefore, DDR3-1333 can work up to 1,333MHz. Note this isn't the real clock speed but twice that speed. So the real clock speed of DDR3-1333 is 666MHz. The yyy indicates the maximum transfer rate that the memory can reach. So memory labeled as DDR3-1333/10664 has a transfer rate of 10,664MB/s or 21,328 MB/s if they are running under &lt;a href="http://www.hardwaresecrets.com/article/133"&gt;dual channel mode&lt;/a&gt;. Most current boards have dual with the Intel socket 1336 has triple channel.&lt;/p&gt;
&lt;p&gt;The memory timings x-x-x-x indicates the number of clock cycles that it takes for the memory to perform something. The smaller the number, the faster the memory. These set of four numerical parameters are called CL, tRCD, tRP, and tRAS. Sometimes there a fifth value which is voltage. Check out &lt;a href="http://www.hardwaresecrets.com/article/Understanding-RAM-Timings/26/1"&gt;Understanding RAM Timings&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;Memory is sold in “kits” which are simply multiple single, similar (identical as possible) RAM modules packaged together. The intention is for them to be used in motherboards that have dual and triple (etc.) RAM channel capabilities.
&lt;h2&gt;Graphics Processing Unit (GPU)&lt;/h2&gt;
I'm going to try and live with the on-board &lt;a href="http://en.wikipedia.org/wiki/Graphics_processing_unit"&gt;graphics processing unit (GPU)&lt;/a&gt; integrated with the CPU and invest that money elsewhere.   The &lt;a href="http://www.notebookcheck.net/Intel-HD-Graphics-4000-Benchmarked.73567.0.html"&gt;reviews of  Intel's newest integrated GPU&lt;/a&gt; that comes with the i5-3570K (&lt;a href="http://www.pcworld.com/article/254178/ivy_bridge_graphics_entry_level_cards_are_dead.html"&gt;HD Graphics 4000&lt;/a&gt; or HD 4000) have been favorable (also see &lt;a href="http://reviews.cnet.com/8301-33642_7-57418061-292/at-long-last-a-credible-3d-gaming-chip-from-intel/"&gt;this&lt;/a&gt;).   This is the  third and latest generation of HD Graphics (now with 16 &lt;a href="http://en.wikipedia.org/wiki/Execution_unit"&gt;execution units&lt;/a&gt;) and appears to be a real contender to low end graphics cards.  If it proves less than acceptable, I'm invest in a graphics board another day.
&lt;h2&gt;Sound Card&lt;/h2&gt;
Here again, I'm not buying a separate card but using the &lt;a href="http://www.intel.com/content/www/us/en/chipsets/high-definition-audio.html"&gt;Intel High Definition Audio&lt;/a&gt; integrated into the motherboard.  Frankly, I'm not sure if this will limit my GNU Radio &amp;amp; digital signal processing objectives but I'll take the risk.  If I'm unhappy for any reason, I'll buy myself a sound board.
&lt;h2&gt;Solid State Drive (SSD)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/samsung-ssd-840-pro.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Samsung-SSD-840-Pro" src="/images/samsung-ssd-840-pro.jpg" width="30%" height="30%" /&gt;
&lt;/a&gt;
I have chosen the &lt;a href="http://www.samsung.com/us/computer/memory-storage/MZ-7TD120BW"&gt;Samsung Electronics 840 Pro Series 2.5-Inch 128GB SATA 6GB/s &lt;/a&gt;for my &lt;a href="http://en.wikipedia.org/wiki/Solid-state_drive"&gt;Solid State Drive (SSD)&lt;/a&gt;.  Samsung has a great repatriation in this space and it has gotten &lt;a href="http://www.tomshardware.com/reviews/ssd-recommendation-benchmark,3269.html"&gt;solid reviews&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What most people who use SSDs do (and what I plan to do) is to buy one large enough to hold the OS and applications, and also buy a hard drive to hold the rest of your documents, photos, videos, etc. That's a good compromise which puts the most performance-critical files on the fastest drive and has the cheapest cost-per-byte for your voluminous data files which typically have much lower performance requirements.  But keep in mind that as soon as the amount of data written reaches the stated capacity of the device, the write bandwidth immediately drops.  In fact, &lt;a href="http://www.velobit.com/storage-performance-blog/bid/112643/Warning-Bark-Write-Performance-Speed-Drops-On-All-SSDs"&gt;write bandwidth reduced by up to 70-80% once fully loaded&lt;/a&gt; with data and continued to operate under those conditions.  Therefore, don’t fill the SSD drive.&lt;/p&gt;
&lt;p&gt;Also, one of the most publicized downsides of SSDs is that they have a limited number of writes before they wear out—however, with most newer SSDs, this isn't actually a problem. Most modern SSDs will become outdated before they die, and you'll probably have upgraded by then, so there's not really a huge need to worry about writing to the drive too many times.&lt;/p&gt;
&lt;p&gt;Because of the high speed of the SSD, your going to want to use the 6GB/s SATA ports on the motherboard.  The standard 3GB/s SATA ports don't have the throughput, never the less, &lt;a href="http://www.tomshardware.com/reviews/ssd-upgrade-sata-3gbps,3469.html"&gt;studies show&lt;/a&gt; the SSD still give you benefits.
&lt;h2&gt;Power Supply Unit (PSU)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/corsair-650w-psu.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Corsair 650W PSU" src="/images//corsair-650w-psu.jpg" width="25%" height="25%" /&gt;
&lt;/a&gt;
I choose the popular  &lt;a href="http://www.corsair.com/us/power-supply-units/tx-series-power-supply-units/tx-series-tx650-80-plus-bronze-certified-650-watt-high-performance-power-supply.html"&gt;Corsair TX650 650-Watt Power Supply&lt;/a&gt; as my PSU. Most computers only consume around 150W, and even a high end computer might consume maybe 200W. That's why most OEM computer manufacturers put small 250-350W PSUs in their systems. If you look at online reviews of highly overclocked systems with multiple video cards (SLI/Crossfire) they consume at most about 500-600W.   I don't believe I'll ever approach these levels so this PSU will give me much head room.  The &lt;a href="http://www.silentpcreview.com/article813-page1.html"&gt;review I have read&lt;/a&gt; seem to claim that he best way to take advantage of the TX650W's quiet qualities is  to ensure that the PSU intake air does not exceed 30°C often, nor demand more than ~350W DC output.  I believe my usage will fit in this sweat spot.
&lt;h2&gt;Networking&lt;/h2&gt;
Networking capabilities are built into the motherboard.  The Mobo comes with two Gigabit (10/100/1000 Mb/s) LAN subsystems using the &lt;a href="http://www.intel.com/content/www/us/en/ethernet-controllers/82579-gigabit-ethernet-connection-family.html"&gt;Intel 82579V Gigabit Ethernet Controller&lt;/a&gt;. It also has a &lt;a href="http://whatis.techtarget.com/definition/Bluetooth-20EDR"&gt;Bluetooth 2.1&lt;/a&gt; &amp;amp; WiFi 802.11b/g/n module. There appears to have been some &lt;a href="http://communities.intel.com/thread/32882"&gt;troubles with WiFi and Bluetooth module for DZ77GA-70K&lt;/a&gt; in 2012, but it has been reported to Intel and hopefully this has been worked out by now.  I'll have to make sure I update the firmware on the board when I get it.
&lt;h2&gt;CD-ROM / DVD Drive / Hard Drives&lt;/h2&gt;
I'm not going to worry about this now.  I anticipate loading all my software / data from the Web or transferring from my existing hard drives.  Also, I'll reuse my existing hard drives in this box.
&lt;h2&gt;Cooler Case&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/cooler-master-haf-912-mid-tower-computer-case.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Cooler Master HAF 912 - Mid Tower Computer Case" src="/images/cooler-master-haf-912-mid-tower-computer-case.jpg?w=300" width="300" height="139" /&gt;
&lt;/a&gt;
The Intel Core i5-3570K comes with a &lt;a href="http://www.youtube.com/watch?v=D2gOhPMaOgg"&gt;stock cooler&lt;/a&gt;.  If do over clock the CPU, I'm likely to need a better cooler, but this is fine for now.
Picking a case has been the hardest thing for me to select.  I guess this is because its not as much a technical decision but an aesthetic choice.  I have narrowed my choose to the&lt;a href="http://www.coolermaster-usa.com/landing/haf912/home.php"&gt; Cooler Master HAF 912 - Mid Tower Computer Case with High Airflow Design&lt;/a&gt; (19.5 x 9.1 x 18.9 inches ; 17.8 pounds).  It has gotten &lt;a href="http://www.overclockersclub.com/reviews/cooler_master_haf_912/"&gt;good reviews&lt;/a&gt; with the main complaint being that it needs more fans (much room for more installation but only two are provided).  The front panel comes with the older USB 2.0 ports but the Mobo comes with a USB 3.0 panel that could be install if desired.  The case isn't expensive but still has a sharp look and seems very versatile in its use and cooling.
&lt;h2&gt;Monitor&lt;/h2&gt;
The Dell LCD monitor I presently have dates back to 2006 and isn't equipped with &lt;a href="http://en.wikipedia.org/wiki/HDMI"&gt;HDMI&lt;/a&gt;, which is the only way to interface with the Mobo.  I presently use my monitor via its &lt;a href="http://www.pcmag.com/encyclopedia/term/42144/dvi"&gt;Digital Video Interface Digital (DVI-D)&lt;/a&gt;, but it also has &lt;a href="http://www.pcmag.com/encyclopedia/term/53801/vga"&gt;Video Graphics Array (VGA)&lt;/a&gt; and &lt;a href="http://www.pcmag.com/encyclopedia/term/40120/composite-video"&gt;Composite Video&lt;/a&gt; inputs.  So if I wish to continue to use the monitor, I'll need a converter of some type.  I found that the DVI-D to HDMI can be done via an inexpensive cable, so that is the way I'm going.  I specifically need a HDMI Type A to DVI-D Dual Link Male to Male cable.
&lt;h2&gt;Operating System (OS)&lt;/h2&gt;
I plan to install &lt;a href="http://www.ubuntu.com/"&gt;Ubuntu Linux&lt;/a&gt; on the SSD drive.  Picking the &lt;a href="http://en.wikipedia.org/wiki/Linux_distribution"&gt;Linux distribution&lt;/a&gt; was nearly as hard as picking the case.  I choose Ubuntu because of its popularity and I wanted to experience its desktop environment once again, GNOME.  I used GNOME many years ago when it was very young, I saw potential, and I would like to see how it has grown. I plan to spend the vast majority of my time within Xterm at the command prompt, but I also want to get familiar with Ubuntu/GNOME.  I'll also do most of my systems administration at the command prompt, but again, getting familiarity with Ubuntu would be good to know.&lt;/p&gt;
&lt;p&gt;How do I plan to installing Ubuntu, given that I will not have a OS already installed and I will not have a CD-ROM/DVD?  Ubuntu does have an ability to be&lt;a href="https://help.ubuntu.com/community/Installation/FromUSBStickQuick"&gt; installed via an USB stick&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm not going to abandon MS Windows.  I have many tools that I use in Windows and its not practical to just abandon them for something else, at least not right now.  I would like to&lt;a href="http://en.wikipedia.org/wiki/Multi_boot"&gt; dual boot&lt;/a&gt; the system with Linux and MS Windows.  Ideally, I'll keep my old Windows image on my current PC's hard drive, put that drive in my new system, and have the hard drive be my second OS on the &lt;a href="http://en.wikipedia.org/wiki/Booting"&gt;bootloader's&lt;/a&gt; chain of operating systems.  I know this could be done if I choose to re-install MS Windows and all my applications but I don't know the challenges I'll face given I'm using an establish image .... it will be a learning opportunity!&lt;/p&gt;
&lt;p&gt;If I'm forces to do a re-install of MS Windows, I might us &lt;a href="https://www.virtualbox.org/"&gt;Oracle VM VirtualBox&lt;/a&gt;, which is a x86 virtualization software package. VirtualBox can be installed on an existing host operating system as an application; this host application allows additional guest operating systems, each known as a Guest OS, to be loaded and run, each with its own virtual environment.  The typical way of installing a guest operating system is to install it from the ground up. In general, you don’t see VirtualBox running a guest operating system from an existing drive or partition.  Never the less, a search of the Web does show evidence that people have made it work this way (&lt;a href="http://en.gentoo-wiki.com/wiki/Running_a_VirtualBox_Guest_from_a_Real_Partition"&gt;1&lt;/a&gt;, &lt;a href="https://www.virtualbox.org/wiki/Migrate_Windows"&gt;2&lt;/a&gt;, &lt;a href="http://unix.stackexchange.com/questions/31260/booting-the-already-installed-windows-from-the-virtualbox-installed-in-ubuntu"&gt;3&lt;/a&gt;, &lt;a href="http://www.virtualbox.org/manual/ch09.html#rawdisk"&gt;4&lt;/a&gt;, &lt;a href="http://geekery.amhill.net/2010/01/27/virtualbox-with-existing-windows-partition/"&gt;5&lt;/a&gt;, &lt;a href="http://serverfault.com/questions/241678/booting-a-native-windows-install-in-virtualbox-is-it-possible"&gt;6&lt;/a&gt;, &lt;a href="http://askubuntu.com/questions/168156/how-to-use-a-real-partition-with-windows-7-installed-in-a-virtualbox-vm"&gt;7&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The last, and least desirable approach (for my needs) is to use Windows applications is via &lt;a href="http://en.wikipedia.org/wiki/Wine_(software)"&gt;Wine&lt;/a&gt;.  Wine (originally an acronym for "Wine Is Not an Emulator") is a compatibility layer capable of running Windows applications on Linux. Instead of simulating internal Windows logic like a virtual machine or emulator, Wine translates Windows API calls into Linux calls on-the-fly, eliminating the performance and memory penalties of other methods and allowing you to cleanly integrate Windows applications into your desktop.  Since it doesn't create a virtual machine programs perform faster than in a VM.  However, you'll need to test it with your application since it doesn't support all programs.  Also, you’re not running MS Windows, just the MS Windows compatible applications.  This is fine if your interest in running Excel standalone, but you can’t perform anything that requires the MS operating system.
&lt;h2&gt;Boot Loader&lt;/h2&gt;
A boot loader is the first software program that runs when a computer starts. It is responsible for loading and transferring control to the operating system kernel software. The kernel, in turn, initializes the rest of the operating system.  &lt;a href="http://www.gnu.org/software/grub/"&gt;GRUB (GRand Unified Bootloader)&lt;/a&gt; is a boot loader package developed to support multiple operating systems and allow the user to select among them during boot-up.  GRUB is often the default boot loader for Linux and is preferred to MS Windows since it makes up for numerous deficiencies while providing full-featured command line and graphical interfaces.  GRUB is the default boot loader for Ubuntu, making it an easy choose.  GRUB is powerful and complex so check out &lt;a href="http://www.zdnet.com/my-experiments-with-multi-boot-selection-with-uefi-boot-manager-7000013627/"&gt;How I configured grub as the default bootloader on a UEFI Boot systems&lt;/a&gt;.
&lt;h2&gt;What does it Cost&lt;/h2&gt;
Now that I have a plan, what will all this cost?  I estimate it will be $765, less than one-third the cost of my present system.  Granted I'll be reusing the monitor, key board, mouse, and some drives but this is a substantial price difference for what will be a much more capable machine.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/cost1.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-1477" alt="cost" src="http://jeffskinnerbox.files.wordpress.com/2013/04/cost1.jpg" width="500" height="447" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To see what I finally implemented, check out &lt;a href="http://jeffskinnerbox.wordpress.com/2013/08/01/building-my-linux-box-the-implementation/"&gt;Building My Linux Box...The Implementation&lt;/a&gt;.&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Linux"></category></entry><entry><title>A Better Mobile Display for the Raspberry Pi</title><link href="/posts/2013/Apr/11/a-better-mobile-display-for-the-raspberry-pi/" rel="alternate"></link><published>2013-04-11T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-04-11:posts/2013/Apr/11/a-better-mobile-display-for-the-raspberry-pi/</id><summary type="html">&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/issh-on-ipad.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="issh-on-ipad" src="/images/issh-on-ipad.png?w=225" width="225" height="300" /&gt;
&lt;/a&gt;
As I described in an &lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt;earlier post&lt;/a&gt;, I run my Raspberry Pi (RPi) as a &lt;a href="http://en.wikipedia.org/wiki/Headless_system"&gt;headless system&lt;/a&gt;, using &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt;'s xterm for command line interaction with the RPi, with my PC being my X server to support any X Window applications.  I can move files between the PC and the RPi via my &lt;a href="http://jeffskinnerbox.wordpress.com/2012/11/11/dropbox-for-the-raspberry-pi-sort-of/"&gt;pseudo-Dropbox&lt;/a&gt;.  I really recommend this configuration and its working perfectly for me.&lt;/p&gt;
&lt;p&gt;This configuration gives me a great deal of utility but no mobility .... I'm still tied to my desktop PC.  Maybe I should consider replacing the desktop PC with a laptop but I don't want to spend the money.  I have seen some small,  inexpensive &lt;a href="http://www.adafruit.com/products/922"&gt;keyboards&lt;/a&gt; and &lt;a href="http://www.adafruit.com/products/947"&gt;displays&lt;/a&gt; that could be connected directly to the RPi, and you could &lt;a href="http://www.raspberrypi.org/archives/2848"&gt;cobble together a mobile unit&lt;/a&gt;, or the more elegant &lt;a href="http://news.idg.no/cw/art.cfm?id=9662DBB2-013A-069C-759851E179CD3D16"&gt;Kindle version&lt;/a&gt;, but this still doesn't give me the mobility look &amp;amp; feel I would like.&lt;/p&gt;
&lt;p&gt;iPad to the rescue (assuming you have one ....)!   I found a great app called &lt;a href="http://www.zinger-soft.com/iSSH_features.html"&gt;iSSH&lt;/a&gt; by Zingersoft.  Its claims that it is a "comprehensive VT100, VT102, VT220, ANSI, xterm, and xterm-color terminal emulator over SSH and telnet, integrated with a tunneled X server, RDP and VNC client. "   I installed it, configured it quickly, and got  a terminal connection to the RPi without reading the documentation .... Impressive since successfully configuring ssh, Xserver, etc. can be challenging sometimes.  (Note: The easy of this was largely due to setting up RPi environment properly in the first place. See the &lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt;earlier post&lt;/a&gt;).  To top it off, iSSH has a slick look &amp;amp; feel.&lt;/p&gt;
&lt;h2&gt;Configuring iSSH&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/issh-on-ipad-x-server.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="iSSH X Server Session" src="/images/issh-on-ipad-x-server.png?w=225" width="225" height="300" /&gt;
&lt;/a&gt;
Zingersoft's &lt;a href="http://www.zinger-soft.com/support1.html"&gt;documentation on configuring iSSH&lt;/a&gt; is easy to follow and requires just a few steps.  I had no problem getting an terminal session working to the RPi but I did have problems with graphics programs (i.e. X Window client programs).  It appears that iSSH's terminal isn't really &lt;a href="http://invisible-island.net/xterm/xterm.faq.html"&gt;xterm&lt;/a&gt; but a terminal emulation (secured via &lt;a href="http://en.wikipedia.org/wiki/Secure_Shell"&gt;ssh&lt;/a&gt;).  The iSSH terminal doesn't use the X server.  In fact, while in the terminal session,  to see the X server display (i.e. to see graphics applications rendered via the RPi X client) you must hit the button at the top right of the iPad display.&lt;/p&gt;
&lt;p&gt;Frankly, the fact that the X application didn't work the first time wasn't a big surprise to me.  I have been struggling with getting my X Window configuration set up to work reliably for some time.  What I was observing was that X would work fine for sometime but at some point I would get the error message "couldn't connect to display".&lt;/p&gt;
&lt;p&gt;This error is very common and nearly every X user has seen some version of this before.  I assume that the right way to solve this was to gain a deeper understanding of X Windows and discover its root cause .  I did gain a deeper understanding of X Windows, but a solution to my problem never jumped out from the "official" materials I read.  I found the solution when I happened upon the blog "&lt;a href="http://b.kl3in.com/2012/01/x11-display-forwarding-fails-after-some-time/"&gt;X11 Display Forwarding Fails After Some Time&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;The root cause of my error message is the time out of the X Forwarding.  I have been using the -X option when using ssh.  This is the more secure option for X Forwarding, but comes at a price, as shown below.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Using &lt;code&gt;ssh -X&lt;/code&gt;, X forwarding is enabled in "Untrusted" mode, making use of various X security extensions, including a time-limited Xauth cookie.&lt;/li&gt;
    &lt;li&gt;Use &lt;code&gt;ssh -Y&lt;/code&gt; to enable "Trusted" mode for X, which will enable complete access to your X server. There is no timeout for this option.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
So my Display problem isn't really an error, per say, but ssh timing out on me.  To fix this, I added the entry &lt;code&gt;ForwardX11Timeout 596h&lt;/code&gt; into my &lt;code&gt;~/.ssh/config&lt;/code&gt; file on my PC.  With this problem solved, I continued my journey into X.
&lt;h2&gt;My Journey to a Better Understanding of X&lt;/h2&gt;
Using &lt;a href="http://en.wikipedia.org/wiki/X_Window_System"&gt;X Windows&lt;/a&gt; for the first time can be somewhat of a shock to someone familiar with other graphical environments, such as Microsoft Windows or Mac OS.  X was designed from the beginning to be network-centric, and uses a “client-server” model. In the X model, the “X server” runs on the computer that has the keyboard, monitor, and mouse attached. The server's responsibility includes tasks such as managing the display, handling input from the keyboard and mouse, and other input or output devices (i.e., a “tablet” can be used as an input device, and a video projector can be an output device, etc.). Each X application (such as xterm) is a “client”. A client sends messages to the server requesting things like “Please draw a window at these coordinates”, and the server sends back messages such as “The user just clicked on the OK button”. These standardized set of messages make up the &lt;a href="https://en.wikipedia.org/wiki/X_Window_System_core_protocol"&gt;X Protocol&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The X server and the X clients commonly run on the same computer. However, it is perfectly possible to run the X server on a less powerful computer (e.g. in my case a PC or iPad), and run X applications (the clients) on a powerful machine that serves multiple X servers (or it can be a simple RPi, as in my case). In this scenario the communication between the X client and server takes place over the network (WiFi for my iPad), via the X Protocol. There is nothing in the protocol that forces the client and server machines to be running the same operating system, or even to be running on the same type of computer.
&lt;h2&gt;The Display&lt;/h2&gt;
It is important to remember that the X server is the is the software program which manages the monitor, keyboard, and pointing device. In the X window system, these three devices are collectively referred to as the "display".  Therefore, the X server serves displaying capabilities, via the display, to other programs, called X clients, that connect to  the X server.  All these connections are established via the X protocol.&lt;/p&gt;
&lt;p&gt;The relationship between the X server and the display are tight, in that the X server is engineered to support a specific display (or set of displays).  As a user of X, you don't have any control over this relationship, only the software developer who created the server can modify this relationship (generally speaking).  On the other hand, as a user you have free hand in configuring the X protocol connection between the X server and the X clients.&lt;/p&gt;
&lt;p&gt;How do you establish a X Protocol connection between any given server and a client?  This is done via the environment variable "DISPLAY".  A Linux environment variable DISPLAY tells all its X clients what display they should use for their windows. Its value is set by default in ordinary circumstances, when you start an X server and run jobs locally. Alternatively, you can specify the display yourself.  One reason to do this is when you want log into another system, and run a X client there, and but have the window displayed at your local terminal.  That is, the DISPLAY environment variable must point to your local terminal.&lt;/p&gt;
&lt;p&gt;So the environment variable "DISPLAY" stores the address for X clients to connect to. These addresses are in the form: &lt;code&gt;hostname:displaynumber.screennumber&lt;/code&gt; where
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;hostname&lt;/code&gt; is the name of the computer where the X server runs. An omitted &lt;code&gt;hostname&lt;/code&gt; means the localhost.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;displaynumber&lt;/code&gt; is a sequence number (usually 0). It can be varied if there are multiple displays connected to one computer.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;screennumber&lt;/code&gt; is the screen number. A display can actually have multiple screens. Usually there's only one screen though where 0 is the default.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Setting the DISPLAY variable depends of your shell, but for the Bourne, Bash or Korn shell, you could do the following to connect with the systems local display:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;export DISPLAY=localhost:0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The remote server knows where it have to redirect the X network traffic via the definition of the DISPLAY &lt;a title="linux:environment_variable" href="http://gerardnico.com/wiki/linux/environment_variable"&gt;environment variable&lt;/a&gt; which generally points to an X Display server located on your local computer.
&lt;h2&gt;X Security&lt;/h2&gt;
So you see, as the user, you have full control over where you wish to display the X client window.   So what prevents you from doing something malicious,  like popping up window on someone else  terminal or read their key strokes?  After all, all you really need is their host name.  &lt;a href="http://www.linux-tutorial.info/modules.php?name=Howto&amp;amp;pagename=Remote-X-Apps/Remote-X-Apps-6.html"&gt;X servers have three ways of authenticating connections&lt;/a&gt; to it: the host list mechanism (xhost) and the magic cookie mechanism (xauth). Then there is ssh, that can forward X connections, providing a protected connection between client and server over a network using a secure &lt;a title="Tunnelling protocol" href="http://en.wikipedia.org/wiki/Tunnelling_protocol"&gt;tunnelling protocol&lt;/a&gt;.
&lt;h2&gt;The xhost Command&lt;/h2&gt;
The &lt;a href="http://www.xfree86.org/current/xhost.1.html"&gt;&lt;code&gt;xhost&lt;/code&gt;&lt;/a&gt; program is used to add and delete host (computer) names or user names to the list of machines and users that are allowed to make connections to the X server. This provides a rudimentary form of privacy control and security.  A typical use is as follows: Let's call the computer you are sitting at the "local host" and the computer you want to connect to the "remote host". You first use xhost to specify which computer you want to give permission to connect to the X server of the local host. Then you connect to the remote host using telnet. Next you set the DISPLAY variable on the remote host. You want to set this DISPLAY variable to the local host. Now when you start up a program on the remote host, its GUI will show up on the local host (not on the remote host).&lt;/p&gt;
&lt;p&gt;For example, assume the IP address of the local host is 128.100.2.16 and the IP address of the remote host is 17.200.10.5.&lt;/p&gt;
&lt;p&gt;On the local host, type the following at the command line:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;xhost + 17.200.10.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Log on to the remote host&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;telnet 17.200.10.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the remote host (through the telnet connection), instruct the remote host to display windows on the local host by typing:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;export DISPLAY=128.100.2.16:0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now when you type xterm on the remote host, you should see an xterm window on the local host.  You should remove the remote host from your access control list as follows.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;xhost - 17.200.10.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some additional xhost commands:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;xhost&lt;/code&gt;List all the hosts that have access to the X server
&lt;code&gt;xhost + hostname&lt;/code&gt;Adds hostname to X server access control list.
&lt;code&gt;xhost - hostname&lt;/code&gt;Removes hostname from X server access control list.
&lt;code&gt;xhost +&lt;/code&gt; Turns off access control (all remote hosts will have access to X server ... generally a bad thing to do)
&lt;code&gt;xhost -&lt;/code&gt;Turns access control back on (all remote hosts blocked access to X server)&lt;/p&gt;
Xhost is a very insecure mechanism. It does not distinguish between different users on the remote host. Also, hostnames (addresses actually) can be &lt;a href="http://en.wikipedia.org/wiki/Spoofing_attack"&gt;spoofed&lt;/a&gt;. This is bad if you're on an untrusted network.
&lt;h2&gt;The xauth Command&lt;/h2&gt;
Xauth allows access to anyone who knows the right secret. Such a secret is called an authorization record, or a &lt;a href="http://en.wikipedia.org/wiki/Magic_cookie"&gt;magic cookie&lt;/a&gt;. This authorization scheme is formally called &lt;code&gt;MIT-MAGIC-COOKIE-1&lt;/code&gt;.  The cookies for different displays are stored together in the file &lt;code&gt;.Xauthority&lt;/code&gt; in the user's home directory (you can specify a different cookie file with the &lt;code&gt;XAUTHORITY&lt;/code&gt; environment variable).  The &lt;code&gt;xauth&lt;/code&gt; application is a utility for accessing the &lt;code&gt;.Xauthority&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;On starting a session, the X server reads a cookie from the&lt;code&gt;.Xauthority&lt;/code&gt; file. After that, the server only allows connections from clients that know the same cookie (Note: When the cookie in &lt;code&gt;.Xauthority&lt;/code&gt; changes, the server will not pick up the change.).  If you want to use xauth, you must start the X server with the &lt;code&gt;-auth authfile&lt;/code&gt; argument.   You can generate a magic cookie for the &lt;code&gt;.Xauthority&lt;/code&gt; file using the utility &lt;code&gt;mcookie&lt;/code&gt; (typical usage: &lt;code&gt;xauth add :0 . &lt;code&gt;mcookie&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Now that you have started your X session on the server and have your cookie in &lt;code&gt;.Xauthority&lt;/code&gt;, you will have to transfer the cookie to the client host. There are a few ways to do this.  The most basic way is to transfer the cookie manually by listing the magic cookie for your display with &lt;code&gt;xauth list&lt;/code&gt; and injecting it into the remote hosts &lt;code&gt;.Xauthority&lt;/code&gt; via the &lt;code&gt;xauth&lt;/code&gt; utility.&lt;/p&gt;
&lt;p&gt;Xauth has a clear security advantage over xhost. You can limit access to specific users on specific computers and it does not suffer from spoofed addresses as xhost does.
&lt;h2&gt;X Over SSH&lt;/h2&gt;
Even with the &lt;code&gt;xhost&lt;/code&gt; and &lt;code&gt;xauth&lt;/code&gt; methods, the  the X protocol is transmitted over the network with no encryption.  If you're  worried someone might snoop on your connections (and you should worry), use ssh.  SSH, or the Secure Shell, allows secure (&lt;a href="http://en.wikipedia.org/wiki/Encryption"&gt;encrypted&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Authentication"&gt;authenticated&lt;/a&gt;) connections between any two devices running SSH. These connections may include terminal sessions, file transfers, TCP port forwarding, or X Window System forwarding.  SSH supports a wide variety of encryption algorithms. It supports various &lt;a href="http://en.wikipedia.org/wiki/Message_authentication_code"&gt;MAC&lt;/a&gt; algorithms, and it can use &lt;a href="http://en.wikipedia.org/wiki/Public-key_cryptography"&gt;public-key cryptography&lt;/a&gt; for authentication or the traditional username/password.&lt;/p&gt;
&lt;p&gt;SSH can do something called "&lt;a href="http://docstore.mik.ua/orelly/networking_2ndEd/ssh/ch09_01.htm#ch09-31407"&gt;X Forwarding&lt;/a&gt;" makes the communication secure by "&lt;a href="http://en.wikipedia.org/wiki/Tunneling_protocol"&gt;tunneling&lt;/a&gt;" the X protocol over the SSH secure link.  Forwarding is a type of interaction with another network application, through a inter-mediator, in this case SSH. SSH intercepts a service request from some other program on one side of an SSH connection, sends it across the encrypted connection, and delivers it to the intended recipient on the other side. This process is mostly transparent to both sides of the connection: each believes it is talking directly to its partner and has no knowledge that forwarding is taking place.  This is called tunneling since X protocol is encapsulated within the a SSH protocol.&lt;/p&gt;
&lt;p&gt;When setting up an SSH tunnel for X11, the Xauth key will automatically be copied to the remote system(in a munged form to reduce the risk of forgery) and the DISPLAY variable will be set.&lt;/p&gt;
&lt;p&gt;To turn on X forwarding over ssh, use the command line switch &lt;code&gt;-X&lt;/code&gt; or write the following in your local ssh configuration file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Host remote.host.name ForwardX11 yes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The current version of SSH supports the X11 SECURITY extension, which provides two classes of clients: trusted clients, which can do anything with the display, and untrusted clients, which cannot inject synthetic events (mouse movement, keypresses) or read data from other windows (e.g., take screenshots). It should be possible to run almost all clients as untrusted, leaving the trusted category for screencapture and screencast programs, macro recorders, and other specialized utilities.&lt;/p&gt;
&lt;p&gt;If you use &lt;code&gt;ssh -X remotemachine&lt;/code&gt; the remote machine is treated as an untrusted client and &lt;code&gt;ssh -Y remotemachine&lt;/code&gt; the remote machine is treated as trusted client.  '-X' is supposedly the safe alternative to '-Y'.  However, as a Cygwin/X maintainer says "this is widely considered to be not useful, because the Security extension uses an arbitrary and limited access control policy, which results in a lot of applications not working correctly and what is really a false sense of security".&lt;/p&gt;
&lt;p&gt;You can configuring SSH via the following files:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;per-user configuration is in &lt;code&gt;~/.ssh/config&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;system-wide client configuration is in &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;system-wide daemon configuration is in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The ssh server (&lt;code&gt;sshd&lt;/code&gt;) at the remote end automatically sets &lt;code&gt;DISPLAY&lt;/code&gt; to point to its end of the X forwarding tunnel. The remote tunnel end gets its own cookie; the remote ssh server generates it for you and puts it in&lt;code&gt;~/.Xauthority&lt;/code&gt; there. So, X authorization with ssh is fully automatic.&lt;/p&gt;
&lt;p&gt;X over SSH solves some of the problems inherent to classic X networking. For example, SSH can tunnel X traffic through firewalls and NAT, and the X configuration for the session is taken care of automatically. It will also handle compression for low-bandwidth links.  Also, if you're using X11 forwarding, you may want to consider setting &lt;span style="font-family:'courier new', courier, monospace;"&gt;ForwardX11Trusted no &lt;/span&gt;to guard against malicious clients.
&lt;h2&gt;The Window Manager&lt;/h2&gt;
The X design philosophy is much like the Linux/UNIX design philosophy, “tools, not policy”.  This philosophy extends to X not dictating what windows should look like on screen, how to move them around with the mouse, what keystrokes should be used to move between windows, what the title bars on each window should look like, etc.  Instead, X delegates this responsibility to an application called a “Window Manager”.&lt;/p&gt;
&lt;p&gt;There are many window managers available for X and each  provides a different look and feel.  Some of them support  highly configurable virtual desktops like, &lt;a href="http://www.kde.org/"&gt;KDE&lt;/a&gt; and &lt;a href="http://www.gnome.org/"&gt;GNOME&lt;/a&gt;, some of them are lightweight desktop like &lt;a href="http://lxde.org/"&gt;LXDE&lt;/a&gt; which comes with the RPi, or you can operate bare bones (like I am on my PC while using the RPi) and let MS Windows be your Window Manager via &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X.&lt;/a&gt;  The iPad's iSSH can run without a Window Manager.  In effect, X server uses the display as it sees fit and your unable to control where things loaded. iSSH does have a Window Manage your can use as an option called &lt;a href="http://dwm.suckless.org/"&gt;dwm&lt;/a&gt;.  Its a &lt;a href="http://en.wikipedia.org/wiki/Tiling_window_manager"&gt;tiling window manager&lt;/a&gt;, which is a reasonable way to go given that your pointing device is your finger on the iPad.
&lt;h2&gt;X Display Manager&lt;/h2&gt;
The X Display Manager (XDM) is an optional part of the X Window System that is used for login session management.  XDM provides a graphical interface for choosing which display server to connect to, and entering authorization information such as a login &amp;amp; password.  Like the Linux &lt;a href="http://en.wikipedia.org/wiki/Getty_(Unix)"&gt;getty&lt;/a&gt; utility, it performs system logins to the display being connected to and then runs a session manager on behalf of the user (usually an X window manager).  XDM then waits for this program to exit, signaling that the user is done and should be logged out of the display. At this point, XDM can display the login and display chooser screens for the next user to login.&lt;/p&gt;
&lt;p&gt;In the small world of my RPi's, a PC, and an iPad, I have no need for an XDM and don't use one.
&lt;h2&gt;Enough of the X Journey ... Now in Conclusion&lt;/h2&gt;
So what does the iSSH give me? I can now sit on the couch, watch TV, and simultaneously login into the RPi with full X Windows support.  Some would call this Nirvana but I call it just VERY NICE.  The iPad/iSSH combination isn't the perfect user experience but Zingersoft did a good job.&lt;/p&gt;
&lt;p&gt;By the way .... the above iPad screen shot of the X Server display with a globe was rendered using the following code:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Source: http://www.scipy.org/Cookbook/Matplotlib/Maps&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;mpl_toolkits.basemap&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; Basemap
&lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;as&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;plt&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;numpy&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;as&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;np&lt;/span&gt;

Use_NASA_blue_marble_image &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #336666"&gt;False&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# set up orthographic map projection with&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# perspective of satellite looking down at 50N, 100W.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# use low resolution coastlines.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# don&amp;#39;t plot features that are smaller than 1000 square km.&lt;/span&gt;
&lt;span style="color: #336666"&gt;map&lt;/span&gt; &lt;span style="color: #555555"&gt;=&lt;/span&gt; Basemap(projection&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;ortho&amp;#39;&lt;/span&gt;, lat_0&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;50&lt;/span&gt;, lon_0&lt;span style="color: #555555"&gt;=-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;100&lt;/span&gt;, resolution&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;, area_thresh&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1000.&lt;/span&gt;)

&lt;span style="color: #0099FF; font-style: italic"&gt;# draw coastlines, country boundaries, fill continents.&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; Use_NASA_blue_marble_image:
    &lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;bluemarble()
&lt;span style="color: #006699; font-weight: bold"&gt;else&lt;/span&gt;:
    &lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;drawcoastlines()
    &lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;drawcountries()
    &lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;fillcontinents(color&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;coral&amp;#39;&lt;/span&gt;)

&lt;span style="color: #0099FF; font-style: italic"&gt;# draw the edge of the map projection region (the projection limb)&lt;/span&gt;
&lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;drawmapboundary()

&lt;span style="color: #0099FF; font-style: italic"&gt;# draw lat/lon grid lines every 30 degrees.&lt;/span&gt;
&lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;drawmeridians(np&lt;span style="color: #555555"&gt;.&lt;/span&gt;arange(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;360&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;30&lt;/span&gt;))
&lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;drawparallels(np&lt;span style="color: #555555"&gt;.&lt;/span&gt;arange(&lt;span style="color: #555555"&gt;-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;90&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;90&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;30&lt;/span&gt;))

&lt;span style="color: #0099FF; font-style: italic"&gt;# lat/lon coordinates of five cities.&lt;/span&gt;
lats &lt;span style="color: #555555"&gt;=&lt;/span&gt; [&lt;span style="color: #FF6600"&gt;40.02&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;32.73&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;38.55&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;48.25&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;17.29&lt;/span&gt;]
lons &lt;span style="color: #555555"&gt;=&lt;/span&gt; [&lt;span style="color: #555555"&gt;-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;105.16&lt;/span&gt;, &lt;span style="color: #555555"&gt;-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;117.16&lt;/span&gt;, &lt;span style="color: #555555"&gt;-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;77.00&lt;/span&gt;, &lt;span style="color: #555555"&gt;-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;114.21&lt;/span&gt;, &lt;span style="color: #555555"&gt;-&lt;/span&gt;&lt;span style="color: #FF6600"&gt;88.10&lt;/span&gt;]
cities &lt;span style="color: #555555"&gt;=&lt;/span&gt; [&lt;span style="color: #CC3300"&gt;&amp;#39;Boulder, CO&amp;#39;&lt;/span&gt;, &lt;span style="color: #CC3300"&gt;&amp;#39;San Diego, CA&amp;#39;&lt;/span&gt;, &lt;span style="color: #CC3300"&gt;&amp;#39;Washington, DC&amp;#39;&lt;/span&gt;, &lt;span style="color: #CC3300"&gt;&amp;#39;Whitefish, MT&amp;#39;&lt;/span&gt;, &lt;span style="color: #CC3300"&gt;&amp;#39;Belize City, Belize&amp;#39;&lt;/span&gt;]

&lt;span style="color: #0099FF; font-style: italic"&gt;# compute the native map projection coordinates for cities.&lt;/span&gt;
x, y &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #336666"&gt;map&lt;/span&gt;(lons, lats)

&lt;span style="color: #0099FF; font-style: italic"&gt;# plot filled circles at the locations of the cities.&lt;/span&gt;
&lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;plot(x, y, &lt;span style="color: #CC3300"&gt;&amp;#39;bo&amp;#39;&lt;/span&gt;)

&lt;span style="color: #0099FF; font-style: italic"&gt;# plot the names of those five cities.&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;for&lt;/span&gt; name, xpt, ypt &lt;span style="color: #000000; font-weight: bold"&gt;in&lt;/span&gt; &lt;span style="color: #336666"&gt;zip&lt;/span&gt;(cities, x, y):
        plt&lt;span style="color: #555555"&gt;.&lt;/span&gt;text(xpt &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;50000&lt;/span&gt;, ypt &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;50000&lt;/span&gt;, name)

&lt;span style="color: #0099FF; font-style: italic"&gt;# make up some data on a regular lat/lon grid.&lt;/span&gt;
nlats &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;73&lt;/span&gt;
nlons &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;145&lt;/span&gt;
delta &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2.&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;pi &lt;span style="color: #555555"&gt;/&lt;/span&gt; (nlons &lt;span style="color: #555555"&gt;-&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;)
lats &lt;span style="color: #555555"&gt;=&lt;/span&gt; (&lt;span style="color: #FF6600"&gt;0.5&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;pi &lt;span style="color: #555555"&gt;-&lt;/span&gt; delta &lt;span style="color: #555555"&gt;*&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;indices((nlats, nlons))[&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, :, :])
lons &lt;span style="color: #555555"&gt;=&lt;/span&gt; (delta &lt;span style="color: #555555"&gt;*&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;indices((nlats, nlons))[&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, :, :])
wave &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0.75&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; (np&lt;span style="color: #555555"&gt;.&lt;/span&gt;sin(&lt;span style="color: #FF6600"&gt;2.&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; lats) &lt;span style="color: #555555"&gt;**&lt;/span&gt; &lt;span style="color: #FF6600"&gt;8&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;cos(&lt;span style="color: #FF6600"&gt;4.&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; lons))
mean &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0.5&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;cos(&lt;span style="color: #FF6600"&gt;2.&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; lats) &lt;span style="color: #555555"&gt;*&lt;/span&gt; ((np&lt;span style="color: #555555"&gt;.&lt;/span&gt;sin(&lt;span style="color: #FF6600"&gt;2.&lt;/span&gt; &lt;span style="color: #555555"&gt;*&lt;/span&gt; lats)) &lt;span style="color: #555555"&gt;**&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2&lt;/span&gt; &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2.&lt;/span&gt;)

&lt;span style="color: #0099FF; font-style: italic"&gt;# compute native map projection coordinates of lat/lon grid.&lt;/span&gt;
x, y &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #336666"&gt;map&lt;/span&gt;(lons &lt;span style="color: #555555"&gt;*&lt;/span&gt; &lt;span style="color: #FF6600"&gt;180.&lt;/span&gt; &lt;span style="color: #555555"&gt;/&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;pi, lats &lt;span style="color: #555555"&gt;*&lt;/span&gt; &lt;span style="color: #FF6600"&gt;180.&lt;/span&gt; &lt;span style="color: #555555"&gt;/&lt;/span&gt; np&lt;span style="color: #555555"&gt;.&lt;/span&gt;pi)

&lt;span style="color: #0099FF; font-style: italic"&gt;# contour data over the map.&lt;/span&gt;
CS &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #336666"&gt;map&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;contour(x, y, wave &lt;span style="color: #555555"&gt;+&lt;/span&gt; mean, &lt;span style="color: #FF6600"&gt;15&lt;/span&gt;, linewidths&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1.5&lt;/span&gt;)

plt&lt;span style="color: #555555"&gt;.&lt;/span&gt;show()
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Linux"></category><category term="Raspberry Pi"></category><category term="X Window System"></category><category term="Window Manager"></category></entry><entry><title>The Simplest XBee Network</title><link href="/posts/2013/Mar/20/the-simplest-xbee-network/" rel="alternate"></link><published>2013-03-20T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-03-20:posts/2013/Mar/20/the-simplest-xbee-network/</id><summary type="html">&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/03/simplest-xbee-network.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="SAMSUNG" src="/images/simplest-xbee-network.jpg?w=500" width="250" height="188" /&gt;
&lt;/a&gt;
As I continue my investigation of the XBee radio, I'm impressed by the functionality compressed into the the small package, but I have been frustrated by one fact.  It has been a hard road to understand the device and to make it do something useful.  There is a confusing mass of commands and options that can be used.  To make things more difficult for me, it is my nature to study my subject at depth, and understand it well, before I commit myself to a project.  The XBee radios are proving to be a deep subject.  I have been struggling to get a simple 802.15.4 network up and working, at least one that is sufficiently complex to be useful for my needs.&lt;/p&gt;
&lt;p&gt;I stumbled into the realization that I don't have to master 802.15.4 and a large set of XBee commands to make a very simple but potentially useful network.  It's a very basic observation about all radio devices like the XBee.  You see, at its core the XBee radio is  a &lt;a href="http://en.wikipedia.org/wiki/Modem"&gt;modem&lt;/a&gt;.  It encodes digital information, transmits its digits via electromagnetism, within a specific frequency band, to be received by another XBee, and  then converted back to digital information.  The use of packet data, the 802.15.4 protocol, and all the AT commands are layers on top of the XBee's  modem capability.  The modem, the core communications sub-component, is a serial communications device with a Universal Asynchronous Receiver/Transmitter (UART) as examined in an &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/raspberry-pi-serial-communication/"&gt;earlier blog&lt;/a&gt;.  So why not we just treat the XBee radio as a simple serial communication device?  Drop the idea of packetized data and 802.15.4 protocol and just do raw serial communications.&lt;/p&gt;
&lt;p&gt;While this simplification is seductive, it does come at a price. Data is packetized and transmitted using a protocol for very good reasons.  In data transmission you must consider the fact that data could get corrupted, you need to share the communication channel with others,  data streams may be long (if not endless) and need to be properly sequenced, communications is main between specific devices as apposed to just broadcasting, and many other concerns.  You give up much of this by doing raw serial communications but you gain simplicity.&lt;/p&gt;
&lt;p&gt;What I plan to do here is list some simple, proof of concept programs that I used to create a network with a Arduino and Raspberry Pi (RPi) using XBee radios.  You could simply add additional devices, using the same code, and it will become a fully interconnected network (i.e. where every device can talk to every other devices directly).  While inferior to a 802.15.4 network on many levels, its quick to get operational and easy to debug.  Also keep in mind that this is built on the XBee radio,  but you could do this with most any radio which supports serial communications.
&lt;h2&gt;Architecture&lt;/h2&gt;
I'll be using a Arduino and a RPis for for my network, each with a XBee radio thought which they can communicate. I'll establish terminal interface into each device so I can enter text for the device to transmit and the terminal will also show what messages where revived. All  terminals will be within windows on my PC using PuTTY, Xterm, or the Arduino's serial monitor screen.
&lt;h2&gt;Initializing the XBee Radios&lt;/h2&gt;
First step is to make sure all the XBee radios that will be part of your network are properly configured.  Specifically, you need to make sure the PAN ID and Channel ID of the XBee radio's are identical.  To accomplish this, I used the &lt;code&gt;XBeeTerm.py&lt;/code&gt; utility I posted in my earlier blog titled &lt;a href="http://jeffskinnerbox.wordpress.com/2013/01/30/configuration-utilities-for-xbee-radios/"&gt;Configuration Utilities for XBee Radios&lt;/a&gt;.  I'm going to setup my network with two XBee radios (but you can use as many as you wish) and I used the configuration file below on both radios:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# To remove comments, white spaces, and blank lines, use the following:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#       sed &amp;#39;/^#/d; s/\([^$]\)#.*/\1/&amp;#39; Modem-Device.txt | sed &amp;#39;s/[ \t]*$//&amp;#39; &amp;amp;gt; modemd.txt&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Run this script to configure the XBee radio using the following:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#       ./XBeeTerm.py modemd.txt&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;#&lt;/span&gt;
baudrate &lt;span style="color: #FF6600"&gt;9600&lt;/span&gt;       &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBeeTerm command) set the baudrate used to comm. with the XBee&lt;/span&gt;
serial /dev/ttyUSB0 &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBeeTerm command) serial device which has the XBee radio&lt;/span&gt;
+++             &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) enter AT command mode on the XBee&lt;/span&gt;
ATRE            &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) restore XBee to factory settings&lt;/span&gt;
ATID B000       &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) Set the PAN ID to eight byte hex (all XBee&amp;#39;s must have this same value)&lt;/span&gt;
ATCH 0E         &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) set the Channel ID to a four byte hex (all XBee&amp;#39;s must have same value)&lt;/span&gt;
ATPL &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;          &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) power level at which the RF module transmits (0 lowest / 4 highest)&lt;/span&gt;
ATWR            &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) write all the changes to the XBee non-volatile memory&lt;/span&gt;
ATFR            &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBee command) reboot XBee radio&lt;/span&gt;
&lt;span style="color: #336666"&gt;exit&lt;/span&gt;            &lt;span style="color: #0099FF; font-style: italic"&gt;# (XBeeTerm command) exit python shell&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Arduino Configuration&lt;/h2&gt;

&lt;p&gt;The sketch on the Arduino is very simple. Called &lt;code&gt;XBeeModem.ino&lt;/code&gt; and is listed blow:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;/*&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;    The XBee devise should be connected to the Arduino Uno in the following way:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;        XBee RX is connected to Arduino TX pin 3&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;        XBee TX is connected to Ardunio RX pin 2&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;        XBee +5V and Ground pins connect to the same on the Arduino&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; */&lt;/span&gt;

&lt;span style="color: #009999"&gt;#define RXPIN 2&lt;/span&gt;
&lt;span style="color: #009999"&gt;#define TXPIN 3&lt;/span&gt;
&lt;span style="color: #009999"&gt;#define BAUDRATE 9600&lt;/span&gt;

&lt;span style="color: #009999"&gt;#include&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;SoftwareSerial XBeeSerial =  SoftwareSerial(RXPIN, TXPIN);&lt;/span&gt;&lt;span style="color: #009999"&gt;&lt;/span&gt;

&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;setup&lt;/span&gt;()
{
    pinMode(&lt;span style="color: #FF6600"&gt;13&lt;/span&gt;, OUTPUT);

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Set the data rate for the hardware Serial port&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;// and post a message stating so on the Arduino&amp;#39;s Serial Monitor.&lt;/span&gt;
    Serial.begin(BAUDRATE);
    Serial.println(&lt;span style="color: #CC3300"&gt;&amp;quot;Arduino #1 up and running.&amp;quot;&lt;/span&gt;);

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Set the data rate for the SoftwareSerial port and&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;// send a message out stating so via the XBee to the other devices.&lt;/span&gt;
    XBeeSerial.begin(BAUDRATE);
    XBeeSerial.println(&lt;span style="color: #CC3300"&gt;&amp;quot;Arduino #1 up and running.&amp;quot;&lt;/span&gt;);
}

&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;loop&lt;/span&gt;()
{
    &lt;span style="color: #007788; font-weight: bold"&gt;char&lt;/span&gt; c;

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Read data arriving from the XBee and send to Arduino Serial Monitor.&lt;/span&gt;
    &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; (XBeeSerial.available()) {
        Serial.print((&lt;span style="color: #007788; font-weight: bold"&gt;char&lt;/span&gt;)XBeeSerial.read());
    }

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Capture data typed at the Arduino Serial Monitor, echo the data to the Serial Monitor,&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;// and send that data via the XBee.&lt;/span&gt;
    &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; (Serial.available()) {
        c &lt;span style="color: #555555"&gt;=&lt;/span&gt; (&lt;span style="color: #007788; font-weight: bold"&gt;char&lt;/span&gt;)Serial.read();
        Serial.print(c);
        XBeeSerial.print(c);
    }

    delay(&lt;span style="color: #FF6600"&gt;100&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Raspberry Pi Configuration&lt;/h2&gt;

&lt;p&gt;The Python program on the RPi is also very simple, except for one point.  Linux I/O reads will &lt;a href="http://www.linux-mag.com/id/308/"&gt;block &lt;/a&gt;if there are no characters to read.  You must "turn-off" blocking.  The program is called &lt;code&gt;XBeeModem.py&lt;/code&gt; and is listed blow:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663336.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The above script imports &lt;code&gt;pretty.py&lt;/code&gt; which you can find here - &lt;a href="https://gist.github.com/jeffskinnerbox/6663095"&gt;&lt;code&gt;https://gist.github.com/jeffskinnerbox/6663095&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Closing&lt;/h2&gt;

&lt;p&gt;It doesn't get much simpler than this. With a little work, you might make something useful out of this technique but its very limited in the types of problems that it could handle. Never the less, it was a good diversion for me to clear my mind. Now back to the XBee's core capabilites, the 802.15.4 protocol, and the other minutia!&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="XBee"></category></entry><entry><title>Configuration Utilities for XBee Radios</title><link href="/posts/2013/Jan/30/configuration-utilities-for-xbee-radios/" rel="alternate"></link><published>2013-01-30T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2013-01-30:posts/2013/Jan/30/configuration-utilities-for-xbee-radios/</id><summary type="html">&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/xbee-module-series-1-1mw-with-wire-antenna-xb24-awi-001.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="XBee Module - Series 1 - 1mW with Wire Antenna - XB24-AWI-001" alt="XBee Series 1" src="/images/xbee-module-series-1-1mw-with-wire-antenna-xb24-awi-001.jpg" width="20%" height="20%" /&gt;
&lt;/a&gt;
My ultimate aim is to wirelessly network several Arduino based platforms with a centralized Raspberry Pi controller. There is much for me to learn to get this operational, not the least of which is the radio device I plan to use, the Xbee.  To get up to speed on the Xbee, I found the tutorials at &lt;a href="http://www.ladyada.net/make/xbee/index.html"&gt;Adafruit&lt;/a&gt;, &lt;a href="https://www.sparkfun.com/pages/xbee_guide"&gt;Sparkfun&lt;/a&gt;, and &lt;a href="http://www.parallax.com/portals/0/downloads/docs/prod/book/122-32450-xbeetutorial-v1.0.pdf"&gt;Parallax&lt;/a&gt; helpful.   More detailed references are listed at the end of this post, but the very first challenge is to configure the XBee radios for operation.  This post provides insight on how this can be done, and my main mission, create a few simple utilities that make that job easy.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Xbee Radios&lt;/h2&gt;

&lt;p&gt;I purchased two XBee Series 1 Module (Freescale 802.15.4 firmware) from &lt;a href="https://www.adafruit.com/products/128"&gt;Adafruit&lt;/a&gt;.  These are manufactured by Digi and are low-power module with wire antenna  (&lt;a href="http://www.digi.com/products/wireless-wired-embedded-solutions/zigbee-rf-modules/point-multipoint-rfmodules/xbee-series1-module#models"&gt;XB24-AWI-001&lt;/a&gt;).  They have a 250 kbps RF data rates and operate at 2.4 GHz.  These radios use the IEEE 802.15.4 networking protocol and can perform point-to-multi-point or &lt;a href="http://en.wikipedia.org/wiki/Peer-to-peer"&gt;peer-to-peer&lt;/a&gt; networking , but as configured here, they do not &lt;a href="http://en.wikipedia.org/wiki/Mesh_networking"&gt;mesh&lt;/a&gt;.  The Digi models that handle meshing are Digimesh, ZNet2.5 and Zigbee (ZB).  &lt;a href="http://www.digi.com/technology/digimesh/"&gt;Digimesh&lt;/a&gt; is a version of firmware that runs on Series 1 hardware. So, if you choose to, you can &lt;a href="http://www.libelium.com/development/waspmote/tutorial0002"&gt;upgrade&lt;/a&gt; these modules to Digimesh firmware to get meshing.
&lt;h2&gt;Xbee Adapter Board&lt;/h2&gt;
Along with the XBee radios, I purchased adapter boards designed to make it easier to work with the radios. The adopter provides on-board 3.3V regulator power from a 5 volt source, voltage level shifting circuitry so you can connect  5V circuitry to the XBee, commonly used pins are brought out along the edge (making it easy to breadboard), and engineered to be interface via FTDI cable to a computer via USB.  The&lt;a href="http://www.ladyada.net/make/xbee/wiring.html"&gt; image and the text&lt;/a&gt; below describe the pin-out for the &lt;a href="https://www.adafruit.com/products/126"&gt;Adafruit  XBee Adapter&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/xbee-pinout.jpg"&gt;
    &lt;img class="size-full wp-image-418" title="Xbee Pin Out" alt="XBee Pinout" src="/images/xbee-pinout.jpg" width="545" height="333" /&gt;
&lt;/a&gt;
&lt;/center&gt;
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;strong&gt;3V pin&lt;/strong&gt; - This is either an input power pin (if 5V is not provided) or an output from the 250mA regulator if 5V is provided&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;DTR&lt;/strong&gt; - "Data terminal ready"  is a flow control pin used to tell the XBee that the microcontroller or computer host is ready to communicate.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;RST&lt;/strong&gt; - "Reset"  pin can be used to reset the XBee.  By default it is pulled high by the 10K resistor under the module. To reset, pull this pin low.'&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Ground&lt;/strong&gt; - common ground for power and signal&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;CTS&lt;/strong&gt; - "Clear to Send" this is a flow control pin that can be used to determine if there is data in the XBee input buffer ready to be read&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;5V&lt;/strong&gt; - This is the power input pin into the 3.3V regulator. Provide up to 6V that will be linearly converted into 3.3V&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;RX&lt;/strong&gt; - "Receive Data" is the XBee's serial recieve pin. Serial data is sent on this pin &lt;strong&gt;into&lt;/strong&gt; the XBee to be transmitted wirelessly&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;TX&lt;/strong&gt; - "Transmit Data" is the XBee's serial transmit pin. Serial data is sent on this pin &lt;strong&gt;out of&lt;/strong&gt; the XBee, after it has been transmitted wirelessly from another module&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;RTS&lt;/strong&gt; - "Ready to Send" is a flow control pin that can be used to tell the XBee to signal that the computer or microcontroller needs a break from reading serial data.&lt;/li&gt;
    &lt;li&gt;see pin #1&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
&lt;a href="http://www.ladyada.net/make/xbee/configure.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Xbee Adaptor connected with USB FTDI TTL-232 Cable" alt="XBee Adaptor" src="/images/xbee_ftdi_powered.jpg" width="20%" height="10%" /&gt;
&lt;/a&gt;
The DTR, RTS, RST and RX pins (going &lt;em&gt;into&lt;/em&gt; the XBee) pass through a level converter chip that brings the levels to 3.3V. Adafruit claims you can use pretty much anywhere between 2.7 to 5.5V data to communicate with the XBee. The breakout pins on the bottom of the board are not level shifted and you should try to keep data going directly into the XBee pin under 3.3V&lt;/p&gt;
&lt;h2&gt;XBee Initial Configuration and Testing&lt;/h2&gt;

&lt;p&gt;You need a way to communicate withe the Xbee, via it adapter,  to set it up.  This can be done via Adafruit's  &lt;a href="http://www.adafruit.com/products/70"&gt;USB FTDI TTL-232 Cable&lt;/a&gt;, and the &lt;a href="http://www.digi.com/support/productdetail?pid=3352"&gt;Digi X-CTU&lt;/a&gt; serial terminal program.  By the way, the &lt;a href="ftp://ftp1.digi.com/support/documentation/90001003_a.pdf"&gt;X-CTU user guide&lt;/a&gt; describes the many more things it can do beyond the configuration shown here.
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Plug in the USB FTDI TTL-232 Cable into a PC USB port.  If drivers are not installed automatically (it didn't for me), follow the steps at the &lt;a href="http://www.ftdichip.com/Drivers/VCP.htm"&gt;FTDI site&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Download the X-CTU, double click on the executable file, and follow the instructions to install the program.&lt;/li&gt;
    &lt;li&gt;Now connect the USB FTDI TTL-232 Cable to the Xbee Adapter as shown in the picture to the right and insert the USB end of the cable to you PC.  Start the X-CTU.&lt;/li&gt;
    &lt;li&gt;To connect, configure and upgrading the Xbee, follow the Adafruit &lt;a href="http://www.ladyada.net/make/xbee/configure.html"&gt;instructions&lt;/a&gt; for the Xbee Adapter board. Note that if you follow the instructions (I didn't - I kept it at 9600 baud), the modem's serial interface is now set to 19,200 baud, not the default 9600 used by X-CTU.  Remember this next time you use X-CTU with this Xbee.&lt;/li&gt;
    &lt;li&gt;If your instructed by X-CTU to reset the Xbee, you can do this by shorting the reset pin, RST pin,  to ground.&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
The configuration can be touchy, it can go badly, or not at all.  In my case, I seem to have one Xbee Adapter that can reliably perform a firmware upgrade but the other one took some time due to a lose fitting between the Adaptor and  Xbee.  If you run into configuration problems, check out these sites: &lt;a href="http://www.digi.com/wiki/developer/index.php/Bootloader_to_force_XBee_reflash"&gt;Using XCTU to Invoke the Bootloader&lt;/a&gt;, &lt;a href="http://www.jsjf.demon.co.uk/xbee/faq.pdf"&gt;The Unofficial XBee FAQ&lt;/a&gt;,  &lt;a href="http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=fxOqQZD-oaM"&gt;How to recover from a failed firmware upgrade&lt;/a&gt;.
&lt;h2&gt;Quickly Getting the Xbee's Communicating&lt;/h2&gt;
The next step for me was just do a basic test of getting two XBee device communicating with each other. This is just a sanity test to see evidence of communication between the devices. Basically, I just followed the &lt;a href="http://www.ladyada.net/make/xbee/point2point.html"&gt;instructions&lt;/a&gt; provided by Adafruit.
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2013/01/30/configuration-utilities-for-xbee-radios/simple-test/" rel="attachment wp-att-942"&gt;&lt;img class=" wp-image-942 alignright" alt="simple test" src="http://jeffskinnerbox.files.wordpress.com/2012/12/simple-test.jpg" width="327" height="245" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Using the X-CTU, set the PAN ID to the same value on the two Xbee's.&lt;/li&gt;
    &lt;li&gt;Select an Ardunio that has been programmed to send repeated brief messages to its serial port.  I used the standard LED &lt;a href="http://arduino.cc/en/Tutorial/Blink"&gt;Blinking sketch&lt;/a&gt; but put in some write statements in the loop.&lt;/li&gt;
    &lt;li&gt;Using an Arduino and breadboard, connect +5V and ground to provide power. Make sure the XBee's LED is blinking.&lt;/li&gt;
    &lt;li&gt;Connect the RX line (input) of the XBee to the TX line (output) of the Arduino. Connect the RX line (input) of the Arduino to the TX line (output) of the Xbee. Plug the Arduino into your PC's serial port.&lt;/li&gt;
    &lt;li&gt;Now take the second Xbee and connect the  USB FTDI TTL-232 Cable to the Xbee and the PC.  The cable is doing nothing but appling power to the Xbee.&lt;/li&gt;
    &lt;li&gt;Now you should see the receive LED periodically light on the USB FTDI TTL-232 Cable tethered Xbee.&lt;/li&gt;
    &lt;li&gt;You now got proof that the two Xbee's are communicating.  The Arduino connected Xbee is sending data to its serial port and the USB FTDI TTL-232 Cable tethered Xbee is receiving it.&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
Above you'll find a picture of the configuration, and below is the Arduino sketch I used.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;/*&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *  Xbee Test via Blink LED&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *Turns on an LED on for one second, then off for one second, repeatedly.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *Also increase brigthness of analog LED.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *The circuit:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * LED1 connected from digital pin 13 to ground.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * LED2 connected from analog pin 9 to ground.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * Note: On most Arduino boards, there is already an LED on the board&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * connected to pin 13, so you don&amp;#39;t need any extra components for this example.&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt; *Created 1 June 2005&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *By David Cuartielles&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *http://arduino.cc/en/Tutorial/Blink&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *based on an orginal by H. Barragan for the Wiring i/o board&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *Modified by Jeff Irland in December 2012&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; */&lt;/span&gt;

&lt;span style="color: #007788; font-weight: bold"&gt;int&lt;/span&gt; ledPin1 &lt;span style="color: #555555"&gt;=&lt;/span&gt;  &lt;span style="color: #FF6600"&gt;13&lt;/span&gt;;    &lt;span style="color: #0099FF; font-style: italic"&gt;// LED connected to digital pin 13&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;int&lt;/span&gt; ledPin2 &lt;span style="color: #555555"&gt;=&lt;/span&gt;  &lt;span style="color: #FF6600"&gt;9&lt;/span&gt;;     &lt;span style="color: #0099FF; font-style: italic"&gt;// LED connected to analog pin 9&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;int&lt;/span&gt; brightness &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;;

&lt;span style="color: #0099FF; font-style: italic"&gt;// The setup() method runs once, when the sketch starts&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;setup&lt;/span&gt;()   {
    Serial.begin(&lt;span style="color: #FF6600"&gt;9600&lt;/span&gt;);
    pinMode(ledPin1, OUTPUT);     &lt;span style="color: #0099FF; font-style: italic"&gt;// initialize the digital pin as an output&lt;/span&gt;
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;Arduino done with setup()&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
}

&lt;span style="color: #0099FF; font-style: italic"&gt;// the loop() method runs over and over again,&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;// as long as the Arduino has power&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;loop&lt;/span&gt;()
{
    digitalWrite(ledPin1, HIGH);   &lt;span style="color: #0099FF; font-style: italic"&gt;// set the LED on&lt;/span&gt;
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;LED set HIGH.&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
    delay(&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt;);                   &lt;span style="color: #0099FF; font-style: italic"&gt;// wait for a second&lt;/span&gt;

    digitalWrite(ledPin1, LOW);    &lt;span style="color: #0099FF; font-style: italic"&gt;// set the LED off&lt;/span&gt;
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;LED set LOW.&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
    delay(&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt;);                   &lt;span style="color: #0099FF; font-style: italic"&gt;// wait for a second&lt;/span&gt;

    brightness &lt;span style="color: #555555"&gt;=&lt;/span&gt; brightness &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;5&lt;/span&gt;;
    analogWrite(ledPin2, brightness);
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;LED brightness increased.&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Installing XBee Python Tools for the RPi&lt;/h2&gt;

&lt;p&gt;While the MS Windows based Digi X-CTU tool is just fine, I want to use the RPi's and Python to access the XBee serial communication API, and its advanced features, for one or more XBee devices.  I prefer simple utilities, that can be scripted within the Linux shell.  Call me a Linux snob if you wish, but I don't care for MS Windows!&lt;/p&gt;
&lt;p&gt;In my post "&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/22/selecting-xbee-radios-and-supporting-softwaretools/"&gt;Selecting XBee Radios and Supporting Software Tools&lt;/a&gt;", I referenced a Python package that could be used to create my utilitiesd, call python-xbee, and I will be using it here. It claims to provides a semi-complete implementation of the XBee binary API protocol and allows a developer to send and receive the information they desire without dealing with the raw communication details. It also claims the  library is compatible with both XBee 802.15.4 (Series 1) and XBee ZigBee (Series 2) modules, normal and PRO.&lt;/p&gt;
&lt;p&gt;First, we need to load some additional required Python Packages, that being &lt;a href="http://pyserial.sourceforge.net/"&gt;pySerial&lt;/a&gt; and &lt;a href="https://nose.readthedocs.org/en/latest/"&gt;Nose&lt;/a&gt;. pySerial extends python's capabilities to include interacting with a serial port and Nose is a package providing a very easy way to build tests, based on the Python class &lt;a href="http://docs.python.org/2/library/unittest.html"&gt;unittest&lt;/a&gt;.  (Don't let this all scare you away, these are necessary but your not going to use them directly).  To load these package:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo pip install pySerial
sudo pip install nose
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Download the python-xbee tools from &lt;a href="http://code.google.com/p/python-xbee/"&gt;Google Code&lt;/a&gt; or &lt;a href="http://pypi.python.org/pypi/XBee/2.0.0"&gt;Python Org&lt;/a&gt; and place them into the RPi's $HOME/src.  The README file provides installation instructions.  It states that the following command automatically test and install the package for you:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo python setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is a simple to use RPi platform tool that I have modified for my needs, that is a XBee serial command shell for interacting with XBee radios.  It performs the core functions of the official configuration tool, &lt;a href="https://sites.google.com/site/xbeetutorial/xctu"&gt;X-CTU&lt;/a&gt;, which only runs on Windows. (There happens to be a cross-platform version of X-CTU called &lt;a href="http://www.moltosenso.com/client/fe/browser.php?pc=/client/fe/download.php"&gt;moltosenso Network Manager&lt;/a&gt; but I don't need all this horse power.)  I'll use this X-CTU-alternative to configure the individual XBee radios.  With the X-CTU, you can update firmware, etc. but most of the time you need the program to do simple configuration tasks. You could use Linux's &lt;a href="http://linux.die.net/man/1/minicom"&gt;&lt;code&gt;minicom&lt;/code&gt;&lt;/a&gt;, but I prefer a simpler tool which can be scripted so I can configure several XBee radios identically.  I found much of what I wanted in an existing &lt;a href="https://github.com/sensestage/xbee-tools"&gt;Python XBee tools for configuration&lt;/a&gt;.  I made some modification/improvements, I call it the XBeeTerm, and its listed below:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663016.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The XBeeTerm.py module imports functions from the pretty.py package, specifically to colorize the output for xterm on the Raspberry Pi.  This package is provided here:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663095.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2&gt;Identifying the RPi USB device used by the XBee&lt;/h2&gt;

&lt;p&gt;Since the python-xbee library wants to talk to the via a Linux serial devices, I'm using the &lt;a href="http://www.adafruit.com/products/70"&gt;USB FTDI TTL-232 Cable&lt;/a&gt; (&lt;a href="http://www.ftdichip.com/"&gt;FTDI&lt;/a&gt; is the &lt;a href="http://en.wikipedia.org/wiki/Universal_Serial_Bus"&gt;USB&lt;/a&gt; chip manufacturer) used in the XBee configuration step done earlier.  I connected the cable to the RPi USB port  and then we need to find the serial tty the cable is associated with.  To do this, it takes a bit of detective work. Run the commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;lsusb
dmesg | grep Manufacturer
dmesg | grep FTDI
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A better command might be (but I'm not sure it will work every time):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;dmesg | grep -i usb | grep -i tty
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The interpretation of the output tells us the cable is attached to serial device &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;.  See the output below.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.wordpress.com/2013/01/30/configuration-utilities-for-xbee-radios/best-use-of-dmesg/" rel="attachment wp-att-1070"&gt;&lt;img class="aligncenter size-full wp-image-1070" alt="best use of dmesg" src="http://jeffskinnerbox.files.wordpress.com/2012/12/best-use-of-dmesg.jpg" width="500" height="192" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another possibility is to use &lt;a href="http://linux.die.net/man/8/udevadm"&gt;&lt;code&gt;udevadm&lt;/code&gt;&lt;/a&gt; to gather information about specific devices but I never figured out exactly how to use it to answer my question.  Python also has a package called &lt;a href="http://sourceforge.net/apps/trac/pyusb/"&gt;PyUSB&lt;/a&gt; that might provide some help, but also here you'll still need the vendor and product identification information.&lt;/p&gt;
&lt;p&gt;Chances are that when you plug the cable into the same USB port the next time, it will default to the same tty but there is no certainty.  To assign a permanent tty name to the device, and never do any of this again, check out &lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;Persistent names for usb-serial devices&lt;/a&gt;.
&lt;h2&gt;Configuring the XBee Radios for API Mode&lt;/h2&gt;
The configuration and testing of the XBee's done earlier was done in AT Command mode (Transparent Mode). In AT mode, everything sent to the RX line of the XBee radio will be sent out via the antenna, and all the incoming data from antenna will go to the XBee's TX line.  This is why we could check the sanity of the XBee radios in the earlier section, &lt;strong&gt;XBee Initial Configuration and Testing &lt;/strong&gt;using a simple Arduino sketch.  We sent junk to the XBee and it transmitted it!&lt;/p&gt;
&lt;p&gt;Now we'll configure two XBee radios (with a Coordinator and a single End Device) to form a network using API Mode.  In API Mode, XBee won't send out anything until it received the correct form of commands from the serial interface.  The &lt;a href="ftp://ftp1.digi.com/support/documentation/90000982_A.pdf"&gt;XBee AT Command Set&lt;/a&gt; (page 27), specifically the  ATAP 2 command, allows you to configure the XBee radio for API Mode.   So &lt;a href="http://code.google.com/p/xbee-api/wiki/WhyApiMode"&gt;why API Mode&lt;/a&gt;, consider the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;When sending a packet, the transmitting radio receives an ACK, indicating the packet was successfully delivered. The transmitting radio will resend the packet if it does not receive an ACK.&lt;/li&gt;
    &lt;li&gt;Receive packets (RX), contain the source address of transmitting radio&lt;/li&gt;
    &lt;li&gt;You can configure a remote radio with the Remote AT feature&lt;/li&gt;
    &lt;li&gt;Easily address multiple radios and send broadcast TX packets&lt;/li&gt;
    &lt;li&gt;Receive I/O data from 1 or more remote XBees&lt;/li&gt;
    &lt;li&gt;Obtain RSSI (signal strength) of an RX packet&lt;/li&gt;
    &lt;li&gt;Packets include a checksum for data integrity&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The XBeeTerm utility will  easily configure the XBee radios for API mode and set the appropriate network parameters.  To get a deeper appreciation of configuring the XBee radios, see the References at the end.  For here, I'll just run through the steps using the XBeeTerm.py tool and the configuration commands used, documented in file scripts.&lt;/p&gt;
&lt;p&gt;Coordinator Configuration File: &lt;code&gt;Config-Coordinator.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663169.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;End Device Configuration File: &lt;code&gt;Config-End-Device.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663187.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;As they stand right now, these files could not be processed by &lt;code&gt;XBeeTerm.py&lt;/code&gt; because of the comments (included to make the contents understandable).  To clean this up, the command &lt;code&gt;sed '/^#/d; s/([^$])#.&lt;em&gt;/\1/'&lt;/code&gt;will remove all shell type comments from a file and &lt;code&gt;sed 's/[ \t]&lt;/em&gt;$//'&lt;/code&gt;will remove unneeded white space.  Putting this all together and you can use this to prepare the above files for &lt;code&gt;XBeeTerm.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sed &lt;span style="color: #CC3300"&gt;&amp;#39;/^#/d; s/\([^$]\)#.*/\1/&amp;#39;&lt;/span&gt; Config-Coordinator.txt | sed &lt;span style="color: #CC3300"&gt;&amp;#39;s/[ \t]*$//&amp;#39;&lt;/span&gt; &amp;gt; coord.txt
sed &lt;span style="color: #CC3300"&gt;&amp;#39;/^#/d; s/\([^$]\)#.*/\1/&amp;#39;&lt;/span&gt; Config-End-Device.txt | sed &lt;span style="color: #CC3300"&gt;&amp;#39;s/[ \t]*$//&amp;#39;&lt;/span&gt; &amp;gt; endd.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now execute the following &lt;code&gt;python XBeeTerm.py coord.txt&lt;/code&gt; and you get the output below:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeeterm-script.jpg"&gt;&lt;img class="aligncenter size-full wp-image-1262" alt="XBeeTerm Script" src="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeeterm-script.jpg" width="500" height="205" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The yellow text is responses back from the XBee serial terminal and the red text is from the XBee radio itself.  Since all the red text is "OK", all the commands took and the XBee radio is now configured as a Coordinator.  Now repeat this for the End Device XBee radio.&lt;/p&gt;
&lt;p&gt;In this example, I have one End Device but what if you have multiple devices, do you need a &lt;code&gt;Config-End-Device.txt &lt;/code&gt;file for each end device?  The only change within the configuration file is the radio's address, which is established via the ATMY command.  Here is a trick to avoid the need for multiple files.  First, configure all your End Devices using the configuration file.  Then, for each radio, modify the ATMY use the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;echo&lt;/span&gt; -e &lt;span style="color: #CC3300"&gt;&amp;quot;baudrate 9600\nserial /dev/ttyUSB0\n+++\nATMY AAA1\nATWR\nATFR\nexit&amp;quot;&lt;/span&gt; | python XBeeTerm.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but for each End Device radio, increment the ATMY address by one (e.g. AAA2, AAA3, ...).
&lt;h2&gt;Querying XBee for Configuration&lt;/h2&gt;
Now that we believe the XBee radios are properly configured, lets verify that by query the radios.  You could use XBeeTerm to perform this function by including only the AT Command without the parameter but I wanted a more informative tool. For this, I have created another utility that can take a list of AT Commands as arguments and query the XBee radio for the AT's parameter value.  This utility, call &lt;code&gt;XBeeQuery.py&lt;/code&gt;, is listed below:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663248.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample output for the XBeeQuery utility:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeequery-script.jpg"&gt;&lt;img class="aligncenter size-full wp-image-1265" alt="XBeeQuery Script" src="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeequery-script.jpg" width="500" height="205" /&gt;&lt;/a&gt;
&lt;h2&gt;References&lt;/h2&gt;
Configuring the XBee Radios
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.digi.com/support/kbase/kbaseresultdetl?id=2184"&gt;What is API (Application Programming Interface) Mode and how does it work?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://docs.sensestage.eu/change-to-using-the-api-mode-of-the-xbees"&gt;Change to using the API mode of the XBees&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.instructables.com/id/Configuring-XBees-for-API-Mode/"&gt;Configuring XBees for API Mode&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-4-api"&gt;Playing Xbee. Part 4 – API&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://code.google.com/p/xbee-api/wiki/XBeeConfiguration"&gt;XBee Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
General Documentation
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;XBee 802.15.4 (Series 1) Module &lt;a href="http://www.digi.com/pdf/ds_xbeemultipointmodules.pdf"&gt;Datasheet&lt;/a&gt;, &lt;a href="ftp://ftp1.digi.com/support/documentation/90000982_A.pdf"&gt;Product Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Raspberry Pi"></category><category term="XBee"></category></entry><entry><title>Selecting XBee Radios and Supporting Software Tools</title><link href="/posts/2012/Dec/22/selecting-xbee-radios-and-supporting-software-tools/" rel="alternate"></link><published>2012-12-22T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-12-22:posts/2012/Dec/22/selecting-xbee-radios-and-supporting-software-tools/</id><summary type="html">&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/22/selecting-xbee-radios-and-supporting-softwaretools/digimesh_networking/" rel="attachment wp-att-986"&gt;&lt;img class="aligncenter size-full wp-image-986" alt="DigiMesh_networking" src="http://jeffskinnerbox.files.wordpress.com/2012/12/digimesh_networking.jpg" width="499" height="262" /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;My ultimate aim is to wirelessly network several Arduino based platforms with a centralized Raspberry Pi controller or gateway.  There is much for me to learn to get this operational, not the least of which is the selection of the radio device platform I plan to use. After reviewing &lt;a href="https://www.sparkfun.com/categories/16"&gt;other&lt;/a&gt; devices, I have settled on the XBee, in part because of its popularity, its mesh capabilities, and it power management.  To get up to speed on the Xbee, I found the tutorials at &lt;a href="http://www.ladyada.net/make/xbee/index.html"&gt;Adafruit&lt;/a&gt;, &lt;a href="https://www.sparkfun.com/pages/xbee_guide"&gt;Sparkfun&lt;/a&gt;, and &lt;a href="http://www.parallax.com/portals/0/downloads/docs/prod/book/122-32450-xbeetutorial-v1.0.pdf"&gt;Parallax&lt;/a&gt; helpful.   Some additional good references are listed at the end of this post.&lt;/p&gt;
&lt;p&gt;As I did in the post &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/raspberry-pi-serial-communication/"&gt;Raspberry Pi Serial Communication: What, Why, and a Touch of How&lt;/a&gt;, I have a desire (obsessive need?) to do some extensive researching before diving into implementing a project.  What is listed below are my research findings.
&lt;h2&gt;XBee Series 1 vs. Series 2&lt;/h2&gt;
&lt;a href="http://www.digi.com/xbee/"&gt;Digi's XBee website&lt;/a&gt; gives you a confusing set of options for selecting radios but after reviewing multiple sources, it boils down to the XBee Series 1 vs. Series 2 for the DIY type applications I would do.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.adafruit.com/products/128"&gt;XBee Series 1 Module&lt;/a&gt; (&lt;a href="http://www.freescale.com/"&gt;Freescale&lt;/a&gt; technology with 802.15.4 firmware) have a 250 kbps RF data rates and operate at 2.4 GHz.  These radios use the&lt;a href="http://en.wikipedia.org/wiki/IEEE_802.15.4"&gt; IEEE 802.15.4&lt;/a&gt; networking protocol and can perform point-to-multi-point networking.  You can also do &lt;a href="http://en.wikipedia.org/wiki/Peer-to-peer"&gt;peer-to-peer&lt;/a&gt; networking (a form of &lt;a href="http://en.wikipedia.org/wiki/Mesh_networking"&gt;mesh&lt;/a&gt; network) but this will require a firmware  &lt;a href="http://www.libelium.com/development/waspmote/tutorial0002"&gt;upgrade&lt;/a&gt; called &lt;a href="http://www.digi.com/technology/digimesh/"&gt;DigiMesh&lt;/a&gt; designed specifically for the Series 1 hardware.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.adafruit.com/products/968"&gt;XBee Series 2 Module&lt;/a&gt; (&lt;a href="http://www.silabs.com/products/wireless/zigbee/Pages/default.aspx"&gt;Ember/Silicon Labs&lt;/a&gt; technology with ZigBee firmware) are similar to the Series 1 in many respects but use the &lt;a href="http://www.zigbee.org/"&gt;ZigBee&lt;/a&gt; standard, and  therefore, have the potential for interoperability with devices made by different vendors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;a href="http://computer.howstuffworks.com/how-wireless-mesh-networks-work.htm"&gt;Mesh networking&lt;/a&gt; (&lt;a href="http://en.wikipedia.org/wiki/Network_topology"&gt;topology&lt;/a&gt;) is a type of networking where each node must not only capture and disseminate its own data, but also may serve as a relay for other nodes, that is, it must collaborate to propagate the data in the network.  This gives the network &lt;a href="http://en.wikipedia.org/wiki/Self-organizing_network"&gt;self configuring&lt;/a&gt;, &lt;a href="http://queue.acm.org/detail.cfm?id=864027"&gt;self healing&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Dynamic_routing"&gt;dynamic routing&lt;/a&gt;, and other capabilities.  Wireless mesh networks can be implemented with various wireless technology including &lt;a title="802.11s" href="http://en.wikipedia.org/wiki/802.11s"&gt;802.11&lt;/a&gt;, &lt;a title="802.15" href="http://en.wikipedia.org/wiki/802.15"&gt;802.15&lt;/a&gt;, &lt;a title="802.16" href="http://en.wikipedia.org/wiki/802.16"&gt;802.16&lt;/a&gt;, cellular technologies or combinations of more than one type.  The mesh enabling capability for these technologies is the&lt;a href="http://en.wikipedia.org/wiki/Routing_protocol"&gt; routing protocol &lt;/a&gt;being used. There are &lt;a href="http://en.wikipedia.org/wiki/Wireless_mesh_network"&gt;many routing protocols&lt;/a&gt; being used by mesh networks today for many different types of products, but I will concern ourselves with just the XBee Series 1 and Series 2 products.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.zigbee.org/"&gt;Zigbee Alliance&lt;/a&gt; is a group of more than 300 companies who is responsible for publishing and maintaining the Zigbee specification. In the ZigBee network topology,  there are different node types in the network (Coordinator, Router, End Device). &lt;a href="http://www.digi.com/technology/digimesh/"&gt;DigiMesh&lt;/a&gt; is a proprietary &lt;a href="http://compnetworking.about.com/od/basicnetworkingfaqs/a/peer-to-peer.htm"&gt;peer-to-peer networking&lt;/a&gt; using a simplified topology (no need to define and organize coordinators, routers or end-nodes).  Digi has a &lt;a href="http://www.digi.com/pdf/wp_zigbeevsdigimesh.pdf"&gt;white paper&lt;/a&gt; that does a nice comparison of the two types of meshing products.&lt;/p&gt;
&lt;p&gt;To further clarify the similarity/difference between Series 1 &amp;amp; 2, see the table below:
&lt;center&gt;
&lt;table border="1" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Feature&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;&lt;b&gt;XBee Series 1 / 802.15.4&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;&lt;b&gt;XBee Series 2 / ZigBee&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;&lt;b&gt;Ramifications&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Price&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;~ $23&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;~ $26&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;Price shouldn’t be a driver but If you are looking for a simple point-to-point configuration, you should go with the Series 1. The Series 2 requires considerable setup and configuration.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Transmit Power Output&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;Indoor/Urban Range&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;Line-of-Sight Range&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="135"&gt;
&lt;p align="center"&gt;1 mW (0dbm)&lt;/p&gt;
&lt;p align="center"&gt;up to 100 ft.&lt;/p&gt;
&lt;p align="center"&gt;up to 300 ft.&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="135"&gt;
&lt;p align="center"&gt;2 mW (+3dbm)&lt;/p&gt;
&lt;p align="center"&gt;up to 133 ft.&lt;/p&gt;
&lt;p align="center"&gt;up to 400 ft.&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;The additional power of the Series 2 give you a ~25% increase in range.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Firmware&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Comes standard with 802.15.4 firmware for point-point or star topology. Requires DigiMesh firmware to mesh.&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;does not offer any 802.15.4-only firmware; it is always running the XBee ZB ZigBee mesh firmware&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;DigiMesh, while proprietary, appears to have less overhead and easier to configure&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Network Topologies&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Point-to-Point, Star, and Mesh (with DigiMesh firmware)&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Point-to-Point, Star, and Mesh&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;With a closer reading of the specs, you’ll find that the Series 1 with DigiMesh has a peer-to-peer topology but the Series 2 is hierarchical. I believe peer-to-peer is superior.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Routing Protocol&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p style="text-align:center;" align="center"&gt;Ad hoc On-Demand Distance Vector (AODV) Routing + Hierarchical Tree Routing as last resort&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Ad hoc On-Demand Distance Vector (AODV) Routing&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;I suspect there are more differences here but couldn’t uncover them.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;RF Data Rate&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;250 Kbps&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;250 Kbps&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;RF data rate doesn’t have much practical meaning&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Practical Maximum Throughput&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;~ 80kbps&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;ZigBee is significantly slower than the 802.15.4&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;ZugBee is a full OSI stack, and as a result, has significant overhead.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Power-Down Current&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;10 uA&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;1 uA&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;Series 2 was built for low power consumption.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;After pondering this all for a bit, I believe the choose boils down to two questions:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Is the interoperability of ZigBee important to you?&lt;/li&gt;
    &lt;li&gt;What are the benefits of ZigBee vs. DigiMesh?&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The answer to the first question is "no".  While I find ZigBee's interoperability seductive, the practical matter is that I just don't see that many applications that I could envision integrating into a project.  Maybe some day, but not within my planning horizon.  As to the second question, I don't see any advantages to ZigBee's imposed topology of coordinators, routers, and end-nodes.  I believe the homogeneous types of nodes will give my applications the flexibility I may need. Of course, there are many other things one might want to consider, but I think this analysis is sufficient for my needs.  I'm going with the XBee Series 1 Module and I'll install DigiMesh firmware when it comes time to build meshed networks.
&lt;h2&gt;AT Mode vs. API Mode&lt;/h2&gt;
XBee modules support two modes of operation – &lt;a href="http://www.digi.com/support/kbase/kbaseresultdetl?id=2205"&gt;AT mode&lt;/a&gt; and &lt;a href="http://www.digi.com/support/kbase/kbaseresultdetl?id=2184"&gt;API mode&lt;/a&gt;.  In API mode, you communicate with the radio by sending and receiving packets. In AT (transparent) mode, the XBee radio simply relays serial data to the receiving XBee, as identified by the DH+DL address.  Series 1 radios support both AT and API modes with a single firmware version, allowing you switch between the modes with the  &lt;a href="http://ftp1.digi.com/support/documentation/90001003_A.pdf"&gt;X-CTU software&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To create simple point-to-point links, XBee works nicely in AT mode without much coding. However, if your goal is to build a network consisting of more than two devices, AT mode becomes too difficult to bear. You will spend almost all the time switching in and out of AT mode, wasting time and draining batteries in the process. On the other hand, in API mode commands and data travel in specially formatted frames and no switching is necessary. Another advantage of API mode is that serial speed on transmitters doesn't have to match – one can be configured for 115,200bps, another for 2400bps, third left with default 9600bps. There is another nice feature called remote command; you can remotely request the state of XBee module pins, for example, or change an output pin level.&lt;/p&gt;
&lt;p&gt;It's clear that I'll want to work in API mode, but judging from the &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-4-api"&gt;examples of XBee API mode code&lt;/a&gt;, it sure would be nice to have a library package that has designed in some basic utilities that I can leverage.  That is the next topic.
&lt;h2&gt;Supporting Software&lt;/h2&gt;
One of the first packages I discovered was the &lt;a href="http://sojournstudio.org/xnp/?page_id=61"&gt;Xbee Network Protocol (XNP)&lt;/a&gt;.  I was impressed by the volume and quality of the &lt;a href="http://forums.adafruit.com/viewtopic.php?f=40&amp;amp;p=131325#p131325"&gt;documentation&lt;/a&gt;.  Never the less, I passed on it for two reasons.  First, it isn't as mature as other packages I discovered (and not widely used), and most importantly, it appears to be implementing mesh networking in software.  Ether the author didn't recognize that the Series 1 modules can mesh via the DigiMesh firmware (not a surprise since many websites wrongfully report that the Series 1 do not mesh) or he just wants to roll-his-own (what better way to learn about mesh routing protocols).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/xbee-arduino/"&gt;xbee-arduino&lt;/a&gt; is a C++ Arduino library for communicating with XBees in API mode, with support for both Series 1 and Series 2.  Judging from the documentation,  it appears that it could be ported to Raspberry Pi but it would be far easier to use something targeted for the RPi (see below).  With the latest beta software, the XBee's serial communications can be handle via &lt;a href="http://arduino.cc/en/Reference/SoftwareSerial"&gt;SoftwareSerial&lt;/a&gt;, freeing up the Arduino USB for debugging.  It also appears to that the author is experimenting  if not already &lt;a href="http://code.google.com/p/xbee-arduino/issues/detail?id=20"&gt;supporting DigiMesh&lt;/a&gt;. The package is well documented, actively maintained, and equally important, appears to be popular.&lt;/p&gt;
&lt;p&gt;Another possibility for the Raspberry Pi is the &lt;a href="http://code.google.com/p/python-xbee/"&gt;python-xbee&lt;/a&gt;. This Python package is not as well documented as the xbee-arduino but does appear to be actively used and supported. The fact that its on the Python Organization's web site as a &lt;a href="http://pypi.python.org/pypi/XBee/2.0.0"&gt;listed package&lt;/a&gt; gives it some additional credibility. See &lt;a href="http://code.google.com/p/python-xbee/issues/detail?id=28"&gt;this&lt;/a&gt; and &lt;a href="http://www.digi.com/wiki/developer/index.php/XBee_Extensions_to_the_Python_Socket_API"&gt;this&lt;/a&gt; with respect to DigiMesh support.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/libxbee/"&gt;libxbee&lt;/a&gt; is another C++ library but targeted at Linux and Windows. Fewer users and the author states "development is coming to an end" may mean this platform isn't as strong as the others.&lt;/p&gt;
&lt;p&gt;While not a very rigorous analysis, I believe I'll place my bets on &lt;a href="http://code.google.com/p/xbee-arduino/"&gt;xbee-arduino for Arduino&lt;/a&gt; development and &lt;a href="http://code.google.com/p/python-xbee/"&gt;python-xbee for Raspberry Pi&lt;/a&gt; development.  Using Python is intriguing in part because it appears to be the preferred software language for the RPi.  But what if you have some C++ code, a popular language for Linux, and that you want to use some existing libraries? There are tools that could make this happen. You could use &lt;a href="http://docs.python.org/2/extending/extending.html"&gt;Python's C/C++ extension modules&lt;/a&gt;. Also, there is the &lt;a href="http://www.swig.org/"&gt;Simplified Wrapper and Interface Generator (SWIG)&lt;/a&gt;, which is a software development tool that connects programs written in C/C++ with a variety of high-level programming languages. SWIG is used with different types of target languages including common scripting languages such as Perl, PHP, Python, Tcl and Ruby.
&lt;h2&gt;References&lt;/h2&gt;
An unspoken consideration in my analysis is documentation availability/quality, example implementations  for learning, and the availability of software libraries I could potential use. Here are some of the more interesting things I uncovered.&lt;/p&gt;
&lt;p&gt;Tutorials (ZigBee but can be generalized to the XBee)
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.rfwireless-world.com/Tutorials/Zigbee_tutorial.html"&gt;Zigbee Tutorial&lt;/a&gt; - a short introduction&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://sensor-networks.org/index.php?page=0823123150"&gt;802.15.4 vs ZigBee&lt;/a&gt; - a more technical introduction&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://freaklabs.org/index.php/Blog/Zigbee/zigbee-mesh-routing-interactive-tutorial.html"&gt;Zigbee Mesh Routing - Interactive Tutorial&lt;/a&gt; - nice job explaining AODV routing&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.jennic.com/elearning/zigbee/files/html/module1/module1-1.htm"&gt;The ZigBee Standard&lt;/a&gt; - a painless introduction&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
XBee Documentation
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.digi.com/products/wireless-wired-embedded-solutions/zigbee-rf-modules/point-multipoint-rfmodules/xbee-series1-module#docs"&gt;XBee Series 1 Manuals&lt;/a&gt; - multiple document covering the Series 1 modual&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.jsjf.demon.co.uk/xbee/faq.pdf"&gt;The Unofficial XBee FAQ&lt;/a&gt;  - answers to issues that maybe getting in the way&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.jsjf.demon.co.uk/xbee/xbee.pdf"&gt;XBee Cookbook for Series 1&lt;/a&gt; - sort of companion document to the The Unoffical XBee FAQ&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.libelium.com/development/waspmote"&gt;Libelium.com Development Documentation&lt;/a&gt; - while targeted for the meshlium device, this does have good general documenation&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Example Implementations
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://gallery.digi.com/"&gt;Collection of XBee Projects&lt;/a&gt; - Digi's collection of XBee projects done by the Hacker/DIY community&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://examples.digi.com/"&gt;XBee Examples &amp;amp; Guides&lt;/a&gt; - Digi's website giving you step-by-step instructions for simple projects&lt;/li&gt;
    &lt;li&gt;Playing Xbee: Part &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee"&gt;1&lt;/a&gt;, &lt;a href="http://www.circuitsathome.com/low-power/playing-xbee-part-2"&gt;2&lt;/a&gt;, &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-3"&gt;3&lt;/a&gt;, &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-4-api"&gt;4&lt;/a&gt; - author does a nice "teaching tour" on his introduction to XBee&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Other Sources
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.mesh-networks.org/index.php?language=english&amp;amp;page=the_group"&gt;mesh networks research group&lt;/a&gt; - informative topics focused in the mesh networks field&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://dsnet.tu-plovdiv.bg/wiki/Wiki.jsp?page=Driver%20Module%20for%20XBee%20Device"&gt;Driver Module for XBee Device&lt;/a&gt; - Linux kernel driver for XBee&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="XBee"></category></entry><entry><title>Raspberry Pi Serial Communication: What, Why, and a Touch of How</title><link href="/posts/2012/Dec/05/raspberry-pi-serial-communication-what-why-and-a-touch-of-how/" rel="alternate"></link><published>2012-12-05T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-12-05:posts/2012/Dec/05/raspberry-pi-serial-communication-what-why-and-a-touch-of-how/</id><summary type="html">&lt;p&gt;I started exploring how to get a LCD display operational with a Raspberry Pi (RPi).  I checked out two hardware configurations: the &lt;a href="http://www.adafruit.com/products/181"&gt;bare bone LCD 16x2 display&lt;/a&gt; driven by the &lt;a href="http://iamsuhasm.wordpress.com/tutsproj/using-lcds/"&gt;HD44780 chip set&lt;/a&gt;, which takes 6 wires to operate,  and another configuration that uses a &lt;a href="http://www.adafruit.com/products/772"&gt;Adafruit shield&lt;/a&gt; that requires only 2 wires.  It quickly became clear to me that I knew very little about how the LCD display works (maybe not an important topic for me) and I didn't fully understands the RPi's serial communications capabilities (something I must fully understand).  Adafruit does give some nice tutorial that  provide instructions on how to get both configurations work on the RPi, but I don't like blindly follow tutorials without having a deeper understanding of my options and the underlining hardware.   So what are the serial communication options supported by the Raspberry Pi, under what situations would you use them, and how do you use them?&lt;/p&gt;
&lt;p&gt;So I did my research, and for the moment, I'm not going to concern myself about LCD displays but I will dive neck deep into understanding RPi serial communications.  I'll return to the LCD display topic later.
&lt;h2&gt;The Raspberry Pi Board&lt;/h2&gt;
As our first step, lets take a quick scan of the interfaces we have on RPi for moving data in and out.  The picture below labels the most prominent components on the RPi board.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/raspberry-pi/#main" rel="attachment wp-att-870"&gt;
    &lt;img class="aligncenter size-full wp-image-870" alt="raspberry-pi" src="/images/raspberry-pi.jpeg" width="545" height="454" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Of course, the "lead actor" on the RPi board is the Broadcom BCM2835, &lt;a href="http://en.wikipedia.org/wiki/System-on-a-chip"&gt;System on a Chip (SoC)&lt;/a&gt;.  Broadcom bills this chip as a "multimedia applications processor for advanced mobile and embedded applications that require the highest levels of multimedia performance".  Maybe more importantly for the DIY/Hacker community is that all the &lt;a href="http://www.raspberrypi.org/archives/2221"&gt;firmware running on the chip is now open source&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is another big chip, that being the SMSC LAN9512/LAN9512i USB  Hub &amp;amp; Ethernet Controller.  This is the major work horse in getting data in/out of the RPi for USB peripheral devices and IP networking.&lt;/p&gt;
&lt;p&gt;Now note that most of the board's other large components are for data I/O.  Specifically, the &lt;a href="http://en.wikipedia.org/wiki/Hdmi"&gt;HDMI&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/RCA_connector"&gt;RCA Video&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/Audio_jack"&gt;Audio Out&lt;/a&gt; (3.5mm jack) are output only (at least for general purpose data communication perspective), and therefore, not part of our discussion.  On the other hand, the &lt;a href="http://en.wikipedia.org/wiki/Usb"&gt;USB&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Ethernet"&gt;Ethernet&lt;/a&gt; ports, are powerful  and widely supported serial communication devices, but I will only lightly touch the USB. I want to focus on serial communication with simple/bare-bone devices, like an LCD 16x2 display, which generally are not interface via something as sophisticated at USB or Ethernet.  But the USB can be used to some for some types of device interfacing, so I will cover that as a final topic.&lt;/p&gt;
&lt;p&gt;There are three other board components that concern themselves with data communications but will not be covered in this post:
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;JTAG Header: &lt;/strong&gt;The &lt;a href="http://www.xjtag.com/support-jtag/jtag-high-level-guide.php"&gt;JTAG&lt;/a&gt; Header is used as a debug port. Embedded systems developer relies on debuggers communicating with chips via the JTAG to perform operations like single stepping and break-pointing.  In time, I suspect people will find ways to exploit these pins for both good &amp;amp; evil, but for now, this is for the RPi hardware development community to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;CSI Camera Connector: &lt;/strong&gt;The &lt;a href="http://www.mipi.org/specifications/camera-interface"&gt;Camera Serial Interface (CSI)&lt;/a&gt;  specification is a standard interface between a camera and a host processor for mobile device applications.  This will be where you'll connect cameras and video devices to the RPi.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;DSI Display Connector: &lt;/strong&gt;The &lt;a href="http://www.mipi.org/specifications/display-interface"&gt;Display Serial Interface (DSI)&lt;/a&gt; is a specification  aimed at reducing the cost of display sub-systems in a mobile device. This is commonly targeted at LCD and similar display technologies. RPi may be able to interface to some of these.  Some graphical LCD/OLED displays might be attached to it.  DSI would seem like a good candidate for implementing my LCD display but there is a problem.  It appears the &lt;a href="http://www.chalk-elec.com/?p=1553"&gt;DSI isn't supported&lt;/a&gt; at this time.&lt;/li&gt;
&lt;/ul&gt;
This leaves one remaining board input/output component standing, that be the &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;General Purpose Input/Output (GPIO)&lt;/a&gt;.  On some electronics boards, GPIO pins have no special purpose defined, and some pins go unused by default.  The RPi developer has identified a handful of digital control lines and provided services on them for you to use.  By having these available can save you the hassle of having to arrange additional circuitry to provide them or implement functionality in software.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Raspberry Pi's GPIO as a Data Bus&lt;/b&gt;
The first thing to get your head around, is how is data moved around the RPi, or in any general purpose computer.  In the most general sense in electronics, a bus or data bus is used to move data words of any type from one place to another. Computing is based on data words made up of collections of data bits. These “words” can contain as few as four data bits and often much larger.&lt;/p&gt;
&lt;p&gt;The task of a bus designer is to devise circuitry that passes these data words from one circuit to another.  These words can be communicated &lt;a href="http://en.wikipedia.org/wiki/Serial_communication"&gt;serially&lt;/a&gt;  (i.e. &lt;a href="http://www.eeherald.com/section/design-guide/esmod7.html"&gt;serial communications&lt;/a&gt;) or in &lt;a href="http://en.wikipedia.org/wiki/Parallel_communication"&gt;parallel&lt;/a&gt;.
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Serial Bus:&lt;/strong&gt; The least expensive method in terms of wire cost is to send the bits one at a time over a single pair of wires. This is called serial data transmission.  Data words start as sets of bits that exist in parallel. In order to ship these words on a serial basis they must be converted to a serial stream of bits at the transmit end and then reconverted to a parallel word at the receive end. The common name for the circuitry that does this conversion is a &lt;a href="http://www.eetimes.com/design/analog-design/4207765/The-basics-of-SerDes--serializers-deserializers--for-interfacing"&gt;SerDes&lt;/a&gt; circuit which stands for serializer/deserializer. Integrated circuits are more expensive when they have more pins. To reduce the number of pins in a package, many ICs use a serial bus to transfer data when speed is not important. Some examples of such low-cost serial buses include &lt;a href="http://en.wikipedia.org/wiki/Serial_Peripheral_Interface"&gt;Serial Peripheral Interface (SPI)&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/I%C2%B2C"&gt;Inter-Integrated Circuit&lt;b&gt; &lt;/b&gt;(I²C)&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/UNI/O"&gt;UNI/O&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/1-Wire"&gt;1-Wire&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Parallel Bus:&lt;/strong&gt; At some point, it is more cost effective to add a wire for each bit in the word and send it in parallel on a data bus. Parallel buses have a limited data rate and distance at which they can be reliably run (more so than a serial bus).  Some widely used parallel bus standards are &lt;a href="http://en.wikipedia.org/wiki/Parallel_Bus_Interface"&gt;Parallel Bus Interface&lt;/a&gt; (PBI), &lt;a href="http://en.wikipedia.org/wiki/Conventional_PCI"&gt;Peripheral Component Interface&lt;/a&gt; (PCI), &lt;a href="http://en.wikipedia.org/wiki/Small_Computer_Systems_Interface"&gt;Small Computer Systems Interface&lt;/a&gt; (SCSI), the &lt;a href="http://en.wikipedia.org/wiki/VMEbus"&gt;VMEbus&lt;/a&gt; used in instrumentation, the &lt;a href="http://en.wikipedia.org/wiki/RDRAM"&gt;Rambus&lt;/a&gt; interface used in memories, and others.&lt;/li&gt;
&lt;/ul&gt;
As the name implies, GPIO pins can be configured through software  to provide some specific function or purpose within the &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;hardware device design&lt;/a&gt;.  The GPIO pins connect directly into the core of the processor, and the Raspberry Pi developers implemented several &lt;a href="http://elinux.org/RPi_BCM2835_GPIOs"&gt;alternate functions&lt;/a&gt; for the GPIO pins.  Several are desirable because of the multiple standards and types of devices you may wish to interface.  On boot-up,  the RPi board GPIO is in alternate function state "ALT0" and will support I2C, SPI, and UART.  This is shown below:
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/raspberry-pi-rev-1-gpio-pin-out-2/#main" rel="attachment wp-att-885"&gt;
        &lt;img class="aligncenter  wp-image-885" alt="Raspberry Pi (Rev 1) GPIO Pin Out" src="/images/raspberry-pi-rev-1-gpio-pin-out1.jpg" width="424" height="474" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
It can be confusing to call the RPi's whole 26 pin array GPIO and also some specific pins GPIO.   In reality, all the GPIO pins can be reconfigured to provide alternate functions. &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While PCM isn't a topic for this posting, in the figure above, you'll also see references to PCM on pins 18 &amp;amp; 21.  PCM stands for &lt;a href="http://en.wikipedia.org/wiki/Pulse-code_modulation"&gt;Pulse-code modulation&lt;/a&gt; and is s a method used to digitally represent analog signals.  It is often used to control light intensity or motors.  RPi's native PCM capabilities are not well documented but it appears that people have has some success.  Generally, to do anything useful, you need multiple PCM channels so people have resorted to adding &lt;a href="http://learn.adafruit.com/adafruit-16-channel-servo-driver-with-raspberry-pi/overview"&gt;hardware&lt;/a&gt; or &lt;a href="https://projects.drogon.net/software-pwm-on-the-raspberry-pi/"&gt;software&lt;/a&gt; to get the desired functionality from the RPi.  My guess is these RPi pins don't have much of a future.
&lt;h2&gt;I2C, SPI, UART ... Say what?&lt;/h2&gt;
Much has been lightly covered so far, including terms like I2C, SPI, and UART.  So what is the significance?  Well, I2C, SPI, and UART are the heart of our quest to understand RPi's serial communications capability. Via their exposure on the GPIO pins, these capabilities are what can be used to integrate things like LCD displays to the RPi.  Now lets dive deeper into each one of them.
&lt;h2&gt;Universal Asynchronous Receiver/Transmitter (UART)&lt;/h2&gt;
The &lt;a href="http://www.lammertbies.nl/comm/info/serial-uart.html"&gt;Universal Asynchronous Receiver/Transmitter (UART)&lt;/a&gt; takes bytes of data and transmits the individual bits in a sequential fashion. The device changes processor's parallel information to serial data which can be sent on a communication line. A second UART (maybe on another processor)  can be used to receive the serial information. The UART performs all the tasks, timing, parity checking, etc. needed for the communication. The only extra devices attached are line driver chips capable of transforming the &lt;a href="http://en.wikipedia.org/wiki/Transistor%E2%80%93transistor_logic"&gt;TTL&lt;/a&gt; level signals (0/5 volts) to line voltages (on RS-232 line this could be as +/- 25 volts) and vice versa.&lt;/p&gt;
&lt;p&gt;Each UART contains a &lt;a title="Shift register" href="http://en.wikipedia.org/wiki/Shift_register"&gt;shift register&lt;/a&gt;, which is the fundamental method of conversion between serial and parallel forms. Serial transmission of digital information (bits) through a single wire or other medium is much more cost effective than parallel transmission through multiple wires.  The UARTs transmit/receive one bit at a time at a specified data rate (i.e. 9600bps, 115,200bps, etc.). This method of serial communication is sometimes referred to as TTL serial communications.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Asynchronous_communication"&gt;Asynchronous transmission&lt;/a&gt; allows data to be transmitted without the sender having to send a clock signal to the receiver. Instead, the sender and receiver must agree on timing parameters in advance and special bits are added to each word which are used to synchronize the sending and receiving units. When a word is given to the UART for Asynchronous transmissions, a bit called the "Start Bit" is added to the beginning of each word that is to be transmitted. The Start Bit is used to alert the receiver that a word of data is about to be sent, and to force the clock in the receiver into synchronization with the clock in the transmitter.&lt;/p&gt;
&lt;p&gt;For a further description of synchronous and asynchronous line communications, check out this &lt;a href="http://sangoma.com/support/tutorials/sync_n_async.html"&gt;tutorial&lt;/a&gt;.
&lt;h2&gt;Raspberry Pi's Mini-UART&lt;/h2&gt;
&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Warning&lt;/span&gt;: Misleading information ahead - See Warren Gay's comments.&lt;/em&gt;
The Raspberry Pi actually has &lt;a href="http://lavalink.com/2012/04/more-on-raspberry-pi-serial-ports/"&gt;two UARTs&lt;/a&gt;. One UART  is part of the internal ARM architecture of the Broadcom BCM2835 chip, in the core of the Raspberry Pi and not accessible externally.  The other UART is sometimes called the RPi's "Serial Port" (even thou the USB supports serial communications, and therefore a serial port).  The serial port being reference here is serviced by a UART, sometime refereed to as the  “&lt;a href="http://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdf"&gt;Mini-UART&lt;/a&gt;" since it doesn't appear to be very rich in functionality.  It is basically be used as a console port for access to the Raspberry Pi.  The &lt;a href="http://www.techrepublic.com/blog/opensource/learn-to-use-a-serial-console-on-linux/157"&gt;serial console&lt;/a&gt; is a convenient way to interact with the Raspberry Pi for debugging or your network is down and it is the destination of console messages (including boot-up messages).  From the &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;Raspberry Pi pinout&lt;/a&gt; and the &lt;a href="http://elinux.org/RPi_Serial_Connection"&gt;eLinux wiki&lt;/a&gt;, I can see that the serial port (aka Mini-UART) on the Pi is on GPIO Pin 14 (TX) and GPIO Pin 15 (RX):
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/mini-uart/#main" rel="attachment wp-att-888"&gt;
        &lt;img class="aligncenter  wp-image-888" alt="Mini-UART" src="/images/mini-uart.jpg" width="473" height="253" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
Since the GPIO pins give access to the Mini UART, you can establish a serial console, which can be used to log in to the Pi, and many other things.  However, normal console device communicate with -12V (logical “1″) and +12V (logical “0″) RS-232, which may just fry something in the 3.3V Pi. Even “TTL level” serial at 5V runs the same risk.  See &lt;a href="http://codeandlife.com/2012/07/01/raspberry-pi-serial-console-with-max3232cpe/" rel="nofollow"&gt;this tutorial&lt;/a&gt; for one example on how to build 3.3V to RS-232 levels converter with a MAX3232CPE and a few passive components.&lt;/p&gt;
&lt;p&gt;You can reconfigure the RPi so that the Mini UART isn't acting as a serial console and use it for outer purposes (e.g. communicate with an attached Arduino or Xbee).  &lt;a href="http://www.irrational.net/2012/04/19/using-the-raspberry-pis-serial-port/"&gt;Using the Raspberry Pi’s serial port&lt;/a&gt; requires some Linux reconfiguration and the abandonment of the serial console, and potentially some level conversion, but it could be useful. The Mini-UART pins to provide access to Linux's &lt;a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=44&amp;amp;t=13957"&gt;/dev/ttyAMA0&lt;/a&gt; serial port.  To be able to use the serial port to connect and talk to other devices, the serial port console login needs to be disabled and the post "&lt;a href="http://www.hobbytronics.co.uk/raspberry-pi-serial-port"&gt;Raspberry Pi and the Serial Port&lt;/a&gt;" shows you how.&lt;/p&gt;
&lt;p&gt;Again, keep in mind that RX and TX lines are available on the &lt;a title="RPi Low-level peripherals" href="http://elinux.org/RPi_Low-level_peripherals"&gt;GPIOs&lt;/a&gt; but operate at 3.3 volts. You'll need a board or cable to&lt;a href="http://www.adafruit.com/products/395"&gt; level convert&lt;/a&gt; 3.3 volt UART signals to connect with other devices (e.g. RS-232, USB).
&lt;h2&gt;Serial Peripheral Interface Bus (SPI) -- aka 4-Wire Serial Bus&lt;/h2&gt;
The &lt;a href="http://www.eeherald.com/section/design-guide/esmod12.html"&gt;Serial Peripheral Interface Bus or SPI&lt;/a&gt; (pronounced as either S-P-I or spy) bus is a synchronous serial data link standard, named by Motorola, that operates in full duplex mode.  SPI is much simpler than I2C. Master and slave are linked by three data wires, usually called MISO, (Master in, Slave out), MOSI (Master out, Slave in), the SCLK clock line (sometimes called M-CLK), and an optional SS (Slave Select; sometimes known as the Chip Select &lt;span style="text-decoration:underline;"&gt;or&lt;/span&gt; CS line &lt;span style="text-decoration:underline;"&gt;or&lt;/span&gt; Chip Enable &lt;span style="text-decoration:underline;"&gt;or&lt;/span&gt; CE line) is the slave select or chip select line.  Its optional only if you have one slave, otherwise one or more SS lines are provided.  The Raspberry Pi has two &lt;a href="http://en.wikipedia.org/wiki/Chip_select"&gt;Slave Select&lt;/a&gt; lines: CE0 and CE1.
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/spi-diagram-and-sescription/#main" rel="attachment wp-att-898"&gt;
        &lt;img class="aligncenter  wp-image-898" alt="SPI Diagram and Sescription" src="/images/spi-diagram-and-sescription.jpg" width="436" height="363" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
Usually the transfer sequence consist of driving the SS line low, sending X number of clock signals with the proper polarity and phase, then driving the SS line high to end the communication. As the clock signals are generated, data is transferred in both directions, therefore in a “transmit only” system the received bytes have to be discarded and in a “receive only” system a dummy byte has to be transmitted.&lt;/p&gt;
&lt;p&gt;Many SPI-enabled ICs and Microcontrollers can cope with data rates of over 10MHz, so transfer is much faster than with I2C. Since it is &lt;a href="http://www.fiberoptics4sale.com/wordpress/what-is-synchronous-transmission-and-asynchronous-transmission/"&gt;synchronous communications&lt;/a&gt;, it is not limited to 8-bit words so you can send any message sizes with arbitrary content and purpose. The SPI interface does not require pull-up resistors, which translates to lower power consumption. The downside is that SPI normally has no addressing capability; instead, devices are selected by means of a SS signal which the master can use to enable one slave out of several connected to the SPI bus. If more than one slave exists, one chip select line is required per device, which can use precious GPIO lines on the Master.
&lt;h2&gt;Inter-Integrated Circuit (I2C) -- aka 2-Wire Serial Bus&lt;/h2&gt;
&lt;a href="http://www.eeherald.com/section/design-guide/esmod11.html"&gt;Inter-Integrated Circuit or I2C&lt;/a&gt; (pronounced as either I-squared-C or I-2-C) is generically referred to as a "two-wire interface".  It's a multi-master serial single-ended computer bus invented by Philips that is used to attach low-speed peripherals to a motherboard, embedded system, cellphone, or other electronic device.&lt;/p&gt;
&lt;p&gt;I2C can be used to connect up to 127 nodes via a bus has two data wires, called SCL and SDA.  SCL is the clock line. It is used to synchronize all data transfers over the I2C bus. SDA is the data line. Of course, there is a third wire being ground. There may also be a 5 volt wire to distribute power to the devices. Both SCL and SDA lines are "open drain" drivers. What this means is that the chip can drive its output low, but it cannot drive it high.  For the line to be able to go high you must provide pull-up resistors to the 5v supply. There should be a resistor from the SCL line to the 5v line and another from the SDA line to the 5v line. The value of the resistors is not critical.  Anything from 1800 ohms to 47K ohms used (1.8K, 47K and 10K are common values). You only need one set of pull-up resistors for the whole I2C bus, not for each device, as illustrated below:
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/i2c-diagram-and-description-2/#main" rel="attachment wp-att-906"&gt;
    &lt;img class="aligncenter  wp-image-906" alt="I2C Diagram and Description" src="/images/i2c-diagram-and-description1.jpg" width="436" height="293" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
In theory the I2C bus can support multiple masters, but most micro-controllers can’t. A master is usually a microcontroller, although it doesn’t have to be. Slaves can be ICs or microcontrollers.  When the master wishes to communicate with a slave it sends a series of pulses down the SDA and SCL lines. The data that is sent includes an address that identifies the slave with which the master needs to interact. Addresses take 7 bits out of a data byte; the remaining bit specifies whether the master wishes to read (get data from a slave) or write (send data to a slave).&lt;/p&gt;
&lt;p&gt;Some devices have an address that is entirely fixed by the manufacturer; others can be configured to take one of a range of possible addresses. When a micro-controller is used as a slave it is normally possible to configure its address by software, and for that address to take on any of the 127 possible values.  The address byte may be followed by one or more byes of data, which may go from master to slave or from slave to master.&lt;/p&gt;
&lt;p&gt;When data is being sent on the SDA line, clock pulses are sent on the SCL line to keep master and slave synchronised. Since the data is sent one bit at a time, the data transfer rate is one eighth of the clock rate. The original standard specified a standard clock rate of 100KHz, and most I2C chips and micro-controllers can support this. Later updates to the standard introduced a fast speed of 400KHz and a high speed of 1.7 or 3.4 MHz.  The Arduino and Raspberry Pi can support standard and fast speeds.&lt;/p&gt;
&lt;p&gt;The fast rate corresponds to a data transfer rate of 50K bytes/sec which is too slow for some control applications. One option in that case is to use SPI instead of I2C.
&lt;h2&gt;1-Wire -- aka 1-Wire Serial Bus&lt;/h2&gt;
On a &lt;a href="http://www.maximintegrated.com/products/1-wire/flash/overview/index.cfm"&gt;1-Wire &lt;/a&gt;bus (sometime refered to as a  "MicroLan"), a single master device communicates with one or more 1-Wire slave devices over a single data line, which can also be used to provide power to the slave devices. Devices drawing power from the 1-wire bus are said to be operating inparasitic power mode.  When operating in parasite power mode, only two wires are required: one data wire, and ground. At the master, a 4.7k pull-up resistor must be connected to the 1-wire bus. With an external supply, three wires are required: the bus wire, ground, and power. The 4.7k pull-up resistor is still required on the bus wire.
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/1-wire-diagram-and-description/#main" rel="attachment wp-att-907"&gt;
        &lt;img class="aligncenter  wp-image-907" alt="1-Wire Diagram and Description" src="/images/1-wire-diagram-and-description.jpg" width="436" height="211" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
Each 1-Wire device contains a unique 64-bit  code, consisting of an 8-bit family code, a 48-bit serial number, and an 8-bit CRC. Before sending a command to a slave device, the master must first select that device using its code.
&lt;h2&gt;How do you use I2C, SPI, UART, or 1-Wire on the Raspberry Pi?&lt;/h2&gt;
Now that we know the what &amp;amp; why for serial communications options on the Raspberry Pi, how do we use them?  This topic deserves technical details and examples but this post has already run too long.  I'm likely to do some specific implementation in the future, but for now I'll reference some sources of information on the web.&lt;/p&gt;
&lt;p&gt;First, lets be clear about the RPi software distribution I'm using, since not all will be supporting all these serial communications options.  I'm using Adafruit's &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-2"&gt;Occidentalis&lt;/a&gt; distribution (based on "Wheezy") which comes with hardware SPI, I2C, and 1-wire support. In the Occidentalis distribution, Adafruit has included in the Linux &lt;a href="http://en.wikipedia.org/wiki/Kernel_(computing)#Unix"&gt;kernel&lt;/a&gt; the needed drivers. SPI and I2C has been implement on the GPIO pins as outline above.  RPi doesn't have a predetermined GPIO pin assignment for 1-Wire, but Adafruit choose GPIO pin 4 for 1-Wire.  Note that this unassigned GPCLK0 (General Purpose Clock Voltage) function.&lt;/p&gt;
&lt;p&gt;Given you have the Occidentalis distribution, you can check on the installation of I2C, SPI, and 1-Wire via the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;To validate I2C, connect any I2C device to power, ground, SDA and SCL. Then run  &lt;code&gt;sudo i2cdetect -y 0&lt;/code&gt; to detect which addresses are on the bus. &lt;a href="http://linux.die.net/man/8/i2cdetect"&gt;&lt;code&gt;i2cdetect&lt;/code&gt;&lt;/a&gt; is a program to scan an I2C bus for devices.  Also, you can list the I2C device drivers via the command &lt;code&gt;ls /dev/&lt;em&gt;i2c&lt;/em&gt;&lt;/code&gt;.  This illustrates that RPi supports two I2C buses, 0 and 1.&lt;/li&gt;
    &lt;li&gt;To validate SPI, the command &lt;code&gt;ls /dev/&lt;em&gt;spi&lt;/em&gt;&lt;/code&gt; will list two SPI devices, one each for the 0 &amp;amp; 1 SS lines.  To go further, use the  &lt;a href="http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=blob_plain;f=Documentation/spi/spidev_test.c"&gt;spidev_test.c&lt;/a&gt; tool described in &lt;a href="http://www.brianhensley.net/2012/07/getting-spi-working-on-raspberry-pi.html"&gt;Getting SPI working on the Raspberry Pi&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Occidentalis implementation of 1-Wire isn't done via a kernel installed driver but &lt;a href="http://en.wikipedia.org/wiki/Bit_banging"&gt;bitbanged&lt;/a&gt;.  Adafruit states that the implementation is  "&lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#one-wire-support"&gt;flakier than SPI or I2C&lt;/a&gt;" and they don't have any tutorials.  Maybe 1-Wire should be shelved for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
There are some good RPi SPI &amp;amp; I2C tutorials on &lt;a href="http://learn.adafruit.com/"&gt;Adafruits&lt;/a&gt;.  There are others on personal blogs but generally they are scares right now.
&lt;h2&gt;Attach Peripherals to the Raspberry Pi&lt;/h2&gt;
Now that we know the in's &amp;amp; out's of serial communications with the RPi, what can be done to make the physical aspects of interfacing the board easier.  Dealing with the GPIO pins on the board can be a pain.  One solution is the &lt;a href="http://adafruit.com/products/914"&gt;Pi Cobbler&lt;/a&gt; which plug the GPIO pins into a solderless breadboard via a ribbon cable.  My personal favorite is the &lt;a href="http://picru.st/"&gt;Pi Crust&lt;/a&gt;.  In this case, the confusing layout of  GPIO pins are much more clearly organized and supplied with more useful female headers.  A whole development environment will be supplied via &lt;a href="http://piregistration.element14.com/signup.html?isRedirect=true"&gt;PiFace Digital and Gertboard&lt;/a&gt; ... when they become available.
&lt;h2&gt;The USB Serial Ports&lt;/h2&gt;
As promised, the final topic is the USB port. The USB can be used for some types of device interfacing, particularly if you make it look like a simple serial port to the device.  The &lt;a href="http://www.tldp.org/HOWTO/Serial-HOWTO-1.html"&gt;conventional serial port&lt;/a&gt; (&lt;span style="text-decoration:underline;"&gt;not&lt;/span&gt; the newer USB port) is a very old I/O (Input/Output) port. It's slow compared to newer &lt;a href="http://www.necdisplay.com/Documents/WhitePapers/USB.pdf"&gt;Universal Serial Bus (USB)&lt;/a&gt; serial devices, but conventional serial ports are still in use and many devices you’ll hook to your RPi will want to use them.  Until around 2006, most new desktop PC's had one but has been largely replaced by the USB. Conventional serial ports are still widely used in embedded systems, but the RPi choose to use the USB.  Never the less, it is possible to put a conventional serial port device on the USB bus by using a Serial to USB Adapter &lt;a href="http://www.adafruit.com/products/284"&gt;hardware&lt;/a&gt; or &lt;a href="http://www.adafruit.com/products/954"&gt;cables&lt;/a&gt;.  This could be necessary for some of the hardware hacking you’ll do with an RPi.  (For example, I’ll be posting a project where I’ll use the RPi’s USB to talk to a XBee radio.)&lt;/p&gt;
&lt;p&gt;USB does synchronous communications (synchronous means that bytes are sent out at a constant rate one after another in step with a clock signal tick) and transmits in special packets like a network. Conventional serial ports are typically asynchronous (i.e. "not synchronous"). Just like a network, USB can have several devices physically attached to it, including serial ports. Each device on it gets a time-slice of exclusive use for a short time. A device can also be guaranteed the use of the bus at fixed intervals. One device can monopolize it if no other device wants to use it.&lt;/p&gt;
&lt;p&gt;Under Linux, each and every hardware device, including USB ports, are treated as a file and call a &lt;a href="http://en.wikipedia.org/wiki/Device_file"&gt;device file&lt;/a&gt;.  A device file allows a user to access hardware devices, but shields the users from the technical details about the hardware. (This is unlike what we’ll see for the RPi GPIO interfaces where hardware level technical details must be address directly.) Under Linux, a conventional serial port will typically have a device file such as &lt;code&gt;/dev/ttyS0, /dev/ttyS1,&lt;/code&gt; etc. but the USB serial ports will appear as &lt;code&gt;/dev/ttyUSB0, /dev/ttyUSB1,&lt;/code&gt; etc.  When your device is plugged in, Linux assigns the filename as it sees fit and isn’t always predicable (&lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;it doesn’t have to be this way&lt;/a&gt;). If you need to know what device file your serial device is connected too (and your software often needs to know), using a combination of the commands &lt;code&gt;lsusb&lt;/code&gt;, &lt;code&gt;dmesg&lt;/code&gt;, and &lt;code&gt;grep&lt;/code&gt;, plus some basic insight, will often do the trick.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/s2-sysinfo-hardware-lsusb.html"&gt;&lt;code&gt;lsusb&lt;/code&gt;&lt;/a&gt; command can show you the hubs connected to your system, but you won't necessarily see any entries in /dev until you plug something into it, and what that entry may be will be dependent upon the type of device you are plugging in.  The system doesn't recognize new USB devices right away. It can take from a couple of seconds to as much as a minute.  If I plug my &lt;a href="http://www.adafruit.com/products/70"&gt;Serial to USB Adapter cable&lt;/a&gt;, using the &lt;a href="http://linux.die.net/man/8/lsusb"&gt;&lt;code&gt;lsusb&lt;/code&gt;&lt;/a&gt; command I can identify the cables .  Now using &lt;code&gt;dmesg&lt;/code&gt;, and grepping for the "Manufacturer", I can get the "FTDI".  Now I &lt;code&gt;grep&lt;/code&gt; again for "FTDI" to get the device file name "&lt;code&gt;ttyUSB0&lt;/code&gt;".  This is all illustrated below:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/lsusb-and-dmesg-2/" rel="attachment wp-att-1063"&gt;
    &lt;img class="aligncenter size-full wp-image-1063" alt="lsusb and dmesg" src="http://jeffskinnerbox.files.wordpress.com/2012/12/lsusb-and-dmesg1.jpg" width="500" height="242" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;</summary><category term="Raspberry Pi"></category></entry><entry><title>Speech Synthesis on the Raspberry Pi</title><link href="/posts/2012/Nov/26/speech-synthesis-on-the-raspberry-pi/" rel="alternate"></link><published>2012-11-26T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-11-26:posts/2012/Nov/26/speech-synthesis-on-the-raspberry-pi/</id><summary type="html">&lt;p&gt;Now that I can get &lt;a href="http://jeffskinnerbox.wordpress.com/2012/11/15/getting-audio-out-working-on-the-raspberry-pi/"&gt;sound&lt;/a&gt; out of my Raspberry Pi (RPi), the next logical step for me is speech synthesis ... Right?  I foresee my RPi being used as a controller/gateway for other devices (e.g. RPi or Arduino).  In that capacity, I want the RPi to provide status via email, SMS, web updates, and so why not speech?  Therefore, I'm looking for a good text-to-speech tool that will work nicely with my RPi.
Check this out for a &lt;a href="https://hackaday.io/project/174316-sam-2600/details"&gt;Brief History of Speech Synthesis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The two dominate free speech synthesis tools for Linux are &lt;a href="http://espeak.sourceforge.net/"&gt;eSpeak&lt;/a&gt; and &lt;a href="http://www.cstr.ed.ac.uk/projects/festival/download.html"&gt;Festival&lt;/a&gt; (which has a light-weight version called Flite). Both tools appear very popular, well supported, and produce quality voices.  I sensed that Festival is more feature reach and configurable, so I went with it.&lt;/p&gt;
&lt;p&gt;To install Festival and Flite (which doesn't require Festival to be installed), use the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install festival
&amp;lt;code&amp;gt;sudo apt-get install flite
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Festival&lt;/h2&gt;

&lt;p&gt;To test out the installation, check out &lt;a href="http://linux.die.net/man/1/festival"&gt;Festival's man page&lt;/a&gt;, and execute the following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #336666"&gt;echo&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;Why are you in front of the computer?&amp;quot;&lt;/span&gt; | festival --tts
date &lt;span style="color: #CC3300"&gt;&amp;#39;+%A, %B %e, %Y&amp;#39;&lt;/span&gt; | festival --tts
festival --tts Gettysburg_Address.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Text, WAV, Mp3 Utilities&lt;/h2&gt;

&lt;p&gt;Festival also supplies a tool for converting text files into WAV files.  This tool, called &lt;a href="http://manpages.ubuntu.com/manpages/hardy/man1/text2wave.1.html"&gt;&lt;code&gt;text2wave&lt;/code&gt;&lt;/a&gt; can be executes as follows:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;text2wave -o HAL.wav HAL.txt
aplay HAL.wav
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;MP3 files can be 5 to 10 times smaller than WAV files, so it might be nice to convert a WAV file to MP3.  You can do this via a tool called &lt;a href="http://linux.die.net/man/1/lame"&gt;&lt;code&gt;lame&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;lame HAL.wav HAL.mp3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/lame-example.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-847" title="lame example" alt="lame example" src="http://jeffskinnerbox.files.wordpress.com/2012/11/lame-example.jpg" width="545" height="311" /&gt;
&lt;/a&gt;
&lt;/center&gt;
&lt;h2&gt;Flite&lt;/h2&gt;
&lt;a href="http://manpages.ubuntu.com/manpages/hardy/man1/flite.1.html"&gt;Flite&lt;/a&gt; (festival-lite) is a small, fast run-time synthesis engine developed using Festival for small embedded machines. Taking a famous quote from &lt;a href="http://en.wikipedia.org/wiki/HAL_9000"&gt;HAL&lt;/a&gt;, the computer in the movie "&lt;a href="http://en.wikipedia.org/wiki/2001:_A_Space_Odyssey_(film)"&gt;2001: A Space Odyssey&lt;/a&gt;"&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;flite &lt;span style="color: #CC3300"&gt;&amp;quot;Look Dave, I can see you&amp;#39;re really upset about this. I honestly think you ought to sit down calmly, take a stress pill, and think things over.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Depending how the software was built for the package, you find that flite (and festival) has multiple voices. To find what voices where built in, use the command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;flite -lv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To play a specific voice from the list, use the &lt;code&gt;-voice&lt;/code&gt; parameter in the command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;flite -voice kal &lt;span style="color: #CC3300"&gt;&amp;quot;I&amp;#39;m now speaking kal&amp;#39;s voice. By the way, please call me Dr. Hawking.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my case, the default voice appears to be "kal", which sounds somewhat like &lt;a href="http://www.newscientist.com/article/dn21323-the-man-who-saves-stephen-hawkings-voice.html"&gt;Stephen Hawking&lt;/a&gt;.  "slt" appears to be a female version of the "kal" voice.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://manpages.ubuntu.com/manpages/hardy/man1/flite_time.1.html"&gt;&lt;code&gt;flite_time&lt;/code&gt;&lt;/a&gt; is a talking clock that can speak things like "The time is now, exactly two, in the afternoon."&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;flite_time 14:00
flite_time &lt;span style="color: #CC3300"&gt;`&lt;/span&gt;date +%H:%M&lt;span style="color: #CC3300"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Documentation&lt;/h2&gt;

&lt;p&gt;The documentation for Festival and Flite isn't all that great but there does seem to be multiple sources.  Here is what I found most useful:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.cstr.ed.ac.uk/projects/festival/manual/festival_7.html"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://digital.cs.usu.edu/~vkulyukin/vkweb/teaching/cs6890/festival.pdf"&gt;More Complete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;Gary Hall of &lt;a href="http://874.org.uk/"&gt;878.org.uk&lt;/a&gt; made me aware of another method of getting speech out of the Raspberry Pi.
His article &lt;a href="http://874.org.uk/speaking-weather-forecast-raspberry-pi.html"&gt;Getting your Raspberry Pi to speak the weather forecast&lt;/a&gt;
explains his very simple approach using Google Text to Speech service.
See below&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mplayer -ao alsa -really-quiet -noconsolecontrols &lt;span style="color: #CC3300"&gt;&amp;quot;http://translate.google.com/translate_tts?tl=en&amp;amp;q=Look Dave, I can see you&amp;#39;re really upset about this.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some day, Google will rule the world!&lt;/p&gt;</summary><category term="Raspberry Pi"></category><category term="Audio"></category></entry><entry><title>Getting Audio Out Working on the Raspberry Pi</title><link href="/posts/2012/Nov/15/getting-audio-out-working-on-the-raspberry-pi/" rel="alternate"></link><published>2012-11-15T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-11-15:posts/2012/Nov/15/getting-audio-out-working-on-the-raspberry-pi/</id><summary type="html">&lt;p&gt;I want to deliver sound from my Raspberry Pi's (RPi) Audio Output 3.5mm jack.  I'll need to get audio drivers working on Audio Out, and to test it, I'll need some sound files and players.  I'm choosing the &lt;a href="http://www.alsa-project.org/main/index.php/Main_Page"&gt;Advanced Linux Sound Architecture (ALSA)&lt;/a&gt; drivers because its widely supported and because &lt;a href="http://en.wikipedia.org/wiki/Advanced_Linux_Sound_Architecture"&gt;ALSA&lt;/a&gt; not only provides audio but  &lt;a href="http://en.wikipedia.org/wiki/Musical_Instrument_Digital_Interface"&gt;Musical Instrument Digital Interface (MIDI)&lt;/a&gt; functionality to Linux.   I'll also be using the popular command line MP3 players, &lt;a href="http://linux.die.net/man/1/mpg321"&gt;mpg321&lt;/a&gt; and the WAV player that comes with ALSA, &lt;a href="http://linux.die.net/man/1/aplay"&gt;aplay&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get things going, I installed ALSA, a MP3 tools, and a WAV to MP3 conversion tool via the following commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install alsa-utils
sudo apt-get install mpg321
sudo apt-get install lame
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Enabling the Sound Module&lt;/h2&gt;

&lt;p&gt;Reboot the RP and when it comes back up, its time to load the Sound Drivers.  This will be done via loadable kernel module (LKM) which are object file  that contains code to extend the Linux kernel.  &lt;code&gt;lsmod&lt;/code&gt; is a command on Linux systems which prints the contents of the &lt;code&gt;/proc/modules&lt;/code&gt; file.  It shows which loadable kernel modules are currently loaded.  In my case, &lt;code&gt;lsmod&lt;/code&gt; gives me:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/lsmod.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-706" title="lsmod" alt="lsmod" src="http://jeffskinnerbox.files.wordpress.com/2012/11/lsmod.jpg" width="545" height="284" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;snd-bcm2835&lt;/code&gt; module appears to be already installed. RPi has a Broadcom  &lt;a href="http://www.broadcom.com/products/BCM2835"&gt;BCM2835&lt;/a&gt; &lt;a href="http://www.androidauthority.com/how-it-works-systems-on-a-chip-soc-93587/"&gt;system on a chip (SoC)&lt;/a&gt; which is a High Definition 1080p Embedded Multimedia Applications Processor.  &lt;code&gt;snd-bcm2835&lt;/code&gt; is the sound driver.  If  &lt;code&gt;lsmod&lt;/code&gt; doesn't list the &lt;code&gt;snd-bcn2835&lt;/code&gt; module, then it can be installed via the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo modprobe snd-bcm2835
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Enabling Audio Output&lt;/h2&gt;

&lt;p&gt;By default, the RPi audio output is set to automatically select the digital HDMI interface if its being used, otherwise the analog audio output. You can force it to use a specific interface via the sound mixer controls.  &lt;a href="http://linux.die.net/man/1/amixer"&gt;&lt;code&gt;amixer&lt;/code&gt;&lt;/a&gt; allows command-line control of the mixer for the ALSA driver.&lt;/p&gt;
&lt;p&gt;You can force the RPi to use a specific interface using the command &lt;code&gt;amixer cset numid=3 N&lt;/code&gt; where the &lt;code&gt;N&lt;/code&gt; parameter means the following: 0=auto, 1=analog, 2=hdmi.  Therefore, to force the Raspberry Pi to use the analog output:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;amixer cset &lt;span style="color: #003333"&gt;numid&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;3&lt;/span&gt; 1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Sound Check&lt;/h2&gt;

&lt;p&gt;With this done, you should be ready for a simple test.  Plug a speaker into the (RPi) Audio Output 3.5mm jack.  I used a simple battery powered&lt;a href="http://www.ihomeaudio.com/iHM60GX/"&gt; iHM60 iHome&lt;/a&gt; speaker.  The jack will not deliver much power, so the speaker needs to be powered.&lt;/p&gt;
&lt;p&gt;To test the RPi audio, you can play a WAV file (&lt;a href="http://www.jahozafat.com/php/sounds/?id=gog&amp;amp;media=WAVS&amp;amp;type=Movies&amp;amp;movie=Full_Metal_Jacket&amp;amp;quote=numnuts.txt&amp;amp;file=numnuts.wav"&gt;download this&lt;/a&gt; ... excellent for user-error notification) with &lt;code&gt;&lt;a href="http://linux.die.net/man/1/aplay"&gt;aplay&lt;/a&gt;&lt;/code&gt;, &lt;a href="http://linux.die.net/man/1/mpg321"&gt;&lt;code&gt;mpg321&lt;/code&gt;&lt;/a&gt; for MP3 files, or use the &lt;a href="http://linux.die.net/man/1/speaker-test"&gt;&lt;code&gt;speaker-test&lt;/code&gt;&lt;/a&gt; command if you don't have a WAV/MP3 file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;aplay numnuts.wav
speaker-test -t sine -f &lt;span style="color: #FF6600"&gt;440&lt;/span&gt; -c &lt;span style="color: #FF6600"&gt;2&lt;/span&gt; -s 1
mpg321 &lt;span style="color: #CC3300"&gt;&amp;quot;Mannish Boy.mp3&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;More on the ALSA Sound Drivers and Utilities&lt;/h2&gt;

&lt;p&gt;While ALSA is a powerful tool, it documentation appears is very weak.  Also, it appears that the capabilities of ALSA drivers and utilities are very  dependent on the hardware used.  The best sources of documentation that I found include &lt;a href="http://www.alsa-project.org/main/index.php/Main_Page"&gt;Advanced Linux Sound Architecture (ALSA) project homepage&lt;/a&gt;,  &lt;a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture"&gt;archlinux Advanced Linux Sound Architecture&lt;/a&gt;, and &lt;a href="http://www.tldp.org/HOWTO/Alsa-sound.html"&gt;ALSA-sound-mini-HOWTO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find useful information in the directory /proc, which is a "virtual" file system (meaning that it does not exist in real life, but merely is a mapping to various processes and tasks in your computer).
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;/proc/modules&lt;/code&gt; gives information about loaded kernel modules.  The command &lt;code&gt;lsmod | grep snd&lt;/code&gt; will list modules relevant to the sound system.&lt;/li&gt;
    &lt;li&gt;You can check the existence of a soundcard by looking  at &lt;code&gt;cat /proc/asound/cards&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The &lt;code&gt;amixer&lt;/code&gt; command can provide useful information (sometimes):
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;You can look at the mixer settings by typing &lt;code&gt;amixer&lt;/code&gt; without any arguments. This command lists the mixer settings of the various parts of the soundcard. The output from &lt;code&gt;amixer&lt;/code&gt; can greatly differ from card to card. Unfortunately  you can't find much documentation on how to interpret the out.&lt;/li&gt;
    &lt;li&gt;The RPi doesn't have a "Master" control only "PCM".  So commands like &lt;code&gt;amixer set Master...&lt;/code&gt; will not work.  You must use &lt;code&gt;amixer set PCM ...&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;You can mute /unmute the sound via these commands: &lt;code&gt;amixer set PCM mute&lt;/code&gt; and &lt;code&gt;amixer set PCM unmute&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;As of August 2012, there appears to be a &lt;a href="http://raspberrypi.stackexchange.com/questions/1268/alsa-volume-ignored-when-beginning-playback"&gt;known bug&lt;/a&gt; in RPi ALSA driver that ignores volume settings at the start of playback and always plays at max volume.  Therefore, commands like &lt;code&gt;amixer set PCM 50% unmute&lt;/code&gt; will &lt;span style="text-decoration:underline;"&gt;not&lt;/span&gt; set the volume to 50%, at least until this bug is fixed.  Maybe this isn't really a bug but a limitation of the hardware because there is a workaround for this .... see below.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Volume Control&lt;/h2&gt;
The RPi built-in sound chips don't have a "master volume" control, and as a result, you must control the volume via software.  I guess the RPi views itself as a preamplifier (preamp) and volume controls would be supplied down stream.  ALSA provides a software volume control using the &lt;a title="Softvol" href="http://alsa.opensrc.org/Softvol"&gt;softvol&lt;/a&gt; plugin.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/etc/asound.conf&lt;/code&gt; file is a configuration files for ALSA drivers (system-wide).  The main use of this configuration file is to add functionality. It allows you to create "virtual devices" that pre or post-process audio streams. Any properly written ALSA program can use these virtual devices as though they were normal devices.  My RPi  &lt;code&gt;/etc/asound.conf&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/orginal-asound-conf.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-746" title="orginal asound.conf" alt="asound conf" src="http://jeffskinnerbox.files.wordpress.com/2012/11/orginal-asound-conf.jpg" width="545" height="223" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;For most changes to &lt;code&gt;/etc/asound.conf&lt;/code&gt; you will need to restart the sound server for the changes to take effect.
You can do this via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/alsa-utils restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I attempted to implement the software volume controls outline in a &lt;a href="http://www.gentoo-wiki.info/HOWTO_Softvol"&gt;softvol how-to&lt;/a&gt; that I found, but I couldn't get it to work.  I did some additional digging, and I found a solution buried within a python script for a &lt;a href="http://learn.adafruit.com/reading-a-analog-in-and-controlling-audio-volume-with-the-raspberry-pi/overview"&gt;Adafruit project&lt;/a&gt;.  The following works for controlling the volume (in this case, reducing the volume to 80% of maximum):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;amixer cset numid=1 -- 80%
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that you can use this command to change the volume while sound is being played an its effect takes place immediately.  Also, I noticed that once the volume has been adjusted, its effect remains even after a reboot.
&lt;h2&gt;WAV and MP3 Conversion&lt;/h2&gt;
The MP3 player &lt;a href="http://linux.die.net/man/1/mpg321"&gt;&lt;code&gt;mpg321&lt;/code&gt;&lt;/a&gt; can convert MP3 files to WAV files but the WAV player, &lt;a href="http://linux.die.net/man/1/aplay"&gt;&lt;code&gt;aplay&lt;/code&gt;&lt;/a&gt;, can not do a conversion.  To make a MP3 file from a WAV file, you'll need the tool &lt;a href="http://linux.die.net/man/1/lame"&gt;&lt;code&gt;lame&lt;/code&gt;&lt;/a&gt;.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;To convert from WAV to MP3: &lt;code&gt;lame input.wav output.mp3&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;To convert from MP3 to WAV:  &lt;code&gt;mpg321 -w output.wav input.mp3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Bottomeline&lt;/h2&gt;
While you can get ALSA working on the Raspberry Pi, it appears only partly supported, maybe buggy, and poorly documented.  If you just want to simply get sound out of the device (like I do), you'll be fine.  But if you have some desire to do some sound processing with ALSA, your likely to be very frustrated.
&lt;h2&gt;Epilogue&lt;/h2&gt;
This specific post has gotten about 25% of all the viewings of my blog. I'm not sure why this is the case but I speculate that there are many people tying to make RPi into a Media Player and looking for answers to their technical problems.&lt;/p&gt;
&lt;p&gt;At this point in time, others have done some additional postings and they are more instructive than my post. You should check out:
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://blog.scphillips.com/2013/01/sound-configuration-on-raspberry-pi-with-alsa/"&gt;Sound configuration on Raspberry Pi with ALSA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</summary><category term="Linux"></category><category term="Raspberry Pi"></category></entry><entry><title>Dropbox for the Raspberry Pi (sort of)</title><link href="/posts/2012/Nov/11/dropbox-for-the-raspberry-pi-sort-of/" rel="alternate"></link><published>2012-11-11T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-11-11:posts/2012/Nov/11/dropbox-for-the-raspberry-pi-sort-of/</id><summary type="html">&lt;p&gt;I'm presently using &lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt; as a service for quick &amp;amp; easy movement of files between multiple PCs I use.  Its copy &amp;amp; paste operation is very intuitive on a Windows PC. I would like the same on the Raspberry Pi (RPi), particularly for moving files from my PC to the RPi.  I wanted the same utility on my RPi, but at the same time, I want the Linux command line paradigm supported and not be force to run X Windows on the RPi.&lt;/p&gt;
&lt;p&gt;I did some searching and found things like &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox's Linux distribution&lt;/a&gt; (which I wasn't confident would work "out of the box" for the RPi's ARM architecture, but source is provided),  &lt;a href="http://www.lifehacker.com.au/2011/07/how-to-set-up-a-file-syncing-dropbox-clone-you-control/"&gt;GoodSync&lt;/a&gt; or &lt;a href="http://hm-innovations.com/2012/10/29/best-way-to-use-raspberry-pi-and-turn-it-into-a-dropbox/"&gt;Owncloud&lt;/a&gt; (which wouldn't access my existing Dropbox files but instead create an alternative), &lt;a href="http://raspberrypigadget.wordpress.com/2012/07/01/day-six-dropbox-access/"&gt;python&lt;/a&gt; or  &lt;a href="http://harizanov.com/2012/08/dropbox-shell-script-for-raspberrypi/"&gt;bash shell&lt;/a&gt; based up/down loaders (appears to behave like a simplified FTP tool), or the &lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;Secure SHell File System (SSHFS)&lt;/a&gt; based approach (the PC's Dropbox directory is mounted on the RPi).&lt;/p&gt;
&lt;p&gt;While the &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox's Linux distribution&lt;/a&gt; is likely the ultimate way to go, I didn't want to commit myself to the effort it would potentially require.  I settled on the SSHFS based approach.  I'm running my &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;RPi headless&lt;/a&gt; and access it via my PC using &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt; and &lt;a href="http://www.openssh.org/"&gt;Secure Shell (ssh)&lt;/a&gt;.  With the SSHFS approach, I could make the Dropbox directory available for mounting at boot-up or mount it at will.  I only envision using the RPi-based Dropbox when I'm doing development and I will be doing that from my PC.  So this SSHFS approach seems fine for the way that I operate.&lt;/p&gt;
&lt;p&gt;The SSHFS approach means files will not really be replicated on the RPi, like Dropbox does.  The files will reside within my PC's Dropbox folder (and replicated on my other PCs via the Dropbox service) but accessible by the RPi via the SSHFS file mount.  This means I can't have any applications I run on the RPi depend on files located in its Dropbox directory since it may not be always mounted.  I'm OK with this limitation, and in fact is consistent with the ad-hoc purpose I have for the Dropbox directory.
&lt;h2&gt;Installation Required on the PC&lt;/h2&gt;
For me, nothing needs to be done here.  I already have Dropbox running on my PC, and via Cygwin/X, I have the foundations required for the host side of the SSHFS solution.  If you need help with this, &lt;a href="http://db.tt/WG4dR9shttp://db.tt/WG4dR9s"&gt;signup for Dropbox here&lt;/a&gt; and find out&lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt; how I'm using Cygwin/X here&lt;/a&gt;.
&lt;h2&gt;Installation Required on the RPi&lt;/h2&gt;
On the client side of the solution, you'll need to install &lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;SSHFS&lt;/a&gt; and &lt;a href="http://fuse.sourceforge.net/"&gt;FUSE&lt;/a&gt;. FUSE is the user-space filesystem framework and is the foundation on which SSHFS resides. FUSE allows user-space software, SSH in this case, to present a virtual file system interface to the user; something generally only done by the Linux kernel.  SSHFS connects to the remote system and provide the look and feel of a regular file system interface for remote files. On the RPi, install SSHFS via the command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install sshfs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;FUSE appear to be already installed on the RPi or maybe comes with SSHFS. Next you need to add required users to the FUSE usergroup.  In my case, that is the user pi.  You can see the existing groups pi is part of via the command &lt;code&gt;groups pi&lt;/code&gt;.  You can validate that the FUSE user group has been created by using the command &lt;code&gt;cat /etc/group | grep fuse&lt;/code&gt;.  To add pi to the FUSE user group, use the command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo gpasswd -a pi fuse
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The fuse group lets you limit which users are allowed to use FUSE-based file systems, in my case the Dropbox. This is important because FUSE installs &lt;a href="http://www.acm.uiuc.edu/workshops/security/setuid.html"&gt;setuid programs&lt;/a&gt;, which always carry security implications.
&lt;h2&gt;Configuring the Dropbox File System&lt;/h2&gt;
Now its time to make your Dropbox directory on the RPi, and mount it to the PC's instance of Dropbox. On the RPi, use this command to create the Dropbox:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mkdir ~/Dropbox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next thing to do is to make sure that you can connect to the PC via ssh.  When I installed Cygwin, my focus was on using it as an X Server and making ssh connections from the PC to RPi.  I never tried the inverse (connect from the RPi to the PC) and that is what SSHFS is effectively doing.  So check for two things:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Is the ssh server running on the PC?  You can check for its status via the command &lt;code&gt;cygrunsrv -Q sshd&lt;/code&gt;. In my case it was running, so its fine.&lt;/li&gt;
    &lt;li&gt;Is the port used by the ssh server on the PC open? You'll need to &lt;a href="http://lifehacker.com/205090/geek-to-live--set-up-a-personal-home-ssh-server"&gt;open SSH port 22&lt;/a&gt; for ssh services to work.  You can check its status by attempting to use it.  In my case, this was &lt;code&gt;ssh Jeff@HomePC.home&lt;/code&gt;.  If this command appears to hang or time out (as it did for me), the port is likely blocked.  You'll need to go to your &lt;a href="http://www.dummies.com/how-to/content/how-to-open-a-port-in-the-windows-7-firewall.html"&gt;Windows Firewall&lt;/a&gt; and open port 22.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
There is another Cygwin sublimity that has to be taken into consideration.  When using the Cygwin, Windows drive letters are mapped to a &lt;a href="http://znark.com/tech/cygwin.html"&gt;special directory&lt;/a&gt;.  In my case, the Dropbox directory appears to Cygwin to have the following path: &lt;code&gt;/cygdrive/c/Users/Jeff/Dropbox&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With this all addressed, &lt;span style="text-decoration:underline;"&gt;reboot the RPi&lt;/span&gt;, and then you can now fire up you RPi Dropbox via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sshfs Jeff@HomePC.home:/cygdrive/c/Users/Jeff/Dropbox ~/Dropbox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After you supply the PC's password, you should now be able to access the Dropbox directory on the PC.  If you wish, you can remove the file system connection to the PC via the command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;fusermount -u ~/Dropbox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This connection will stay established as long as you don't do the &lt;code&gt;fusermount -u&lt;/code&gt; or reboot the RPi.  If you wish to mount the file system upon boot-up, and avoid executing the &lt;code&gt;sshfs&lt;/code&gt; when you log-in, you can follow the procedure outline in the article that initially inspired me: &lt;a href="http://mitchtech.net/dropbox-on-raspberry-pi-via-sshfs/"&gt;Dropbox on Raspberry Pi via SSHFS&lt;/a&gt;
&lt;h2&gt;Something to Keep in Mind&lt;/h2&gt;
While for the most part, moving between Windows/DOS and the Linux file systems isn't a problem, there is one thing to remember. Windows-based text editors put one set of special characters at the end of lines (i.e. carriage return and line break = '\r\n'), while Unix/Linux puts other characters (i.e. line break = '\n').  This &lt;a href="http://www.codinghorror.com/blog/2010/01/the-great-newline-schism.html"&gt;odd anomaly&lt;/a&gt; is normally harmless, but some applications on a Linux cannot understand these characters and can cause Linux to not respond correctly.&lt;/p&gt;
&lt;p&gt;The best example of Linux behaving badly (and the only one I know) is the execution of “&lt;a href="http://bash.cyberciti.biz/guide/Shebang"&gt;shebang&lt;/a&gt;” or the “#!...” at the top of a bash, python, perl, etc. script.  If you edit these files in DOS, then move them to Linux, shebang will stop working.  Editing them under DOS is the origin of the problem, since a DOS based text editor will inject the extra carriage return character at the end of the text line.&lt;/p&gt;
&lt;p&gt;To fix this problem, you can quickly convert an ASCII text file from DOS format (carriage return and line break) to the Unix format (line break), you can use the tool &lt;a href="http://linux.die.net/man/1/dos2unix"&gt;&lt;code&gt;dos2unix&lt;/code&gt;&lt;/a&gt;.  Run this utility on the effected file and shebang should work once again.
&lt;h2&gt;Epilogue&lt;/h2&gt;
At its foundation, SSH functions as a protocol for authenticating and encrypting remote shell sessions.  SSH can be thought of as much more than just a secure shell.  Using SSH's foundation, SSHFS creates a new capability.  To learn more, check out the link &lt;a href="http://matt.might.net/articles/ssh-hacks/"&gt;SSH: More than secure shell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Key sources I consulted to write this include:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.linuxjournal.com/article/8904?page=0,0"&gt;SSHFS: Super Easy File Access over SSH&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mitchtech.net/dropbox-on-raspberry-pi-via-sshfs/"&gt;Dropbox on Raspberry Pi via SSHFS&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.debianadmin.com/mount-a-remote-file-system-through-ssh-using-sshfs.html"&gt;Mount a remote file system through ssh Using sshfs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</summary><category term="Linux"></category><category term="Raspberry Pi"></category><category term="Dropbox"></category></entry><entry><title>SendEmail as a Messaging Tool for the Raspberry Pi</title><link href="/posts/2012/Nov/10/sendemail-as-a-messaging-tool-for-the-raspberry-pi/" rel="alternate"></link><published>2012-11-10T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-11-10:posts/2012/Nov/10/sendemail-as-a-messaging-tool-for-the-raspberry-pi/</id><summary type="html">&lt;p&gt;In the projects I envision for the future, I'll be using my Raspberry Pi (RPi) as a gateway/server/controller for several other devices.  There is likely to be a need to generate status reports/messages and mail them out. It could be as simple as a notification that the deck lights have been turned-on. I don't need a full fledged mail client on the RPi to receive mail or manage a mailbox, just a command line utility to send email.  Also, I would like to send short text messages via (&lt;a href="http://en.wikipedia.org/wiki/Short_Message_Service"&gt;SMS&lt;/a&gt;) to my cell phone.  Linux does have a nice solution for this.&lt;/p&gt;
&lt;p&gt;You do need an established email account with some email provider. I want to keep my personal email and my RPi's email separate  so I setup a special email account on gmail.  This will be used only by my Raspberry Pi's (or other intelligent devices). There &lt;a href="http://www.e-eeasy.com/SMTPServerList.aspx"&gt;exist&lt;/a&gt; some &lt;a href="http://searchnetworking.techtarget.com/definition/open-relay"&gt;open SMTP relay&lt;/a&gt; mail servers (mail servers that will not require a login nor a password) but many open mail relays have become unpopular and closed due to their exploitation by spammers and worms.
&lt;h2&gt;SendEmail&lt;/h2&gt;
&lt;a href="http://www.debianadmin.com/how-to-sendemail-from-the-command-line-using-a-gmail-account-and-others.html#more-706"&gt;SendEmail&lt;/a&gt; is a lightweight, completely command line based, &lt;a href="http://computer.howstuffworks.com/e-mail-messaging/email3.htm"&gt;SMTP email agent&lt;/a&gt;. It is written in Perl and designed to be used on the command line, in bash scripts, Perl programs, within web sites, etc.&lt;/p&gt;
&lt;p&gt;I installed SendEmail on my RPi via this command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install sendemail
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Testing sendEmail&lt;/h2&gt;

&lt;p&gt;When I ran sendEmail the first time, it complained about some missing libraries.  I installed the missing libraries and this cleared the error.  Clearly, the sendEmail package needs some work since this dependency should have been taken care of by &lt;code&gt;apt-get&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I ran it again using this command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sendEmail -f pi@RedRPi -t &amp;lt;my_user_name&amp;gt;@verzion.net -u &lt;span style="color: #CC3300"&gt;&amp;quot;Test Email from RedRPi&amp;quot;&lt;/span&gt; -m &lt;span style="color: #CC3300"&gt;&amp;quot;My test message.&amp;quot;&lt;/span&gt; -s smtp.gmail.com:587  -o &lt;span style="color: #003333"&gt;tls&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;yes -xu &amp;lt;my_user_name&amp;gt; -xp &amp;lt;my_password&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this, sendEmail threw an error message:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;invalid SSL_version specified at /usr/share/perl5/IO/Socket/SSL.pm line 332
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I did a web search and found that this is a reported bug within sendEmail (bummer), but I also found a simple &lt;a href="http://unix.stackexchange.com/questions/53065/invalid-ssl-version-specified-at-usr-share-perl5-io-socket-ssl-pm-line-332"&gt;patch&lt;/a&gt; for the problem (lucky break).  I applied the fix, executed the command again, and succeeded in sending the email.&lt;/p&gt;
&lt;p&gt;One of the key parameter used here is the &lt;a href="http://en.wikipedia.org/wiki/SMTP"&gt;SMTP&lt;/a&gt; &lt;a href="http://www.xeams.com/smtprelay.htm"&gt;mail relay&lt;/a&gt; specified in  "&lt;code&gt;-s smtp.gmail.com:587&lt;/code&gt;".  In this case, Gmail uses port 587 for relay email.  The default port to use is 25 but not all email servers use this port.&lt;/p&gt;
&lt;p&gt;Another key parameter is "&lt;code&gt;-o tls=yes&lt;/code&gt;". This specifies that the &lt;a href="http://en.wikipedia.org/wiki/Transport_Layer_Security"&gt;Transport Layer Security (TLS)&lt;/a&gt; protocol will be used to provide communication security over the Internet.  This is important since your including a plain-text password in the command.&lt;sup id="cite_ref-1"&gt;&lt;/sup&gt;
&lt;h2&gt;SMS Messaging&lt;/h2&gt;
Another messaging mechanism that I plan to use is Short Message Service (SMS).  To do this, you can use a &lt;a href="http://en.wikipedia.org/wiki/SMS_gateway"&gt;SMS gateway&lt;/a&gt; which will transform an email into an SMS message.  The down side is that there isn't a single gateway but &lt;a href="http://en.wikipedia.org/wiki/List_of_SMS_gateways"&gt;one for each of the cellular carries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for AT&amp;amp;T cell phones:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sendEmail -f pi@RedRPi -t &amp;lt;cell_phone_number&amp;gt;@txt.att.net -u &lt;span style="color: #CC3300"&gt;&amp;quot;Test Email from RedRPi&amp;quot;&lt;/span&gt; -m &lt;span style="color: #CC3300"&gt;&amp;quot;My test message.&amp;quot;&lt;/span&gt; -s smtp.gmail.com:587  -o &lt;span style="color: #003333"&gt;tls&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;yes -xu &amp;lt;my_user_name&amp;gt; -xp &amp;lt;my_password&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Raspberry Pi"></category></entry><entry><title>WiFi (with WEP Security) on Raspberry Pi</title><link href="/posts/2012/Nov/05/wifi-with-wep-security-on-raspberry-pi/" rel="alternate"></link><published>2012-11-05T00:01:00-05:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-11-05:posts/2012/Nov/05/wifi-with-wep-security-on-raspberry-pi/</id><summary type="html">&lt;p&gt;The Raspberry Pi Linux distribution I'm using is Adafruit's &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-2"&gt;Occidentalis&lt;/a&gt;.  It &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#wifi-support"&gt;supports WiFi&lt;/a&gt; out of the box and appears easy to configure.  But as noted by Adafruit, adding peripherals to the RPi may increase the loading on the power supply to your board and this, in turn, may affect the voltage presented to the RPi.&lt;/p&gt;

&lt;p&gt;This is clearly the case, even for the tiny  OURlink WiFi (802.11b/g/n) USB Adapter (uses the &lt;a href="http://www.realtek.com/products/productsView.aspx?Langid=2&amp;amp;PNid=21&amp;amp;PFid=48&amp;amp;Level=5&amp;amp;Conn=4&amp;amp;ProdID=277"&gt;RTl8192cu chip&lt;/a&gt; which is &lt;a href="http://wiki.debian.org/rtl819x"&gt;supported by Debian Linux&lt;/a&gt;) I purchased from &lt;a href="http://www.adafruit.com/products/814"&gt;Adafruit&lt;/a&gt;.  When I plugged it into the RPi, it became unstable and crashed.  Adafruit advises that you can over come this by attach the RPi's USB port to a powered hub.  (Note that all USB hubs aren't powered or powered sufficient, and therefore, not all are  &lt;a href="http://elinux.org/RPi_VerifiedPeripherals"&gt;recommended&lt;/a&gt;.  I used a Dynex 4 Port Hub with a 5V 2.1A power adapter and all seem fine.)  If you find using a using a USB hub completely unacceptable, you could make some &lt;a href="http://theiopage.blogspot.com.au/2012/06/increasing-raspberry-pis-usb-host.html"&gt;RPi board modifications&lt;/a&gt; to the &lt;a href="http://elinux.org/Polyfuses_explained"&gt;polyfuses&lt;/a&gt;, but this isn't the "official/supported" approach for this power problem .... but first .... see the &lt;strong&gt;Epilogue No. 1&lt;/strong&gt; below.&lt;/p&gt;

&lt;p&gt;I eventually got around to moving away from WEP to WPA2.
See &lt;strong&gt;Epilogue No. 2&lt;/strong&gt; at the end of this page.
To make things even more exciting,
I changed the WiFi adapter to one that didn't have a currently installed drive on the RPi.
See &lt;strong&gt;Epilogue No. 3&lt;/strong&gt; for the solution to this dilemma.&lt;/p&gt;
&lt;h2&gt;My First Attempt (Unsuccessful)&lt;/h2&gt;

&lt;p&gt;Once I got the RPi USB port properly powered, I followed the Adafruit's &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#wifi-support"&gt;instructions&lt;/a&gt;.  I updated the&lt;code&gt;/etc/network/interfaces&lt;/code&gt; file with the following:&lt;/p&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;########## DID NOT WORK FOR ME ##########&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# The loopback network interface&lt;/span&gt;
auto lo
iface lo inet loopback

&lt;span style="color: #0099FF; font-style: italic"&gt;# The primary (wired) network interface&lt;/span&gt;
iface eth0 inet dhcp

&lt;span style="color: #0099FF; font-style: italic"&gt;# The wifi (wireless) network interface&lt;/span&gt;
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
      wpa-ssid YOUR_SSID
      wpa-psk YOUR_WEP_KEY
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I ran  &lt;code&gt;ifconfig -a&lt;/code&gt; and got the following:&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a.jpg"&gt;&lt;img class="aligncenter size-full wp-image-574" title="ifconfig -a" alt="ifconfig" src="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a.jpg" width="545" height="311" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;p&gt;This tells me that Linux sees the WiFi device and assigned it device name &lt;code&gt;wlan0&lt;/code&gt;. It also says there isn't an IP address assigned and no data is moving.  Appears that network interface &lt;code&gt;wlan0&lt;/code&gt; isn't running so I tried bring it up with &lt;code&gt;sudo ifup wlan0&lt;/code&gt; and I got the following:&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/ifup-wlan0.jpg"&gt;&lt;img class="aligncenter size-full wp-image-576" title="ifup wlan0" alt="wlan0" src="http://jeffskinnerbox.files.wordpress.com/2012/11/ifup-wlan0.jpg" width="545" height="311" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;p&gt;No IP assigned ... now what?&lt;/p&gt;

&lt;h2&gt;This Worked ... But&lt;/h2&gt;

&lt;p&gt;After the typical thrashing about, it came to me that I'm not using WAP security (which is implied by the&lt;code&gt;/etc/network/interfaces&lt;/code&gt; file content) but I'm using WEP.  I did some web searching and found a site that claimed to address &lt;a href="http://www.gc-linux.org/wiki/WL:Wifi_Configuration"&gt;Debian WiFi WEP configuration&lt;/a&gt;.  This provided me the needed command syntax for the solution.   I updated the&lt;code&gt;/etc/network/interfaces&lt;/code&gt; file with the following:&lt;/p&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# The loopback network interface&lt;/span&gt;
auto lo
iface lo inet loopback

&lt;span style="color: #0099FF; font-style: italic"&gt;# The primary (wired) network interface&lt;/span&gt;
iface eth0 inet dhcp

&lt;span style="color: #0099FF; font-style: italic"&gt;# The wifi (wireless) network interface&lt;/span&gt;
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
       wireless-essid YOUR_SSID
       wireless-key YOUR_WEP_KEY
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I then ran &lt;code&gt;sudo ifup wlan0&lt;/code&gt; to start the wireless networking (Note: you can use &lt;code&gt;sudo ifdown wlan0&lt;/code&gt; to turn-off the wireless network).  This time DHCP discovery appeared to work.  I then ran &lt;code&gt;ifconfig -a&lt;/code&gt; giving me the display below with an assigned wireless IP.&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a-this-time-it-worked.jpg"&gt;&lt;img class="aligncenter size-full wp-image-585" title="ifconfig -a (this time it worked)" alt="it worked" src="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a-this-time-it-worked.jpg" width="545" height="322" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;p&gt;The wireless device now has an IP address and data seems to be flowing.  In an effort to further convince myself that the WiFi was working, I disconnected the wired ethernet connection and attempted to re-login in via &lt;code&gt;ssh -X pi@RedRPi.local&lt;/code&gt;, over the wireless interface. This failed, giving the message:&lt;/p&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;ssh: Could not resolve hostname RedRPi.local: hostname nor servname provided, or not known
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Working For Sure&lt;/h2&gt;

&lt;p&gt;I suspected (after more thrashing about) it was Ssh or &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#bonjour-support"&gt;Avahi/Bonjour&lt;/a&gt; or both that was getting in the way.  So I did the following:&lt;/p&gt;

&lt;ol&gt;&lt;ol&gt;&lt;li&gt;I cleaned out the &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file on the PC from which I'm accessing the RPi (I'm using Cygwin with Openssh). With the entries in the file removed  ssh keys would need to be recreated on next login.&lt;/li&gt;&lt;li&gt;I then logged into the RPi in via &lt;code&gt;ssh -X pi@RedRPi.local.&lt;/code&gt; The login created an entry the &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file on the PC.&lt;/li&gt;&lt;li&gt;Using vi, I edited the  &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file.  I duplicated the one existing record but changed the  IP address to the wireless address.&lt;/li&gt;&lt;li&gt;I restarted the openssh on the PC.  (I terminated all the Cygwin window and restarted them.  I could get anything else to work short of a PC reboot).&lt;/li&gt;&lt;li&gt;I then logged in using &lt;code&gt;ssh -X pi@192.168.1.7&lt;/code&gt;. Now I'm wireless!!&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;

&lt;p&gt;My &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file looks like this:&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/known_hosts.jpg"&gt;&lt;img class="aligncenter size-full wp-image-594" title="known_hosts" alt="known hosts" src="http://jeffskinnerbox.files.wordpress.com/2012/11/known_hosts.jpg" width="545" height="300" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;h2&gt;Epilogue No. 1&lt;/h2&gt;

&lt;p&gt;I have found that if  I don't use a USB  powered hub and I plug in the OURlink WiFi (802.11b/g/n) USB Adapter while the RPi is up and running, the RPi will crash.  The good news is that, once the RPi reboots, it runs fine without the powered hub.&lt;/p&gt;

&lt;p&gt;So, go ahead and use the WiFi USB Adapter, without the powered hub, but make sure the adapter is plugged in when you boot up .... problem solved!&lt;/p&gt;

&lt;h2&gt;Epilogue No. 2&lt;/h2&gt;
&lt;p&gt;I eventually got around to improving the security on my WiFi network by moving to WPA2.
This is a vast improvement over WEP, but &lt;a href="http://phys.org/news/2014-03-wpa2-wireless.html"&gt;not completely unbreakable&lt;/a&gt;.
I followed the procedures outline in &lt;a href="http://www.howtogeek.com/167425/how-to-setup-wi-fi-on-your-raspberry-pi-via-the-command-line/"&gt;How to Setup Wi-Fi On Your Raspberry Pi via the Command Line&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The results are these two files: &lt;code&gt;/etc/network/interfaces&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# The loopback network interface&lt;/span&gt;
auto lo
iface lo inet loopback

&lt;span style="color: #0099FF; font-style: italic"&gt;# The primary (wired) network interface&lt;/span&gt;
iface eth0 inet dhcp

&lt;span style="color: #0099FF; font-style: italic"&gt;# The wifi (wireless) network interface for WPA2&lt;/span&gt;
allow-hotplug wlan0
iface wlan0 inet dhcp
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
iface default inet dhcp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the file &lt;code&gt;/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt; &lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #003333"&gt;ctrl_interface&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #003333"&gt;DIR&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;/var/run/wpa_supplicant &lt;span style="color: #003333"&gt;GROUP&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;netdev
&lt;span style="color: #003333"&gt;update_config&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;1

&lt;span style="color: #003333"&gt;network&lt;/span&gt;&lt;span style="color: #555555"&gt;={&lt;/span&gt;
&lt;span style="color: #003333"&gt;ssid&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;YOUR_SSID&amp;quot;&lt;/span&gt;
&lt;span style="color: #003333"&gt;psk&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;YOUR_WEP_KEY&amp;quot;&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt;# Protocol type can be: RSN (for WP2) and WPA (for WPA1)&lt;/span&gt;
&lt;span style="color: #003333"&gt;proto&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;RSN

&lt;span style="color: #0099FF; font-style: italic"&gt;# Key management type can be: WPA-PSK or WPA-EAP (Pre-Shared or Enterprise)&lt;/span&gt;
&lt;span style="color: #003333"&gt;key_mgmt&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;WPA-PSK

&lt;span style="color: #0099FF; font-style: italic"&gt;# Pairwise can be CCMP or TKIP (for WPA2 or WPA1)&lt;/span&gt;
&lt;span style="color: #003333"&gt;pairwise&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;CCMP

&lt;span style="color: #0099FF; font-style: italic"&gt;#Authorization option should be OPEN for both WPA1/WPA2 (in less commonly used are SHARED and LEAP)&lt;/span&gt;
&lt;span style="color: #003333"&gt;auth_alg&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;OPEN
&lt;span style="color: #555555"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get it running, execute the commands &lt;code&gt;sudo ifdown wlan0&lt;/code&gt; then &lt;code&gt;sudo ifup wlan0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To create the Hex version of the &lt;code&gt;psk&lt;/code&gt; key from an ASCII passphrase,
your can use the &lt;a href="http://linux.die.net/man/8/wpa_passphrase"&gt;&lt;code&gt;wpa_passphrase&lt;/code&gt;&lt;/a&gt; &lt;a href="http://programmaticponderings.wordpress.com/2012/12/25/installing-a-miniature-wifi-module-on-the-raspberry-pi/"&gt;documented here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Epilogue No. 3&lt;/h2&gt;
&lt;p&gt;I had to swap out my OURlink WiFi (802.11b/g/n) USB adapter on the RPi for a new one
and suddenly WiFi stopped working.
This seem strange, since it was the same manufacture.
I discovered, via the &lt;a href="http://linux.die.net/man/8/lsusb"&gt;&lt;code&gt;lsusb&lt;/code&gt;&lt;/a&gt; command, that the USB ID had changed for the adapter.
This could imply that the chip set inside the adapter is also different.&lt;/p&gt;
&lt;p&gt;After much research, I discovered that the device drive had changed.
I found the procedures for the fix in &lt;a href="http://www.mendrugox.net/2013/08/tp-link-tl-wn725n-v2-working-on-raspberry-raspbian/"&gt;this article&lt;/a&gt;
and downloaded the new compiled module driver for the kernel
along with its companion firmware file, 
and added the module to the kernel.&lt;/p&gt;
&lt;p&gt;At that point, the WiFi adapter could be sensed by &lt;a href="http://www.computerhope.com/unix/uifconfi.htm"&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/a&gt;
but I still couldn't get it to work.
A looked into the &lt;code&gt;/etc/udev/rules.d/70-persistent-net.rules&lt;/code&gt; file for &lt;a href="http://en.wikipedia.org/wiki/Udev"&gt;udev rules&lt;/a&gt;,
and this showe that the adapter was assigned a new name.
I reflected this new name in the &lt;code&gt;/etc/network/interfaces&lt;/code&gt; file,
and then everything worked fine.&lt;/p&gt;</summary><category term="Raspberry Pi"></category><category term="WiFi"></category></entry><entry><title>Conky for the Raspberry Pi</title><link href="/posts/2012/Nov/02/conky-for-the-raspberry-pi/" rel="alternate"></link><published>2012-11-02T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-11-02:posts/2012/Nov/02/conky-for-the-raspberry-pi/</id><summary type="html">&lt;p&gt;&lt;a href="/images/conky-window.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Conky Window" src="/images/conky-window.jpg" width="77" height="300" /&gt;
&lt;/a&gt;
&lt;a href="http://conky.sourceforge.net/"&gt;Conky&lt;/a&gt;  is a Linux system monitor tool using X Windows.  Conky is highly configurable and is able to monitor many system variables including the status of the CPU, memory, swap space, disk storage, temperatures, processes, network interfaces, battery power, system messages, e-mail in-boxes  Linux updates, runs many popular music players, and much more. Unlike system monitors that use high-level widget tool-kits to render their information, Conky is drawn directly in an X window, allowing it to consume relatively fewer system resources.&lt;/p&gt;
&lt;p&gt;To install the standard Conky package, use the following:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install conky-std&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Two sites you will want to read, beyond the &lt;a href="http://conky.sourceforge.net/docs.html"&gt;Conky manual page&lt;/a&gt; are the lists of &lt;a href="http://conky.sourceforge.net/config_settings.html"&gt;Config Settings&lt;/a&gt; and &lt;a href="http://conky.sourceforge.net/variables.html"&gt;Variables&lt;/a&gt;. You use the Config Settings to describe general features of how you want your Conky to appear, and the variables to define what actually gets displayed.&lt;/p&gt;
&lt;p&gt;The color names that are used within Conky are the X11 colors located in &lt;code&gt;/usr/share/X11/rgb.txt&lt;/code&gt;.  There isn't a standard set of colors to be found on any X Window system, so you'll need to inspect this file to get some idea of what color names you can use.  This &lt;a href="http://www.kgym.jp/freesoft/xrgb.html"&gt;X color name list&lt;/a&gt;, which appears to be larger than what is in the RPi's &lt;code&gt;rgb.txt&lt;/code&gt; file, could help you visualized the colors.&lt;/p&gt;
&lt;p&gt;Conky uses a configuration file location in &lt;code&gt;$HOME/.conkyrc&lt;/code&gt;.  Conky can be configured in an amazing number of way but I'm using the following configuration on the RPi:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6603187.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2&gt;Debugging Conky&lt;/h2&gt;

&lt;p&gt;An easy way to force Conky to reload your &lt;code&gt;~/.conkyrc&lt;/code&gt; configuration file is to us the command &lt;code&gt;killall -SIGUSR1 conky&lt;/code&gt;. This saves you the trouble of having to kill and then restart.  I also discovered that  while conky is running and your concurrently editing the &lt;code&gt;.conkyrc&lt;/code&gt; file in vi, saving the file appears to cause conky to restart and read the new &lt;code&gt;.conkyrc&lt;/code&gt; ... nice.&lt;/p&gt;</summary><category term="Conky"></category><category term="Raspberry Pi"></category></entry><entry><title>Controlling and Viewing the Raspberry Pi GPIO via PC Browser</title><link href="/posts/2012/Oct/19/controlling-and-viewing-the-raspberry-pi-gpio-via-pc-browser/" rel="alternate"></link><published>2012-10-19T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-10-19:posts/2012/Oct/19/controlling-and-viewing-the-raspberry-pi-gpio-via-pc-browser/</id><summary type="html">&lt;p&gt;&lt;center&gt;
&lt;a href="https://code.google.com/p/webiopi/"&gt;&lt;img alt="WebIOPi" src="/images/webiopi-chrome.jpg" title="WebIOPi Web Page" /&gt;&lt;/a&gt;
&lt;/center&gt;
This idea of controlling my Raspberry Pi (RPi), and the things its networked with, via an internet browser is at the heart of what I would like to do with the assortment of Arduino and Xbee devices I'm assembling.  To explore how best to do this, I'm considering using &lt;a href="http://code.google.com/p/webiopi/"&gt;WebIOPi&lt;/a&gt;, which is a web application used to control your RPi’s GPIO.  I believe it could be useful as a test tool, but more importantly, I suspect that I could learn how to engineer my application by studying its design.
&lt;h2&gt;Install WebIOPi&lt;/h2&gt;
When installing WebIOPi on my RPi, I followed the &lt;a href="http://code.google.com/p/webiopi/wiki/INSTALL#PHP/Apache"&gt;installation&lt;/a&gt; instructions for the Apache version.  I choose this version since  I'll be using the Apache web server for other features as my project evolves. Note that there is a small error on the instructions if you use a symbolic link to the webiopi directory.  Create this link using&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo ln -s /home/pi/webiopi /var/www/webiopi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Immediately after installation,  you can test to see if you can render a web page.  Assuming that your  Raspberry Pi is connected to your network  and its named &lt;code&gt;raspberrypi&lt;/code&gt;, you can open a browser to &lt;code&gt;&lt;a href="http://raspberrypi/webiopi/" rel="nofollow"&gt;http://raspberrypi/webiopi/&lt;/a&gt;&lt;/code&gt; with your network PC.  It might work but your likely to get a error, something like "...Could not reliably determine the server’s fully qualified domain name..." and the &lt;a href="http://scottlinux.com/2011/02/16/could-not-reliably-determine-the-servers-fully-qualified-domain-name/"&gt;solution&lt;/a&gt; is to give your web server a name.&lt;/p&gt;
&lt;p&gt;To do this,  create this Apache config file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/apache2/conf.d/fqdn
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enter &lt;code&gt;ServerName raspberrypi&lt;/code&gt; into this file and restart Apache using&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Installing GPIO Utilities&lt;/h2&gt;

&lt;p&gt;While checking on the status of of the Python based GPIO package on the RPI using the command &lt;code&gt;dpkg -l | grep gpio&lt;/code&gt;, I concluded that the  &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Occidentalis&lt;/a&gt; distribution I'm using doesn't have any Python libraries for GPIO.&lt;/p&gt;
&lt;p&gt;Picking up some tips from &lt;a href="http://learn.adafruit.com/raspberry-pi-e-mail-notifier-using-leds/overview"&gt;Raspberry Pi E-mail Notifier Using LEDs&lt;/a&gt;.  I determined that I need to install several python packages first.  I did this via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install python
sudo apt-get install python-dev
sudo apt-get install python-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this done, now its time to install the required Python libraries but first, update the Python distribution by running&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo easy_install -U distribute
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally you can install the Raspberry Pi GPIO (General Purpose Input/Ouput) library:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;sudo pip install RPi.GPIO
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;What did I find&lt;/h2&gt;

&lt;p&gt;WebIOPi  supports binary GPIOs, in both input and output.  That is, you can set a GPIO output pin high/low via a browser pick.  Also, you can see the state of a GPIO pin.  Equally important to me is that WebIOPi auto-refreshes, via &lt;a href="http://www.kendoui.com/blogs/teamblog/posts/12-05-11/hello_services_webapi_rest_json_and_ajax.aspx"&gt;WebAPI, REST, JSON and AJAX&lt;/a&gt; I assume.  Therefore, when the GPIO pins change state, the browser automatically is updated with the new status.  And this happens for all browsers displaying WebIOPi.  You can demonstrate this by opening two browsers pointing at WebIOPi.  Action performed in one browser will also appear in the other.
&lt;h2&gt;Test Script&lt;/h2&gt;
I used this code to generate some random activity on the GPIO pins and test WebIOPi.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;RPi.GPIO&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;as&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;GPIO&lt;/span&gt;&lt;span style="color: #555555"&gt;,&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;time&lt;/span&gt;

BLINK_FREQ &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;3&lt;/span&gt;                  &lt;span style="color: #0099FF; font-style: italic"&gt;# refresh GPIO pins every 3 seconds&lt;/span&gt;

GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setmode(GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;BCM)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;4&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;17&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;21&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;22&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;9&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;11&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;18&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;23&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;24&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;25&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;8&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;7&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)

i &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;True&lt;/span&gt;:
                &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;4&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;17&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;4&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;17&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;7&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;8&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;25&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;23&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;3&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;7&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;8&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;25&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;23&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;4&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;21&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;22&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;9&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;11&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;18&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;5&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;21&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;22&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;9&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;11&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;18&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;else&lt;/span&gt;:
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;
                time&lt;span style="color: #555555"&gt;.&lt;/span&gt;sleep(BLINK_FREQ)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Alternative Approaches&lt;/h2&gt;

&lt;p&gt;The use of a Web page to control the RPi seems useful enough but what if the target environment for launching control messages is a cell phone?  Maybe a phone app would be a better approach.  Check out the post  &lt;a href="http://www.samratamin.com/blog/raspberry-pi-iphone-control-a-rpi-with-an-iphone-in-2-minutes/"&gt;Raspberry Pi + iPhone: Control a RPi with an iPhone in 2 Minutes&lt;/a&gt;.&lt;/p&gt;</summary><category term="Raspberry Pi"></category></entry><entry><title>Establishing an X Window System Environment for my PC and Raspberry Pi</title><link href="/posts/2012/Oct/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/" rel="alternate"></link><published>2012-10-04T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-10-04:posts/2012/Oct/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/</id><summary type="html">&lt;p&gt;As stated in an &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;earlier post&lt;/a&gt;, I plan to run my Raspberry Pi (RPi) as an attached device to my homes LAN and use my MS Windows PC to access the RPi.  The RPi will use my PC for display output and key board / mouse as input.  With the X Window System on the RPi, I can transmit an entire RPi desktop if I wish (using &lt;a href="http://lxde.org/"&gt;LXDE&lt;/a&gt; and it would look and feel much like &lt;a href="http://en.wikipedia.org/wiki/Virtual_Network_Computing"&gt;VNC&lt;/a&gt;).  I find this cumbersome since now your dealing with two desktop environments: MS Windows desktop and  X Window System based desktop all one display.&lt;/p&gt;
&lt;p&gt;There is an alternative way. One of the cool things about the X architecture is that it can use MS Windows as your window manager (at least with the tools like &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt;, &lt;a href="http://sourceforge.net/projects/xming/"&gt;Xming&lt;/a&gt;, and &lt;a href="http://www.microimages.com/mix/"&gt;MI/X&lt;/a&gt;) but the application within the window frame can be the RPi based X Window System application.  Now you have a single desktop (MS Windows) but your running RPi application within a MS Windows window.  And with this configuration, you can run both Linux programs within a standard terminal window and graphic  X Window System applications in another window.&lt;/p&gt;
&lt;p&gt;For me this is clearly the way to go.  It will allow me to hop on my PC, and with a double-click on a desktop icon, get me to a password prompt on the RPi.  Enter the password, and I can immediately run both command line and X graphics application on the RPi, along side MS Windows applications, all concurrently on a single desktop.&lt;/p&gt;
&lt;p&gt;How I did this, along with some background information, is provide below.
&lt;h2&gt;X Window System&lt;/h2&gt;
&lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="X Windows Client Server Architecture" alt="X architecture" src="/images/x-windows-client-server-architecture.png" width="210" height="356" /&gt;
The X Window System (commonly referred to as X Windows or just X or X11) is a software system and network protocol that provides a basis for graphical user interfaces (GUIs) and rich input device capability for networked computers.
X uses a client/server model, but appears backwards when you first learn of X.  In X, it's the server that runs on the local machine (the PC), providing its services to the display based on requests from client programs that may be running remotely (the RPi). Within a X Window System, a client can also run locally. The server also manages the input devices (your keyboard and mouse), and it manages the display of colors and fonts on the screen, all based on requests from a client.&lt;/p&gt;
&lt;p&gt;One of the most significant features of X is that it was specifically designed to work across a network. The client and the server communicate via the X Protocol, a network protocol that can run locally or across a network. Regardless of whether a client program is local or remote, it communicates with the server through the X Protocol.
&lt;h2&gt;X Window System Components&lt;/h2&gt;
A X Window System consist of several components which work together.  They are:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;X Server&lt;/strong&gt; - manages the display, based on requests from the window manager.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Window Manager&lt;/strong&gt; - is an application that is itself an X client, with responsibility for managing the appearance and placement of the windows on the screen.   The window manager takes care of the appearance and placement of the windows; it doesn't determine what goes on inside.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; - are the X clients, typically providing user functionality.  Windows are fully in control of the application but their placement, geometry  etc. are controlled by the window manager.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Display Manager&lt;/strong&gt; - runs as a program that allows the starting of a session on an X server from the same local or remote computer A &lt;a href="http://en.wikipedia.org/wiki/X_display_manager_(program_type)"&gt;display manager&lt;/a&gt; presents the user with a login screen which prompts for a username and password. A session starts when the user successfully enters a valid combination of username and password.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;When the display manager runs on the user's computer, it starts the X server before presenting the user the login screen, optionally repeating when the user logs out.&lt;/li&gt;
    &lt;li&gt;When the display manager runs on a remote computer, it acts like a telnet server, requesting username and password and starting a remote session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt; &lt;strong&gt;Desktop Environment&lt;/strong&gt; - go further than a window manager in providing an integrated graphical environment where all applications and windows have a common look and feel. The desktop environments also include session management, for saving and restoring your work sessions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
In the spirit of user-friendliness and security, the desktop and display manager hides much of the X Window System and its' subtleties.  If you want to really explore X (and light its load on the RPi), it's helpful to run with just a window manager for a while (even if you plan to go back to the desktop).  That is what I plan to do.
&lt;h2&gt;Cygwin's X Server and Window Manager&lt;/h2&gt;
Before you can run a X client, you need to start the X server.  You can run the X server in two ways: it will automatically start if your Linux is configured with a X Display Manager (XDM), and if not, at the Linux command line you can start X manually.  It is the latter that I want to do on my PC / RPi combination (and the way my RPi distribution &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Occidentalis&lt;/a&gt; is pre-configured).   Also, in my configuration, I'll be using the Cygwin  X server on the PC, and no server will be running on the RPi, only X clients.&lt;/p&gt;
&lt;p&gt;Now there are some important capabilities within the Cygwin X server.  Cygwin/X can work with &lt;a href="http://x.cygwin.com/docs/ug/using-window-managers.html"&gt;its window managers&lt;/a&gt;  in several different ways.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Internal window manager&lt;/strong&gt; - The internal window manager creates a MS Windows window for each top-level X window.  This window manage is "internal" to the Cygwin X server.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;External local window managers&lt;/strong&gt; -  These local window managers must be installed on Cygwin and runs on the PC (e.g. twm, mwm, fvwm2, openbox, aewm++, WindowMaker).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Remote window managers&lt;/strong&gt; - This would be a situation where the window manager is on the RPi and would connect via a remote sessions using XDMCP (X Display Manager Control Protocol).&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
I plan to keep things simple and use the Cygwin internal window manage.&lt;/p&gt;
&lt;p&gt;XWin is the X Server for the X Window System on the Cygwin environment running on Microsoft Windows. It can operate in &lt;a href="http://x.cygwin.com/docs/man1/XWin.1.html"&gt;three different modes&lt;/a&gt;:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Single Window&lt;/strong&gt; - This is the default mode. Each X screen appears as a single MS Windows window and all X windows are contained within this window. (In X terminology, the MS Windows window contains the &lt;a href="http://en.wikipedia.org/wiki/Root_window"&gt;root window&lt;/a&gt; for the screen.)&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Multi-Window&lt;/strong&gt;&lt;em&gt; - &lt;/em&gt;In this mode XWin uses its own integrated window manager in order to handle the top-level X windows, in such a way that they appear as normal MS Windows windows.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Rootless&lt;em&gt; -&lt;/em&gt;&lt;/strong&gt; In this mode the X server works in a window containing the whole screen but this root window (traditionally covered with an X hatch pattern) is hidden from view, so only top-level X windows are seen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
To get a better idea on what the different modes can provide you from a user experience perspective, check out some &lt;a href="http://x.cygwin.com/screenshots/"&gt;Cygwin/X screen shots&lt;/a&gt;.   Again, my objectives are to keep things simple and clean, so I will be using the multi-window mode.
&lt;h2&gt;Configuring Cygwin/X&lt;/h2&gt;
To operate Cygwin/X in multi-window mode you use the command &lt;code&gt;startxwin&lt;/code&gt; (You use &lt;code&gt;startx&lt;/code&gt; for window mode.  &lt;code&gt;startxwin&lt;/code&gt; is a specialized version of &lt;code&gt;startx &lt;/code&gt;with a few differences appropriate to running in multi-window mode, rather than windowed mode).  The &lt;code&gt;startxwin&lt;/code&gt; program has a resource file called &lt;code&gt;.startxwinrc&lt;/code&gt;.  You can create a &lt;code&gt;~/.startxwinrc&lt;/code&gt; script to start client programs, such as mintty or xterm. An example &lt;code&gt;.startxwinrc&lt;/code&gt; file is:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;mintty --position 150,150 --size 80,50
mintty --position 600,500 --size 80,25 --exec ssh -X pi@raspberrypi.local
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will open up two xterm windows for your in the left hand corner of the screen and a thrid xterm window in the center of the screen.  This third screen is automatically logging in to the RPi as user pi and will wait four you to enter the password.&lt;/p&gt;
&lt;p&gt;Also make sure that you export your &lt;code&gt;DISPLAY&lt;/code&gt; for the X server on your PC.  You can do this by placing the following in your &lt;code&gt;.bashrc&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# environment variables required by X Window System&lt;/span&gt;
&lt;span style="color: #336666"&gt;export&lt;/span&gt; &lt;span style="color: #003333"&gt;DISPLAY&lt;/span&gt;&lt;span style="color: #555555"&gt;=&lt;/span&gt;:0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configuring RPi&lt;/h2&gt;

&lt;p&gt;Not much needs to be done to the RPi to prepare for the X applications.  You may wish to launch some X Window System application upon logging in.  You can do this by adding the X applications to your .bash_profile.  For example, add the following line to launch the LXDE file manager:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;# execute X Window System programs&lt;/span&gt;
pcmanfm &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Starting and Stopping the Cygwin X Server&lt;/h2&gt;

&lt;p&gt;The environments are now set.  Time to start the X Server. The easiest way for &lt;a href="http://x.cygwin.com/docs/ug/using.html#using-starting"&gt;starting Cygwin/X&lt;/a&gt; is using the "XWin Server" shortcut under "Cygwin-X" on the Start Menu or on the MS Windows desktop. You could also type &lt;code&gt;startxwin&lt;/code&gt; on the Cygwin command line.&lt;/p&gt;
&lt;p&gt;As to stopping the X Server, for the window mode I'm working in (multi-window), &lt;a href="http://x.cygwin.com/docs/ug/using-stopping.html"&gt;stopping Cygwin/X&lt;/a&gt; can be done by  Selecting the "Exit..." option from the notification area icon menu.
&lt;h2&gt;How Does It Look&lt;/h2&gt;
So given the configuration discussed above, your get a nice clean display with MS Windows, Cygwin, RPi command line, and RPi X Window application running in a single windows management environment.  Picture provided below:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/x-window-system-screen-shot1.jpg"&gt;&lt;img class="aligncenter size-large wp-image-367" title="X Window System Screen Shot" alt="screen shot 1" src="/images/x-window-system-screen-shot1.jpg" width="1024" height="640" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You thought the Raspberry Pi was a simple little hardware hackers computer .... but its running like a big dog now!
&lt;h2&gt;References&lt;/h2&gt;
Much of what is provided here was lifted from the following sources:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://linuxdevcenter.com/pub/a/linux/2005/08/25/whatisXwindow.html"&gt;What Is the X Window System&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.comptechdoc.org/os/linux/howlinuxworks/linux_hlxwindows.html"&gt;How Linux X Works&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.physionet.org/physiotools/cygwin/#using-x"&gt;Using Cygwin/X&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://unicorn.mcmaster.ca/teaching/cygwin/cygwin-x-user_guide.pdf"&gt;Cygwin/X User’s Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://secweb.cs.odu.edu/~zeil/cs252/website/Lectures/xwinlaunch/page/xwinlaunch.html"&gt;The X Window System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</summary><category term="Raspberry Pi"></category><category term="Linux"></category><category term="X Window System"></category><category term="Window Manager"></category><category term="Cygwin"></category></entry><entry><title>Setting up Git for Arduino and Raspberry Pi Development</title><link href="/posts/2012/Sep/28/setting-up-git-for-arduino-and-raspberry-pi%20development/" rel="alternate"></link><published>2012-09-28T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-28:posts/2012/Sep/28/setting-up-git-for-arduino-and-raspberry-pi development/</id><summary type="html">&lt;p&gt;For my future projects, I plan to do a combination of Arduino and RPi development.  The development of the Arduino code will be on my MS Windows PC and the RPi solution will be developed naively within the RPi Linux environment   Given this distributed environment (and my ability to bungle things), I can foresee  potential problems maintain good source code control.  To deal with this, the combination of &lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt; and &lt;a href="https://github.com/"&gt;gethub&lt;/a&gt; seems the right way to proceed .... after all it has worked for the distributed &lt;a href="http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git"&gt;Linux development community&lt;/a&gt;.
&lt;h2&gt;Git on MS Windows&lt;/h2&gt;
The first thing I did was to set up git within my MS Windows PC.  Given that &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;I installed Cygwin&lt;/a&gt; when setting up the RPi, that is where I returned to install git.  Therefore, I plan to use git within the Cygwin environment on my PC and not within MS Windows per say.  &lt;a href="http://git-scm.com/downloads"&gt;This could be done&lt;/a&gt;, but my approach allows me to learn git commands once since, Cygwin is a Linux-like environment, everything should look and operate the same.&lt;/p&gt;
&lt;p&gt;To accomplish this I follow the instructions outline in &lt;a href="http://www.celinio.net/techblog/?p=818"&gt;Installing Git on Cygwin&lt;/a&gt;.  These instructions are very straight forward.  The challenge was in initializing git for my first project, at least it was a challenge for me since git is new tool for me and Cygwin didn't always cooperate.  I had to address this the old fashion way .... read the documentation and trouble logs (vs. doing a web search for someones web post with instructions).  All the important secrets of git can be found widely dispersed and buried deep withing these web sites: &lt;a href="http://git-scm.com/documentation"&gt;Git Documentation&lt;/a&gt; and &lt;a href="http://gitref.org/index.html"&gt;Git Reference&lt;/a&gt;.  Source information from trouble logs will be listed below.&lt;/p&gt;
&lt;p&gt;So how did I do it?  It's easy once you successively done it once.  First let me state the context; for the exercise I'm doing, I'm attempting to place my &lt;code&gt;.bashrc, .profile, .vimrc&lt;/code&gt;, and a few other configuration files under gits control.  The basic sequence of operation is to initialize the git environment, configure some parameters, and then add the files.  It goes like this (I'll let you research the git documentation, just like I did, to understand the command.  Trust me, this is good for you!):
&lt;p style="padding-left:30px;"&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git init
git config --global user.name &lt;span style="color: #CC3300"&gt;&amp;quot;jeffskinnerbox&amp;quot;&lt;/span&gt;
git config --global user.email jeff.irland@verizon.net
git config --global core.editor vim
git config --global merge.tool vimdiff
git add .bashrc .profile .vimrc .bash_profile .minttyrc .inputrc .gitconfig .gitignore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see what you got, use the &lt;code&gt;git status&lt;/code&gt; command.  This will tell you the files got staged but not committed. The commit will come later.  First we need to set up our communal repository within &lt;a href="https://github.com/"&gt;github&lt;/a&gt;.
&lt;h2&gt;Setting Up GitHub&lt;/h2&gt;
You may be asking,&lt;a href="http://techcrunch.com/2012/07/14/what-exactly-is-github-anyway/"&gt; What Exactly Is GitHub Anyway?&lt;/a&gt;  Well, in a few words, github is a web-based hosting service for software development projects that use git. The next step is to go to &lt;a href="https://github.com/"&gt;github&lt;/a&gt;, set up your free login, and then set up a repository.  In my case, I set up a github repository called &lt;a href="https://github.com/jeffskinnerbox/Cygwin-Configuration-Files"&gt;Cygwin-Configuration-Files&lt;/a&gt; to store my configuration files established earlier under git control.  It will be empty at this point, and that's all for now, loading it with files comes later.&lt;/p&gt;
&lt;p&gt;I didn't say much about how to set up github, but trust me, it is as simple as outlined above.  It's via git that all the real work takes place.  GitHub is all about giving you an off-site, web-access-able, complete version controlled historical record of your code that can be shared with others.
&lt;h2&gt;Back to Git within Cygwin&lt;/h2&gt;
Now that we have established github and initialized, configured, and added files to the Cygwin environment  we can associated the PC and github environments.  It wasn't clear to me, from the git documentation, how to best do this association.  Using  &lt;code&gt;git clone&lt;/code&gt; isn't intuitive to me, but it seems to work.  This is how I did it:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/jeffskinnerbox/Cygwin-Configuration-Files.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Warning&lt;/span&gt; ...&lt;/em&gt; You may, as I did, get the following error:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;Cloning into &amp;#39;Cygwin-Configuration-Files&amp;#39;...
error: error setting certificate verify locations:
CAfile: /usr/ssl/certs/ca-bundle.crt
CApath: none while accessing https://github.com/jeffskinnerbox/Cygwin-Configuration-Files.git/info/refs
fatal: HTTP request failed
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you get the above error, &lt;a href="http://codeforthesoul.blogspot.com/2012/09/git-error-about-missing-certificates-on.html"&gt;the problem&lt;/a&gt; is that Cygwin hasn't installed the ca-certificates package.  Run the &lt;a href="http://www.cygwin.com/install.html"&gt;Cygwin installer&lt;/a&gt; again, and add that package; after that &lt;code&gt;git clone&lt;/code&gt; should start working.&lt;/p&gt;
&lt;p&gt;The next step is to commit your files to the git local repository within the PC under Cygwin.  To do this, execute the following command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git commit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will be put into vim to provide a comment that will be posted with the git version.  Why vim?  Because you executed the command &lt;code&gt;git config --global core.editor vim&lt;/code&gt;  earlier.  If you don't want to use vim for adding comments under git, supply another editor when you do the configuration step.&lt;/p&gt;
&lt;p&gt;The next step, which strictly isn't required but a nice to have, is to associate a descriptive identifier with the github repository.  The descriptor I used is "Cygwin-Configuration-Files".  The command I used is:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git remote add Cygwin-Configuration-Files https://github.com/jeffskinnerbox/Cygwin-Configuration-Files.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The final step is to push your local files to the github repository,&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span&gt;&lt;/span&gt;git push Cygwin-Configuration-Files
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Warning ... &lt;/em&gt; It was during the &lt;code&gt;git push&lt;/code&gt; that I ran into another problem, but it could happen nearly any time.  I discovered that sometimes, after multiple Cygwin updating or installing packages, you'll start to get strange errors related to "fork()" or .dll loading. After some research, I discoved these errors are usually solved by &lt;a href="http://cygwin.wikia.com/wiki/Rebaseall"&gt;rebasing your packages&lt;/a&gt;.  While rebasing, which is executed using the Cygwin &lt;code&gt;rebaseall&lt;/code&gt; command, is is a bit of a mystery, it does appear to work
&lt;h2&gt;Rebasing Cygwin&lt;/h2&gt;
Before you can run the &lt;code&gt;&lt;a href="http://inamidst.com/eph/cygwin"&gt;rebaseall&lt;/a&gt;&lt;/code&gt; command, you'll need to make sure no Cygwin-based services are running.   To do this, you need to run two cygwin command, &lt;a href="http://cygwin.com/faq/faq.setup.html#faq.setup.uninstall-service"&gt;cygrunsrc&lt;/a&gt; and &lt;a href="http://superuser.com/questions/194529/cygwin-fatal-error-unable-to-remap-what-does-it-mean"&gt;rebaseall&lt;/a&gt;,  under the ash command in MS Windows command prompt, not in a Cygwin Terminal window.   The sequence of activity is as follows:
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Exit the Cygwin Terminal&lt;/li&gt;
    &lt;li&gt;Run as administrator the MS Windows Command Prompt window&lt;/li&gt;
    &lt;li&gt;Execute ash via &lt;code&gt;\cygwin\bin\ash.exe&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Now under ash, see if any Cygwin processes are running via &lt;code&gt;/usr/bin/cygrunsrc -L&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Stop any of the  running processes via &lt;code&gt;/usr/bin/cygrunsrc --stop &amp;lt;process's&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Now do the rebase via &lt;code&gt;/usr/bin/rebaseall&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
For an example the steps above performed within the Command Prompt under ash, see below:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/09/capture.jpg"&gt;&lt;img title="Window Capture of ash, cygrunsrv, rebaseall" alt="window capture" src="/images/ash-run-capture.jpg" width="545" height="275" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;h2&gt;Git on the Raspberry Pi&lt;/h2&gt;
Admittedly, getting git setup under MS Windows / Cygwin isn't a walk in the park.  It appears to work fine once set up, but the setup process can be painful.&lt;/p&gt;
&lt;p&gt;Git under the Raspberry Pi's Linux installs flawlessly, as you would expect, given git origins.  First you  install git via &lt;code&gt;sudo apt-get install git&lt;/code&gt;.  Then, just as was done above, do the initialization of the git environment, configure some parameters,  add the files, setup the github, clone, and push.&lt;/p&gt;
&lt;p&gt;In my case, I setup a separate  a github repository called &lt;code&gt;&lt;a href="https://github.com/jeffskinnerbox/RPI-Configuration-Files"&gt;RPI-Configuration-Files&lt;/a&gt;&lt;/code&gt; to store my RPi configuration files.  I could have used the same repository as was setup for the PC environment but that didn't make sense for my present needs.
&lt;h2&gt;Conclusion&lt;/h2&gt;
So that's it!  Its a long post for what is really a simple to use tool, but setting it up the first time could be a challenge.&lt;/p&gt;</summary><category term="Arduino"></category><category term="Raspberry Pi"></category><category term="Git"></category><category term="GitHub"></category><category term="Cygwin"></category></entry><entry><title>Installing Packages into the Raspberry Pi's Linux</title><link href="/posts/2012/Sep/25/installing-packages-into-the-raspberry-pis-linux/" rel="alternate"></link><published>2012-09-25T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-25:posts/2012/Sep/25/installing-packages-into-the-raspberry-pis-linux/</id><summary type="html">&lt;p&gt;Once I got the &lt;a href="http://www.raspberrypi.org/"&gt;RPi&lt;/a&gt; up and running &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;headless&lt;/a&gt; on my local network, its time to build the software foundation that I'll need to make it an effective development environment.  These are the packages that I loaded to get myself up and running.
&lt;h2&gt;Do Your House Cleaning First&lt;/h2&gt;
I'm loading software via the Linux &lt;a href="http://en.wikipedia.org/wiki/Advanced_Packaging_Tool"&gt;&lt;code&gt;apt-get&lt;/code&gt;&lt;/a&gt; utility and you need to make sure its database is up to date. First thing to do is to update apt-get's local database with server's pkglist's files.  Then checks for outdated packages in the system and automatically upgrades them.  Execute the following commands:&lt;/p&gt;
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Search for Package or Package Description&lt;/h2&gt;

&lt;p&gt;Some times you don't know package name but aware of some keywords to search the package.  To search for packages, use the following:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;apt-cache search "&lt;em&gt;text-to-search&lt;/em&gt;"
apt-cache search "&lt;em&gt;text-to-search&lt;/em&gt;" | grep "&lt;em&gt;more-search-text&lt;/em&gt;"&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Synaptic&lt;/h2&gt;

&lt;p&gt;Synaptic is a graphical package management program for Linux software. It provides the same features as the &lt;code&gt;apt-get&lt;/code&gt; command line utility with a X Windows GUI front-end.  While I will not be using X Windows at this moment, in the future I will and &lt;a href="http://en.wikipedia.org/wiki/Synaptic_(software)"&gt;&lt;code&gt;synaptic&lt;/code&gt;&lt;/a&gt; is a very nice alternative to apt-get when in in X Windows.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install synaptic&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Vim&lt;/h2&gt;

&lt;p&gt;Vim is a highly configurable text editor and widely available for many different platforms.  &lt;a href="http://en.wikipedia.org/wiki/Emacs"&gt;Emacs&lt;/a&gt; also has a large following, but I think everyone needs to be prepared to use &lt;a href="http://en.wikipedia.org/wiki/Vim_(text_editor)"&gt;&lt;code&gt;vim&lt;/code&gt;&lt;/a&gt; if your serious about Linux.  The RPi Linux distribution appears to have &lt;code&gt;vi&lt;/code&gt; loaded but &lt;code&gt;vim&lt;/code&gt; is a superior tool.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install vim
sudo apt-get install vim-gtk&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;PyRoom&lt;/h2&gt;

&lt;p&gt;PyRoom is a a fullscreen editor without buttons, widgets, formatting options, menus and with only the minimum of required dialog windows, it doesn't have any distractions and lets you focus on writing and only writing.  It is the polar opposite of Vim, and as such, is a good editor for the novice or casual user, but requires X Windows and Python.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install pyroom&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Git&lt;/h2&gt;

&lt;p&gt;Given that I plan to hack some&lt;em&gt; to-be-determined&lt;/em&gt; applications using the RPi, I should consider establish some tools for  source code management. The last time I did serious software development in Linux (really Unix), I was using Source Code Control System (SCCS). The tools are much improved now and &lt;a href="http://git-scm.com/documentation"&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; is hands down the way to go.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Chromium&lt;/h2&gt;

&lt;p&gt;We all have a favorite browser and I choose &lt;a href="http://www.chromium.org/Home"&gt;&lt;code&gt;chromium&lt;/code&gt;&lt;/a&gt; for my RPi.  Chromium serves as a base for Google Chrome, which is Chromium re-branded (name and logo) with very few additions.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install chromium&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;</summary><category term="Raspberry Pi"></category><category term="Linux"></category></entry><entry><title>Raspberry Pi Hardware</title><link href="/posts/2012/Sep/17/raspberry-pi-hardware/" rel="alternate"></link><published>2012-09-17T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-17:posts/2012/Sep/17/raspberry-pi-hardware/</id><summary type="html">&lt;p&gt;The Raspberry Pi is a small, barebones computer developed by The &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi Foundation&lt;/a&gt;, a UK nonprofit, with the intention of providing low-cost computers and free software to students. Their ultimate goal is to foster computer science education and they hope that this small, affordable computer will be a tool that enables that.&lt;/p&gt;
&lt;p&gt;What has sparked my interest in the RPi is the fact that it a full functioning linux board, requires minimal peripheral to operate, engineered to support hardware hacking, and cost only $35 (only $25 if your willing to drop the Ethernet port and reduce the memory).&lt;/p&gt;
&lt;p&gt;I'm posting here some links to specs for the RPi hardware for latter reference:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Hardware"&gt;RPi Hardware&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Hardware_Basic_Setup"&gt;RPi Hardware Basic Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;p style="text-align:center;"&gt;&lt;a href="http://elinux.org/RPi_Hardware"&gt;&lt;img class="aligncenter" title="RPi component diagram" alt="RPi Hardware" src="/images/Raspi-Model-AB-Mono-2-699x1024.png" width="699" height="1024" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;a href="http://www.raspberrypi-spy.co.uk/2012/09/raspberry-pi-revision-2-0-photos/"&gt;&lt;img class="aligncenter size-medium wp-image-86" title="raspberry-pi_model_b1" alt="RPi Photo" src="/images/raspberry-pi_model_b1.jpg" width="300" height="193" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Raspberry Pi"></category></entry><entry><title>Arduino Electronic Design Automation</title><link href="/posts/2012/Sep/10/arduino-electronic-design-automation/" rel="alternate"></link><published>2012-09-10T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-10:posts/2012/Sep/10/arduino-electronic-design-automation/</id><summary type="html">&lt;p&gt;Electronic design automation (EDA or ECAD) is a category of software tools for designing electronic systems such as printed circuit boards.  In my professional life, I have been work apart from this domain, and only now because of renewed interest in electronics, I have come back to do some research.  I was pleasantly amazed by what I found.
&lt;h2&gt;Schematic and PCB Layout Editors&lt;/h2&gt;
EAGLE (Easily Applicable Graphical Layout Editor) is a very popular (and free) solution for PCB design, including Schematic Capture, Board Layout and Autorouter.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.cadsoftusa.com/"&gt;EAGLE&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://eagleup.wordpress.com/"&gt;eagleUP&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.instructables.com/id/Render-3D-images-of-your-PCBs-using-Eagle3D-and-PO/"&gt;Render 3D images&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.ladyada.net/library/pcb/eaglelibrary.html"&gt;Lady Ada Eagle library&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.opencircuits.com/SFE_Footprint_Library_Eagle"&gt;SparkFun Eagle Library&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.designspark.com/"&gt;DesignSpark PCB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Other tools are specifically focused on the Arduino that allows users to document their prototypes, share them with others, teach electronics in a classroom, and to create a PCB layout for professional manufacturing.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://fritzing.org/"&gt;Fritzing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Arduino Platform Simulation&lt;/h2&gt;
&lt;ul&gt;
    &lt;li style="padding-left:30px;"&gt;&lt;a href="http://virtualbreadboard.net/"&gt;Arduino simulation and development environment&lt;/a&gt;&lt;/li&gt;
    &lt;li style="padding-left:30px;"&gt;&lt;a href="http://www.buildinginternetofthings.com/2012/03/25/arduino-simulators/"&gt;Arduino Simulators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PCB Board Creation&lt;/h2&gt;
You can crate printed circuit board (PCB) with the aid of some web sites.  You submit your PCB design; they add your design to the batch of orders. When the batch is big enough, the batch is set off to be manufactured.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://batchpcb.com/index.php/Products"&gt;BatchPCB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;SPICE&lt;/h2&gt;
SPICE (Simulation Program with Integrated Circuit Emphasis) is a general-purpose, open source analog electronic circuit simulator
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.linear.com/designtools/software/"&gt;LTspice IV&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://denethor.wlu.ca/ltspice/"&gt;LTspice Tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.circuitlab.com/"&gt;CircutLAB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</summary><category term="Arduino"></category></entry><entry><title>Arduino Memory</title><link href="/posts/2012/Sep/10/arduino-memory/" rel="alternate"></link><published>2012-09-10T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-10:posts/2012/Sep/10/arduino-memory/</id><summary type="html">&lt;p&gt;As I have been exploring the Arduino hardware platforms for my TBD project, I find myself forgetting the memory options available.  I'm recording here my findings so I can reference it later.
&lt;center&gt;
&lt;table border="1" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Arduino&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Chip&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Flash&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;&lt;strong&gt;SRAM&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;&lt;strong&gt;EEPROM&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Nano 2.3&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega168&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;16K bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;1024 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;512 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Nano 3.0&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega328&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;32K bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;2048 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;1024 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Uno&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega328&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;32K bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;2048 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;1024 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Mega 2560&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega2560&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;256K bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;8192 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;4096 bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;/center&gt;
    &lt;li&gt;SRAM (Static Random Access Memory) is where the sketch creates and manipulates variables when it runs.&lt;/li&gt;
    &lt;li&gt;EEPROM (Electrically Erasable Programmable Read-Only Memory) is memory space that programmers can use to store long-term information.&lt;/li&gt;
    &lt;li&gt;Flash memory is where the Arduino sketch is stored (program space).  The bootloader takes about 2 KB of flash memory and remaining space is for the sketch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The Arduino IDE will tell you exactly how much Flash is being used after each compile/upload.  EEPROM is an older, more reliable technology. It is somewhat slower than Flash.  In Flash, a large block is erased all at once, much faster than the EEPROM method of going cell-by-cell.&lt;/p&gt;
&lt;p&gt;If you don't need to modify the strings or data while your sketch is running, you can store them in Flash (program) memory instead of SRAM; to do this, use the PROGMEM keyword.&lt;/p&gt;
&lt;p&gt;Part of my interest in the Arduino's memory is my concern about how much memory a sketch uses.  Here are some sites that provide insight and algorithms for calculating the memory:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://jeelabs.org/2011/05/22/atmega-memory-use/"&gt;ATmega memory use&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.nongnu.org/avr-libc/user-manual/malloc.html"&gt;Memory Areas and Using malloc()&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://code.google.com/p/cec-arduino/source/browse/branches/anc/MemoryFree.c?r=15"&gt;MemoryFree.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</summary><category term="Arduino"></category></entry><entry><title>Raspberry Pi has Arrived</title><link href="/posts/2012/Sep/09/raspberry-pi-has-arrived/" rel="alternate"></link><published>2012-09-09T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-09:posts/2012/Sep/09/raspberry-pi-has-arrived/</id><summary type="html">&lt;p&gt;&lt;img title="raspberry pi image from adafruit" alt="Raspberry Pi" src="/images/raspberry-pi-image-from-adafruit.jpg" width="170" height="130" class="img-rounded floatLeft" style="margin: 0px 8px; float: left" /&gt;
On Friday, September 7th, my &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; arrived!  A $35 hackable Linux box ... not a bad deal!  I got it from &lt;a href="http://www.newark.com/"&gt;Newark/element14&lt;/a&gt;, one of the few place where you can order a Raspberry Pi and not wait for many weeks.&lt;/p&gt;

&lt;p&gt;I immediately proceeded to set it up, and after over coming the typical barriers (e.g. my PC's SD Card reader wouldn't cooperate), things came together very nicely.  Here is how I did it.&lt;/p&gt;

&lt;h2&gt;What Raspberry Pi software distribution should I use?&lt;/h2&gt;

&lt;p&gt;Given that my objectives are to do some hardware hacking using the Pi, I quickly concluded that the distribution being offered by &lt;a href="http://www.adafruit.com/"&gt;Adafruit&lt;/a&gt; was for me. Adafruit offers a distribution called &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Occidentalis&lt;/a&gt;.  Unlike the typical Raspberry Pi software distributions, it comes equipped with  access to SPI, I2C, one wire, and WiFi preconfigured. It also has some things to make overall use easier, such as sshd on start-up  and Bonjour (so you can simply do &lt;code&gt;ssh pi@raspberrypi.local&lt;/code&gt; from my PC when I place the Pi on my local network).  And it appears that Adafruit will continue to support and enhance the software as things evolve with the Pi.&lt;/p&gt;

&lt;p&gt;I followed the &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-2"&gt;instructions&lt;/a&gt; given by Adafruit and had no problems.  I suggest when you do the first boot up, hook up the Pi with a monitor and keyboard to do the initial configuration.  Once that is accomplished, you can leverage the installed &lt;a href="http://www.linuxplanet.com/linuxplanet/reports/6826/1"&gt;Avahi&lt;/a&gt; (zeroconf or zero configuration networking) daemon (i.e. &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#bonjour-support"&gt;Bonjour&lt;/a&gt;-like service), as I do below.&lt;/p&gt;

&lt;h2&gt;How can I access the Raspberry Pi via my PC through my local network?&lt;/h2&gt;

&lt;p&gt;I have seen this called "running headless".  For me, this is the way to go.  The last thing I need is another monitor and keyboard to peck at.  Key to this will be getting a terminal emulator and a &lt;a href="http://en.wikipedia.org/wiki/X_terminal"&gt;X terminal&lt;/a&gt; running on my PC. I choose &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt; to get this job done. Cygwin/X comes with all the &lt;a href="http://cygwin.com/index.html"&gt;Cygwin&lt;/a&gt; utilities, but for me, that is a good thing.&lt;/p&gt;

&lt;p&gt;On to your PC, download Cygwin/X and use the set-up procedures listed at the &lt;a href="http://x.cygwin.com/docs/ug/setup.html#setup-cygwin-x-installing"&gt;Setting Up Cygwin/X&lt;/a&gt; page.  During the "Select Packages" step (step 15), also make sure to include the &lt;a href="http://en.wikipedia.org/wiki/OpenSSH"&gt;openssh&lt;/a&gt; package.&lt;/p&gt;

&lt;h2&gt;How do you get shh working on the PC?&lt;/h2&gt;

&lt;p&gt;This proves to be very easy despite the potential complexities. Follow the procedures in "&lt;a href="http://www.howtogeek.com/howto/41560/how-to-get-ssh-command-line-access-to-windows-7-using-cygwin/"&gt;How To Get SSH Command-Line Access to Windows 7 Using Cygwin&lt;/a&gt;".&lt;/p&gt;

&lt;h2&gt;How do you connect from the PC to the Raspberry Pi?&lt;/h2&gt;

&lt;p&gt;Fire up Cygwin Terminal on your PC, and at the prompt, enter&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;ssh pi@raspberrypi.local&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You'll then be asked for the password for the pi login, enter it, and your should be in the Raspberry Pi via terminal emulation. Note that this is all being done without the assistance of a &lt;a href="http://x.cygwin.com/docs/faq/cygwin-x-faq.html#q-what-is-x-server"&gt;X Server&lt;/a&gt; on the PC.  Your not running in X Windows ... that comes next (Make sure to exit the Pi and return back to the Cygwin Terminal for the next step).&lt;/p&gt;

&lt;h2&gt;How do you run X Windows on the Raspberry Pi and use the PC as your X Terminal?&lt;/h2&gt;

&lt;p&gt;If you want to run X Windows on the Raspberry Pi with your PC being the X Server display, you need to provide a Display Name and the start the X Server.  This is done within  following command in the Cygwin Terminal:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;export DISPLAY=:0.0&lt;br /&gt; startxwin &amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you should start an X Terminal (Cygwin/X has a light weight version called &lt;a href="http://code.google.com/p/mintty/"&gt;mintty&lt;/a&gt;).  So type in the following into the Cygwin Terminal.&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;mintty &amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Within the mintty window, log into the Raspberry PI:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;ssh -Y pi@raspberrypi.local&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;An once in the Raspberry Pi, startup the &lt;a href="http://en.wikipedia.org/wiki/LXDE"&gt;LXDE Desktop Client&lt;/a&gt; using the command:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;startlxde&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should now be in the Pi running X Windows!  No need for an extra keyboard, mouse, or monitor!&lt;/p&gt;

&lt;p&gt;Some &lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt;fine tuning&lt;/a&gt; will be necessary so you don't have to do the &lt;code&gt;export DISPLAY=:0.0&lt;/code&gt; every time you login and other things, but that is all that what is needed to get going.&lt;/p&gt;</summary><category term="Raspberry Pi"></category></entry><entry><title>Getting Started with the Raspberry Pi</title><link href="/posts/2012/Sep/08/getting-started-with-the-raspberry-pi/" rel="alternate"></link><published>2012-09-08T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-08:posts/2012/Sep/08/getting-started-with-the-raspberry-pi/</id><summary type="html">&lt;p&gt;As I have been doing for the Arduino, I have been doing some research on the Raspberry Pi.  This post will help get you going.
&lt;h2&gt;What is a Raspberry Pi?&lt;/h2&gt;
First things first - Just what is an Raspberry Pi?  Check out the following links for a brief introduction:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.extremetech.com/computing/124317-what-is-raspberry-pi-2"&gt;What is the Raspberry Pi?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://media.podcasts.ox.ac.uk/oucs/openspires/raspberrypi_intro_09032012.mp4"&gt;Raspberry Pi: An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Now let’s go a bit deeper to understand the Raspberry Pi hardware and capabilities:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.raspberrypi.org/faqs"&gt;Raspberry Pi FAQs&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.bit-tech.net/hardware/pcs/2012/04/16/raspberry-pi-review/1"&gt;Raspberry Pi review&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
One of the key things the Raspberry Pi team has pushed is that this is a tool for education.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=i14IEj646KM"&gt;Raspberry Pi for Education&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://blogs.oucs.ox.ac.uk/openspires/2012/03/31/a-taste-of-raspberry-pi-for-open-education-week-at-oxford-university/"&gt;A taste of Raspberry Pi for Open Education Week at Oxford University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Raspberry Pi Setup&lt;/h2&gt;
&lt;strong&gt;&lt;/strong&gt;To help with the setup of the Raspberry Pi Linux environment, consider the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="//www.techspot.com/review/527-raspberry-pi/"&gt;Raspberry Pi Review &amp;amp; Initial How-To Setup Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://projects.drogon.net/raspberry-pi/initial-setup1/"&gt;Secure, Re-Partition &amp;amp; Swap&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://projects.drogon.net/raspberry-pi/initial-setup2/"&gt;More tweaks to save precious RAM&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elsmorian.com/post/23366148056/basic-raspberry-pi-setup"&gt;Basic Raspberry Pi Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Some tutorials and other things&lt;/h2&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.element14.com/community/docs/DOC-43015/l/raspberry-pi-training-videos"&gt;element14 Raspberry Pi Training Videos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.youtube.com/user/RaspberryPiTutorials/videos"&gt;YouTube Raspberry Pi Tutorials&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Tutorials"&gt;RPi Tutorials&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Guides"&gt;RPi Guides&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.sparkfun.com/tutorials/372"&gt;Raspberry Pi Arch Linux ARM Tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.designspark.com/theme/raspberrypi"&gt;DesignSpark Raspberry Pi Resources&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.thepiuser.co.uk/"&gt;The Pi User&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.themagpi.com/"&gt;The MagPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;img class="aligncenter size-full wp-image-127" title="pi pic with comments" alt="pi picture with comments" src="/images/pi-pic-with-comments.jpg" width="545" height="335" /&gt;&lt;/p&gt;</summary><category term="Raspberry Pi"></category></entry><entry><title>Arduino Software Tools</title><link href="/posts/2012/Sep/04/arduino-software-tools/" rel="alternate"></link><published>2012-09-04T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-04:posts/2012/Sep/04/arduino-software-tools/</id><summary type="html">&lt;h2&gt;Arduino Specific Program Languages&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://arduino.cc/en/Main/Software"&gt;
    &lt;img class="alignright size-thumbnail wp-image-45" style="margin: 0px 8px; float: left" title="Arduino IDE" alt="arduino IDE" src="/images/arduino-ide.jpg" width="150" height="143" /&gt;
&lt;/a&gt;
Wiring is an open source electronics prototyping platform composed of a programming language, an integrated development environment (IDE), and a single-board microcontroller.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://wiring.org.co/"&gt;Wiring language&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/en/Main/Software"&gt;Arduino IDE&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.processing.org/"&gt;Processing language&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.chipkin.com/using-eclipse-with-arduino-duemilanove/"&gt;Using Eclipse with Arduino Duemilanove&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Using Microsoft Visual Studio 2010 Professional&lt;/h2&gt;
&lt;a href="http://www.visualmicro.com"&gt;
    &lt;img class="alignright size-medium wp-image-395" style="margin: 0px 8px; float: left" title="Arduino for Visual Studio Demo" alt="Visual Studio Demo" src="/images/arduino-for-visual-studio-demo.png" width="300" height="194" /&gt;
&lt;/a&gt;
The Arduino Playground web site provides some advice and instructions on Using Microsoft Visual Studio 10  and a plugin called Visual Micro to provide a full Arduino development platform.  For more information, check out:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Code/VisualStudio"&gt;Visual Studio Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Code/VisualMicro"&gt;Alternative Arduino IDE Programming in Microsoft Visual Studio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.arduinodev.com/arduino-with-visual-studio/"&gt;Visual Studio 2008/2010 and Arduino?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;To install the Microsoft Visual Studio 10, Visual Micro, and set it up for Arduino development, follow these steps:
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Download and install Microsoft Visual Studio 2010 Professional (For a free copy of Visual Studio, check out &lt;a href="http://www.visualmicro.com/page/Offer-Visual-Studio-Professional-Free-For-3-Years.aspx"&gt;http://www.visualmicro.com/page/Offer-Visual-Studio-Professional-Free-For-3-Years.aspx&lt;/a&gt;).&lt;/li&gt;
    &lt;li&gt;Download and install Visual Micro from &lt;a href="http://www.visualmicro.com/"&gt;http://www.visualmicro.com/&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;The above reference has a series of links that will take you through setting-up and testing the installation, configuring it, etc.  All well worth reviewing.&lt;/li&gt;
    &lt;li&gt;There are a few things you need to do that were not included in the above reference:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Make sure “Upload Using Programmer” is uncheck within Tool &amp;gt; Arduino&lt;/li&gt;
    &lt;li&gt;To make sure you can “include” “.h” files within your source directory, add “$(ProjectDir)” in Properties &amp;gt; Configuration Properties &amp;gt; VC++ Directories &amp;gt; Include Directories.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/ol&gt;
All of this is much easier than setting up and using Microsoft Visual C++ 2010 Express!
&lt;h2&gt;Atmel AVR Studio 5&lt;/h2&gt;
This is an Integrated Development Environment (IDE) for developing and debugging embedded Atmel AVR applications write, build, and debug using C/C++ and assembler code.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.atmel.com/microsite/avr_studio_5/"&gt;Atmel AVR Studio 5&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.engblaze.com/tutorial-using-avr-studio-5-with-arduino-projects/"&gt;Tutorial: Using AVR Studio 5 with Arduino projects&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://automation.binarysage.net/?p=1493"&gt;Info: Arduino IDE or Atmel AVR Studio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.avrfreaks.net/index.php?name=PNphpBB2&amp;amp;file=viewtopic&amp;amp;p=884538"&gt;AVR Studio 5 support for Arduino&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.normalexception.net/index.php/Projects/setting-up-avrstudio-for-arduino-development"&gt;AVR Studio 5 and Arduino&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Processing and Arduino&lt;/h2&gt;
Processing is an open source programming language and environment for people who want to create images, animations, and interactions. Arduino comes with some basic examples for communicating with Processing (in Examples &amp;gt; Communication). These are useful for when you want to write both Arduino and Processing programs and have them talk to each other.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://processing.org/learning/"&gt;Processing Tutorals&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://luckylarry.co.uk/programming-tutorials/processing/"&gt;Lucky Larry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Arduino and openFrameworks&lt;/h2&gt;
On the surface, openFrameworks seems very similar to Processing. openFrameworks is much better at creating projects that use a lot of 3D Graphics, computer vision libraries like OpenCV or projects that involve the real-time manipulation of video. Also, while Processing requires a Java backend, openFrameworks is simply a set of C++ libraries, meaning that developers comfortable with C++ will be right at home.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.sparkfun.com/tutorials/318"&gt;What is openFrameworks?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://wiki.openframeworks.cc/index.php?title=Main_Page"&gt;OF wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;C and Arduino&lt;/h2&gt;
The Arduino language is simply just a small refinement of C, in an effort to make the Arduino easier to code. Moving to C or C++ is very natural step up.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.wikihow.com/Write-Arduino-Software-in-C"&gt;How to Write Arduino Software in C&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Interfacing/CPPWindows"&gt;Arduino and C++ (for Windows)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Code/VisualCPPExpress"&gt;Using Microsoft Visual C++ 2010 Express to write Arduino Sketches/Libraries&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://pragprog.com/magazines/2011-04/advanced-arduino-hacking"&gt;What’s wrong with the Arduino IDE?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://bleaklow.com/2010/06/04/a_makefile_for_arduino_sketches.html"&gt;A Makefile for Arduino Sketches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Scratch for Arduino&lt;/h2&gt;
Scratch is a programming language learning environment enabling beginners to get results without having to learn syntactically correct writing first.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://scratch.mit.edu/"&gt;Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://seaside.citilab.eu/scratch/arduino"&gt;Projecte Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://cs.harvard.edu/malan/scratch/printer.php"&gt;Scratch for Budding Computer Scientists&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mentalarcade.com/visa/scratch.html"&gt;Exploring Programming with Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.worcpublib.org/pdf/scratch/Scratch%20Reference%20Guide%20&amp;amp;%20Dictionary.pdf"&gt;Scratch Reference Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Scratch is evolving into a more powerful platform.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://wiki.scratch.mit.edu/wiki/Scratch_2.0"&gt;Scratch 2.0&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.modk.it/"&gt;Modkit Micro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</summary><category term="Arduino"></category></entry><entry><title>Getting Started with Arduino</title><link href="/posts/2012/Sep/04/getting-started-with-arduino/" rel="alternate"></link><published>2012-09-04T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-04:posts/2012/Sep/04/getting-started-with-arduino/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.arduino.cc/"&gt;&lt;img class="alignright size-medium wp-image-384" title="Ardunio Uno Board" alt="Ardino Uno Board" src="http://jeffskinnerbox.files.wordpress.com/2012/10/arduino-uno-board-on-an-angle.jpg?w=300" width="300" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;What is an Arduino?&lt;/h2&gt;

&lt;p&gt;First things first - Just what is an Arduino? Check out the following links for a brief introduction:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.wired.com/gadgetlab/2008/04/just-what-is-an/"&gt;Just What Is An Arduino, And Why Do you Want One?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.pcworld.com/article/239454/geek_101_what_is_arduino.html"&gt;Geek 101: What Is Arduino?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.ted.com/talks/massimo_banzi_how_arduino_is_open_sourcing_imagination.html"&gt;Massimo Banzi: How Arduino is open-sourcing imagination at TEDGlobal 2012&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://redux.com/stream/item/1909904/Arduino-The-Documentary-2010-English-HD"&gt;Arduino: The Documentary&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;For a lighter look at the Arduino, check out the &lt;a href="http://arduino.cc/playground/uploads/Main/arduino_comic_v0004.pdf"&gt;comic book&lt;/a&gt; by Jody Culkin.&lt;/p&gt;

&lt;p&gt;To go a bit deeper to understand the Arduino hardware variants and the Arduino’s Interactive Development Environment (IDE):&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Guide/Introduction"&gt;Ardunio as defined by the source&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.howtogeek.com/65963/what-is-arduino/"&gt;What is Arduino? Learn About This Open-Source Electronics Platform&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;Arduino also comes in &lt;a href="http://arduino.cc/hu/Main/Hardware"&gt;multiple hardware variations&lt;/a&gt; to support different types of applications.&lt;/p&gt;

&lt;h2&gt;What you Need to Purchase&lt;/h2&gt;

&lt;p&gt;For less than $100, Adafruit Industries offers an excellent starter package, &lt;a href="http://www.adafruit.com/products/170"&gt;Adafruit ARDX&lt;/a&gt;. This package not only includes an Arduino Uno but also all the electronic pieces needed to complete 11 different circuits, along with a experimenter's guide booklet &amp;amp; breadboard layout sheets.&lt;/p&gt;

&lt;h2&gt;Installing the IDE&lt;/h2&gt;

&lt;p&gt;This is the program used to write code for the Arduino. Install the software for you operating system and type of Arduino. I’m assuming Vista and Arduino Uno R3.&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.arduino.cc/en/Main/Software"&gt;Download the Arduino IED Software&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Guide/Windows"&gt;How to connect your Arduino board to the computer (Windows PC) and upload your first sketch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Note: Within Device Manager, you may have to go to Action &amp;gt; Add Legacy Hardware to see the Arduino and get the driver installed.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;h2&gt;Start Your Education&lt;/h2&gt;

&lt;p&gt;Using the experiments guide that comes with the Arduino kit, &lt;a href="http://www.oomlout.com/products/ARDX/ARDX-experimenters-guide-DD.pdf"&gt;Arduino Experimenter's Guide (ARDX)&lt;/a&gt;, and your off and running! Other sites to check out include:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.oomlout.com/a/products/ardx/"&gt;ARDX Kit Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.ladyada.net/learn/arduino/index.html"&gt;Ladyada's Arduino Tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Tutorial/HomePage"&gt;Official Arduino Example Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.instructables.com/tag/type-id/category-technology/channel-arduino/"&gt;Instructables' Arduino Section&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://makezine.com/arduino/"&gt;Make Magazine's Arduino Section&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.adafruit.com/tutorials"&gt;Adafruit Industries&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.sparkfun.com/tutorials"&gt;Sparkfun Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://learn.sparkfun.com/curriculum"&gt;Education at SparkFun Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.arduinotutorials.com"&gt;Arduino Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://letsmakerobots.com/node/28278"&gt;Arduino 101: Timers and Interrupts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://tronixstuff.wordpress.com/tutorials/"&gt;Arduino Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://guides.machinescience.org/course/view.php?id=29"&gt;Machine Science&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl"&gt;Official Forums&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;h2&gt;Purchasing Arduino Hardware and Supporting Electronics&lt;/h2&gt;

&lt;p&gt;There are several online retail stores that sell the bits and pieces to make electronics projects possible. Some of the best are:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.adafruit.com/category/17"&gt;Adafruit Industries&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.sparkfun.com/"&gt;SparkFun Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.parallax.com/"&gt;Parallax.com&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.makershed.com/category_s/211.htm"&gt;Maker Shed&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.mouser.com/Arduino/"&gt;Mouser Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.goldmine-elec.com/"&gt;Electronic Goldmine&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.jameco.com"&gt;Jameco Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.digikey.com/"&gt;Digi-Key&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.alliedelec.com/"&gt;Allied Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.radioshack.com/category/index.jsp?categoryId=2032058"&gt;Radio Shack&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.hobbypartz.com/"&gt;Hobby Partz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.lynxmotion.com/default.aspx"&gt;Lynxmotion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;Robotics is a popular topic for Arduino and these sites specialize in components and kits especially suited for robots:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.dfrobot.com/"&gt;DF Robot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.machinescience.org/"&gt;Machine Science&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.trossenrobotics.com/"&gt;Trossen Robotics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.robotshop.com/"&gt;RobotShop&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;There are many shields available for the Arduino to accommodate many needs and &lt;a href="http://shieldlist.org/"&gt;Arduino Shield List&lt;/a&gt; keeps a running list of them.&lt;/p&gt;

&lt;h2&gt;Arduino Knowledgebases&lt;/h2&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Reference/HomePage"&gt;Arduino Language Reference&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://dlnmh9ip6v2uc.cloudfront.net/learn/materials/8/Arduino_Cheat_Sheet.pdf"&gt;Arduino Cheat Sheet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.freeduino.org/"&gt;The World Famous Index of Arduino &amp;amp; Freeduino Knowledge&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://dafd4a86-a-62cb3a1a-s-sites.googlegroups.com/site/mechatronicsguy/arduinocheatsheet/Arduino%20cheat%20sheet%20v02c.png?attachauth=ANoY7cqNlrBTz55OdAqyKZbGYz82HJDLeBlGIbR3oPAe6cBuQc2wNntvNZqgY-_InrvuseNhJa7aa645ZXlgk3fgL6t-obHAcE28IqUFGv3IH8tdOzyC0UYzgTkjoaorrYTiAGi7xTBDk3Niy_E5fGs3oy3nwWHXlR5eF8B1_q83SFxMrg0x9ivR8l8alqMkxpgyJauaLXkH6zfGiADUn_8KT5M-AB5_TSm6K9fPVVX8xgbI0kTBgJjVtIyOICdf28IoYnAL_iBx&amp;amp;attredirects=0"&gt;Arduino Cheat Sheet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://learn.sparkfun.com/resources/Handouts/ProtoSnap/ProtoSnap%20Handout.pdf"&gt;Basic Arduino Reference Sheet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/arduinouno_r3_pinouts.png"&gt;&lt;img class="aligncenter size-full wp-image-386" title="ArduinoUno_R3_Pinouts" alt="Arduino Pinout" src="http://jeffskinnerbox.files.wordpress.com/2012/10/arduinouno_r3_pinouts.png" width="545" height="419" /&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="Arduino"></category></entry><entry><title>My Test Post</title><link href="/posts/2012/Sep/02/my-test-post/" rel="alternate"></link><published>2012-09-02T00:01:00-04:00</published><author><name>Jeff Irland</name></author><id>tag:,2012-09-02:posts/2012/Sep/02/my-test-post/</id><summary type="html">&lt;p&gt;Getting to know you, getting to know all about you .... come on sing along with me!!
Getting to know you, .....&lt;/p&gt;
&lt;p&gt;&lt;img alt="Wolf Trap" src="/images/wolf_trap.jpg" title="Wolf Trap, 1645 Trap Road Vienna, Virginia, 22182" /&gt;&lt;/p&gt;
&lt;p&gt;I went to &lt;a href="http://www.wolftrap.org/"&gt;Wolf Trap&lt;/a&gt; last night to see the King and I.&lt;/p&gt;</summary></entry></feed>